"use strict";let System,__instantiate;(()=>{const r=new Map;async function dI(mid,src){let id=mid.replace(/\.\w+$/i,"");if(id.includes("./")){const[o,...ia]=id.split("/").reverse(),[,...sa]=src.split("/").reverse(),oa=[o];let s=0,i;for(;i=ia.shift();)if(".."===i)s++;else{if("."===i)break;oa.push(i)}s<sa.length&&oa.push(...sa.slice(s)),id=oa.reverse().join("/")}return r.has(id)?gExpA(id):import(mid)}function gC(id,main){return{id:id,import:m=>dI(m,id),meta:{url:id,main:main}}}function gE(exp){return(id,v)=>{v="string"==typeof id?{[id]:v}:id;for(const[id,value]of Object.entries(v))Object.defineProperty(exp,id,{value:value,writable:!0,enumerable:!0})}}function rF(main){for(const[id,m]of r.entries()){const{f:f,exp:exp}=m,{execute:e,setters:s}=f(gE(exp),gC(id,id===main));delete m.f,m.e=e,m.s=s}}async function gExpA(id){if(!r.has(id))return;const m=r.get(id);if(m.s){const{d:d,e:e,s:s}=m;delete m.s,delete m.e;for(let i=0;i<s.length;i++)s[i](await gExpA(d[i]));const r=e();r&&await r}return m.exp}function gExp(id){if(!r.has(id))return;const m=r.get(id);if(m.s){const{d:d,e:e,s:s}=m;delete m.s,delete m.e;for(let i=0;i<s.length;i++)s[i](gExp(d[i]));e()}return m.exp}System={register(id,d,f){r.set(id,{d:d,f:f,exp:{}})}},__instantiate=(m,a)=>(System=__instantiate=void 0,rF(m),a?gExpA(m):gExp(m))})(),System.register("https://cdn.skypack.dev/-/typed-function@v2.0.0-PIfX8IIJDnSXLmzuTzCk/dist=es2020/typed-function",[],(function(exports_1,context_1){var commonjsGlobal,typedFunction,__esModule,__moduleName=context_1&&context_1.id;function createCommonjsModule(fn,basedir,module){return fn(module={path:basedir,exports:{},require:function(path,base){return commonjsRequire(path,null==base?module.path:base)}},module.exports),module.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}return{setters:[],execute:function(){commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},typedFunction=createCommonjsModule((function(module,exports){var root,factory;root=commonjsGlobal,factory=function(){function ok(){return!0}function notOk(){return!1}function undef(){}function create(){var _types=[{name:"number",test:function(x){return"number"==typeof x}},{name:"string",test:function(x){return"string"==typeof x}},{name:"boolean",test:function(x){return"boolean"==typeof x}},{name:"Function",test:function(x){return"function"==typeof x}},{name:"Array",test:Array.isArray},{name:"Date",test:function(x){return x instanceof Date}},{name:"RegExp",test:function(x){return x instanceof RegExp}},{name:"Object",test:function(x){return"object"==typeof x&&null!==x&&x.constructor===Object}},{name:"null",test:function(x){return null===x}},{name:"undefined",test:function(x){return void 0===x}}],anyType={name:"any",test:ok},_ignore=[],_conversions=[],typed={types:_types,conversions:_conversions,ignore:_ignore};function findTypeByName(typeName){var entry=findInArray(typed.types,(function(entry){return entry.name===typeName}));if(entry)return entry;if("any"===typeName)return anyType;var hint=findInArray(typed.types,(function(entry){return entry.name.toLowerCase()===typeName.toLowerCase()}));throw new TypeError('Unknown type "'+typeName+'"'+(hint?'. Did you mean "'+hint.name+'"?':""))}function findTypeIndex(type){return type===anyType?999:typed.types.indexOf(type)}function findTypeName(value){var entry=findInArray(typed.types,(function(entry){return entry.test(value)}));if(entry)return entry.name;throw new TypeError("Value has unknown type. Value: "+value)}function find(fn,signature){if(!fn.signatures)throw new TypeError("Function is no typed-function");var arr;if("string"==typeof signature){arr=signature.split(",");for(var i=0;i<arr.length;i++)arr[i]=arr[i].trim()}else{if(!Array.isArray(signature))throw new TypeError("String array or a comma separated string expected");arr=signature}var str=arr.join(","),match=fn.signatures[str];if(match)return match;throw new TypeError("Signature not found (signature: "+(fn.name||"unnamed")+"("+arr.join(", ")+"))")}function convert(value,type){var from=findTypeName(value);if(type===from)return value;for(var i=0;i<typed.conversions.length;i++){var conversion=typed.conversions[i];if(conversion.from===from&&conversion.to===type)return conversion.convert(value)}throw new Error("Cannot convert from "+from+" to "+type)}function stringifyParams(params){return params.map((function(param){var typeNames=param.types.map(getTypeName);return(param.restParam?"...":"")+typeNames.join("|")})).join(",")}function parseParam(param,conversions){var restParam=0===param.indexOf("..."),types,typeNames=(restParam?param.length>3?param.slice(3):"any":param).split("|").map(trim).filter(notEmpty).filter(notIgnore),matchingConversions=filterConversions(conversions,typeNames),exactTypes=typeNames.map((function(typeName){var type=findTypeByName(typeName);return{name:typeName,typeIndex:findTypeIndex(type),test:type.test,conversion:null,conversionIndex:-1}})),convertibleTypes=matchingConversions.map((function(conversion){var type=findTypeByName(conversion.from);return{name:conversion.from,typeIndex:findTypeIndex(type),test:type.test,conversion:conversion,conversionIndex:conversions.indexOf(conversion)}}));return{types:exactTypes.concat(convertibleTypes),restParam:restParam}}function parseSignature(signature,fn,conversions){var params=[];return""!==signature.trim()&&(params=signature.split(",").map(trim).map((function(param,index,array){var parsedParam=parseParam(param,conversions);if(parsedParam.restParam&&index!==array.length-1)throw new SyntaxError('Unexpected rest parameter "'+param+'": only allowed for the last parameter');return parsedParam}))),params.some(isInvalidParam)?null:{params:params,fn:fn}}function hasRestParam(params){var param=last(params);return!!param&&param.restParam}function hasConversions(param){return param.types.some((function(type){return null!=type.conversion}))}function compileTest(param){if(param&&0!==param.types.length){if(1===param.types.length)return findTypeByName(param.types[0].name).test;if(2===param.types.length){var test0=findTypeByName(param.types[0].name).test,test1=findTypeByName(param.types[1].name).test;return function or(x){return test0(x)||test1(x)}}var tests=param.types.map((function(type){return findTypeByName(type.name).test}));return function or(x){for(var i=0;i<tests.length;i++)if(tests[i](x))return!0;return!1}}return ok}function compileTests(params){var tests,test0,test1;if(hasRestParam(params)){var varIndex=(tests=initial(params).map(compileTest)).length,lastTest=compileTest(last(params)),testRestParam=function(args){for(var i=varIndex;i<args.length;i++)if(!lastTest(args[i]))return!1;return!0};return function testArgs(args){for(var i=0;i<tests.length;i++)if(!tests[i](args[i]))return!1;return testRestParam(args)&&args.length>=varIndex+1}}return 0===params.length?function testArgs(args){return 0===args.length}:1===params.length?(test0=compileTest(params[0]),function testArgs(args){return test0(args[0])&&1===args.length}):2===params.length?(test0=compileTest(params[0]),test1=compileTest(params[1]),function testArgs(args){return test0(args[0])&&test1(args[1])&&2===args.length}):(tests=params.map(compileTest),function testArgs(args){for(var i=0;i<tests.length;i++)if(!tests[i](args[i]))return!1;return args.length===tests.length})}function getParamAtIndex(signature,index){return index<signature.params.length?signature.params[index]:hasRestParam(signature.params)?last(signature.params):null}function getExpectedTypeNames(signature,index,excludeConversions){var param=getParamAtIndex(signature,index),types;return(param?excludeConversions?param.types.filter(isExactType):param.types:[]).map(getTypeName)}function getTypeName(type){return type.name}function isExactType(type){return null===type.conversion||void 0===type.conversion}function mergeExpectedParams(signatures,index){var typeNames=uniq(flatMap(signatures,(function(signature){return getExpectedTypeNames(signature,index,!1)})));return-1!==typeNames.indexOf("any")?["any"]:typeNames}function createError(name,args,signatures){var err,expected,_name=name||"unnamed",matchingSignatures=signatures,index;for(index=0;index<args.length;index++){var nextMatchingDefs=matchingSignatures.filter((function(signature){var test=compileTest(getParamAtIndex(signature,index));return(index<signature.params.length||hasRestParam(signature.params))&&test(args[index])}));if(0===nextMatchingDefs.length){if((expected=mergeExpectedParams(matchingSignatures,index)).length>0){var actualType=findTypeName(args[index]);return(err=new TypeError("Unexpected type of argument in function "+_name+" (expected: "+expected.join(" or ")+", actual: "+actualType+", index: "+index+")")).data={category:"wrongType",fn:_name,index:index,actual:actualType,expected:expected},err}}else matchingSignatures=nextMatchingDefs}var lengths=matchingSignatures.map((function(signature){return hasRestParam(signature.params)?1/0:signature.params.length}));if(args.length<Math.min.apply(null,lengths))return expected=mergeExpectedParams(matchingSignatures,index),(err=new TypeError("Too few arguments in function "+_name+" (expected: "+expected.join(" or ")+", index: "+args.length+")")).data={category:"tooFewArgs",fn:_name,index:args.length,expected:expected},err;var maxLength=Math.max.apply(null,lengths);return args.length>maxLength?((err=new TypeError("Too many arguments in function "+_name+" (expected: "+maxLength+", actual: "+args.length+")")).data={category:"tooManyArgs",fn:_name,index:args.length,expectedLength:maxLength},err):((err=new TypeError('Arguments of type "'+args.join(", ")+'" do not match any of the defined signatures of function '+_name+".")).data={category:"mismatch",actual:args.map(findTypeName)},err)}function getLowestTypeIndex(param){for(var min=999,i=0;i<param.types.length;i++)isExactType(param.types[i])&&(min=Math.min(min,param.types[i].typeIndex));return min}function getLowestConversionIndex(param){for(var min=999,i=0;i<param.types.length;i++)isExactType(param.types[i])||(min=Math.min(min,param.types[i].conversionIndex));return min}function compareParams(param1,param2){var c;return 0!=(c=param1.restParam-param2.restParam)?c:0!=(c=hasConversions(param1)-hasConversions(param2))?c:0!=(c=getLowestTypeIndex(param1)-getLowestTypeIndex(param2))?c:getLowestConversionIndex(param1)-getLowestConversionIndex(param2)}function compareSignatures(signature1,signature2){var len=Math.min(signature1.params.length,signature2.params.length),i,c;if(0!=(c=signature1.params.some(hasConversions)-signature2.params.some(hasConversions)))return c;for(i=0;i<len;i++)if(0!=(c=hasConversions(signature1.params[i])-hasConversions(signature2.params[i])))return c;for(i=0;i<len;i++)if(0!==(c=compareParams(signature1.params[i],signature2.params[i])))return c;return signature1.params.length-signature2.params.length}function filterConversions(conversions,typeNames){var matches={};return conversions.forEach((function(conversion){-1!==typeNames.indexOf(conversion.from)||-1===typeNames.indexOf(conversion.to)||matches[conversion.from]||(matches[conversion.from]=conversion)})),Object.keys(matches).map((function(from){return matches[from]}))}function compileArgsPreprocessing(params,fn){var fnConvert=fn;if(params.some(hasConversions)){var restParam=hasRestParam(params),compiledConversions=params.map(compileArgConversion);fnConvert=function convertArgs(){for(var args=[],last=restParam?arguments.length-1:arguments.length,i=0;i<last;i++)args[i]=compiledConversions[i](arguments[i]);return restParam&&(args[last]=arguments[last].map(compiledConversions[last])),fn.apply(this,args)}}var fnPreprocess=fnConvert;if(hasRestParam(params)){var offset=params.length-1;fnPreprocess=function preprocessRestParams(){return fnConvert.apply(this,slice(arguments,0,offset).concat([slice(arguments,offset)]))}}return fnPreprocess}function compileArgConversion(param){var test0,test1,conversion0,conversion1,tests=[],conversions=[];switch(param.types.forEach((function(type){type.conversion&&(tests.push(findTypeByName(type.conversion.from).test),conversions.push(type.conversion.convert))})),conversions.length){case 0:return function convertArg(arg){return arg};case 1:return test0=tests[0],conversion0=conversions[0],function convertArg(arg){return test0(arg)?conversion0(arg):arg};case 2:return test0=tests[0],test1=tests[1],conversion0=conversions[0],conversion1=conversions[1],function convertArg(arg){return test0(arg)?conversion0(arg):test1(arg)?conversion1(arg):arg};default:return function convertArg(arg){for(var i=0;i<conversions.length;i++)if(tests[i](arg))return conversions[i](arg);return arg}}}function createSignaturesMap(signatures){var signaturesMap={};return signatures.forEach((function(signature){signature.params.some(hasConversions)||splitParams(signature.params,!0).forEach((function(params){signaturesMap[stringifyParams(params)]=signature.fn}))})),signaturesMap}function splitParams(params,ignoreConversionTypes){function _splitParams(params,index,types){if(index<params.length){var param=params[index],filteredTypes=ignoreConversionTypes?param.types.filter(isExactType):param.types,typeGroups;if(param.restParam){var exactTypes=filteredTypes.filter(isExactType);typeGroups=exactTypes.length<filteredTypes.length?[exactTypes,filteredTypes]:[filteredTypes]}else typeGroups=filteredTypes.map((function(type){return[type]}));return flatMap(typeGroups,(function(typeGroup){return _splitParams(params,index+1,types.concat([typeGroup]))}))}var splittedParams;return[types.map((function(type,typeIndex){return{types:type,restParam:typeIndex===params.length-1&&hasRestParam(params)}}))]}return _splitParams(params,0,[])}function hasConflictingParams(signature1,signature2){for(var ii=Math.max(signature1.params.length,signature2.params.length),i=0;i<ii;i++){var typesNames1,typesNames2;if(!hasOverlap(getExpectedTypeNames(signature1,i,!0),getExpectedTypeNames(signature2,i,!0)))return!1}var len1=signature1.params.length,len2=signature2.params.length,restParam1=hasRestParam(signature1.params),restParam2=hasRestParam(signature2.params);return restParam1?restParam2?len1===len2:len2>=len1:restParam2?len1>=len2:len1===len2}function createTypedFunction(name,signaturesMap){if(0===Object.keys(signaturesMap).length)throw new SyntaxError("No signatures provided");var parsedSignatures=[];Object.keys(signaturesMap).map((function(signature){return parseSignature(signature,signaturesMap[signature],typed.conversions)})).filter(notNull).forEach((function(parsedSignature){var conflictingSignature=findInArray(parsedSignatures,(function(s){return hasConflictingParams(s,parsedSignature)}));if(conflictingSignature)throw new TypeError('Conflicting signatures "'+stringifyParams(conflictingSignature.params)+'" and "'+stringifyParams(parsedSignature.params)+'".');parsedSignatures.push(parsedSignature)}));var signatures=flatMap(parsedSignatures,(function(parsedSignature){var params;return(parsedSignature?splitParams(parsedSignature.params,!1):[]).map((function(params){return{params:params,fn:parsedSignature.fn}}))})).filter(notNull);signatures.sort(compareSignatures);var ok0=signatures[0]&&signatures[0].params.length<=2&&!hasRestParam(signatures[0].params),ok1=signatures[1]&&signatures[1].params.length<=2&&!hasRestParam(signatures[1].params),ok2=signatures[2]&&signatures[2].params.length<=2&&!hasRestParam(signatures[2].params),ok3=signatures[3]&&signatures[3].params.length<=2&&!hasRestParam(signatures[3].params),ok4=signatures[4]&&signatures[4].params.length<=2&&!hasRestParam(signatures[4].params),ok5=signatures[5]&&signatures[5].params.length<=2&&!hasRestParam(signatures[5].params),allOk=ok0&&ok1&&ok2&&ok3&&ok4&&ok5,tests=signatures.map((function(signature){return compileTests(signature.params)})),test00=ok0?compileTest(signatures[0].params[0]):notOk,test10=ok1?compileTest(signatures[1].params[0]):notOk,test20=ok2?compileTest(signatures[2].params[0]):notOk,test30=ok3?compileTest(signatures[3].params[0]):notOk,test40=ok4?compileTest(signatures[4].params[0]):notOk,test50=ok5?compileTest(signatures[5].params[0]):notOk,test01=ok0?compileTest(signatures[0].params[1]):notOk,test11=ok1?compileTest(signatures[1].params[1]):notOk,test21=ok2?compileTest(signatures[2].params[1]):notOk,test31=ok3?compileTest(signatures[3].params[1]):notOk,test41=ok4?compileTest(signatures[4].params[1]):notOk,test51=ok5?compileTest(signatures[5].params[1]):notOk,fns=signatures.map((function(signature){return compileArgsPreprocessing(signature.params,signature.fn)})),fn0=ok0?fns[0]:undef,fn1=ok1?fns[1]:undef,fn2=ok2?fns[2]:undef,fn3=ok3?fns[3]:undef,fn4=ok4?fns[4]:undef,fn5=ok5?fns[5]:undef,len0=ok0?signatures[0].params.length:-1,len1=ok1?signatures[1].params.length:-1,len2=ok2?signatures[2].params.length:-1,len3=ok3?signatures[3].params.length:-1,len4=ok4?signatures[4].params.length:-1,len5=ok5?signatures[5].params.length:-1,iStart=allOk?6:0,iEnd=signatures.length,generic=function generic(){for(var i=iStart;i<iEnd;i++)if(tests[i](arguments))return fns[i].apply(this,arguments);throw createError(name,arguments,signatures)},fn=function fn(arg0,arg1){return arguments.length===len0&&test00(arg0)&&test01(arg1)?fn0.apply(fn,arguments):arguments.length===len1&&test10(arg0)&&test11(arg1)?fn1.apply(fn,arguments):arguments.length===len2&&test20(arg0)&&test21(arg1)?fn2.apply(fn,arguments):arguments.length===len3&&test30(arg0)&&test31(arg1)?fn3.apply(fn,arguments):arguments.length===len4&&test40(arg0)&&test41(arg1)?fn4.apply(fn,arguments):arguments.length===len5&&test50(arg0)&&test51(arg1)?fn5.apply(fn,arguments):generic.apply(fn,arguments)};try{Object.defineProperty(fn,"name",{value:name})}catch(err){}return fn.signatures=createSignaturesMap(signatures),fn}function notIgnore(typeName){return-1===typed.ignore.indexOf(typeName)}function trim(str){return str.trim()}function notEmpty(str){return!!str}function notNull(value){return null!==value}function isInvalidParam(param){return 0===param.types.length}function initial(arr){return arr.slice(0,arr.length-1)}function last(arr){return arr[arr.length-1]}function slice(arr,start,end){return Array.prototype.slice.call(arr,start,end)}function contains(array,item){return-1!==array.indexOf(item)}function hasOverlap(array1,array2){for(var i=0;i<array1.length;i++)if(contains(array2,array1[i]))return!0;return!1}function findInArray(arr,test){for(var i=0;i<arr.length;i++)if(test(arr[i]))return arr[i]}function uniq(arr){for(var entries={},i=0;i<arr.length;i++)entries[arr[i]]=!0;return Object.keys(entries)}function flatMap(arr,callback){return Array.prototype.concat.apply([],arr.map(callback))}function getName(fns){for(var name="",i=0;i<fns.length;i++){var fn=fns[i];if(("object"==typeof fn.signatures||"string"==typeof fn.signature)&&""!==fn.name)if(""===name)name=fn.name;else if(name!==fn.name){var err=new Error("Function names do not match (expected: "+name+", actual: "+fn.name+")");throw err.data={actual:fn.name,expected:name},err}}return name}function extractSignatures(fns){var err,signaturesMap={};function validateUnique(_signature,_fn){if(signaturesMap.hasOwnProperty(_signature)&&_fn!==signaturesMap[_signature])throw(err=new Error('Signature "'+_signature+'" is defined twice')).data={signature:_signature},err}for(var i=0;i<fns.length;i++){var fn=fns[i];if("object"==typeof fn.signatures)for(var signature in fn.signatures)fn.signatures.hasOwnProperty(signature)&&(validateUnique(signature,fn.signatures[signature]),signaturesMap[signature]=fn.signatures[signature]);else{if("string"!=typeof fn.signature)throw(err=new TypeError("Function is no typed-function (index: "+i+")")).data={index:i},err;validateUnique(fn.signature,fn),signaturesMap[fn.signature]=fn}}return signaturesMap}return(typed=createTypedFunction("typed",{"string, Object":createTypedFunction,Object:function(signaturesMap){var fns=[],name;for(var signature in signaturesMap)signaturesMap.hasOwnProperty(signature)&&fns.push(signaturesMap[signature]);return createTypedFunction(getName(fns),signaturesMap)},"...Function":function(fns){return createTypedFunction(getName(fns),extractSignatures(fns))},"string, ...Function":function(name,fns){return createTypedFunction(name,extractSignatures(fns))}})).create=create,typed.types=_types,typed.conversions=_conversions,typed.ignore=_ignore,typed.convert=convert,typed.find=find,typed.addType=function(type,beforeObjectTest){if(!type||"string"!=typeof type.name||"function"!=typeof type.test)throw new TypeError("Object with properties {name: string, test: function} expected");if(!1!==beforeObjectTest)for(var i=0;i<typed.types.length;i++)if("Object"===typed.types[i].name)return void typed.types.splice(i,0,type);typed.types.push(type)},typed.addConversion=function(conversion){if(!conversion||"string"!=typeof conversion.from||"string"!=typeof conversion.to||"function"!=typeof conversion.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");typed.conversions.push(conversion)},typed}return create()},module.exports=factory()})),exports_1("default",typedFunction),exports_1("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/-/decimal.js@v10.2.0-FAMDtm6MZaoTqtvOmlHu/dist=es2020/decimal",[],(function(exports_2,context_2){var EXP_LIMIT,MAX_DIGITS,NUMERALS,LN10,PI,DEFAULTS,inexact,quadrant,external,decimalError,invalidArgument,precisionLimitExceeded,cryptoUnavailable,mathfloor,mathpow,isBinary,isHex,isOctal,isDecimal,BASE,LOG_BASE,MAX_SAFE_INTEGER,LN10_PRECISION,PI_PRECISION,P,divide,Decimal,__esModule,__moduleName=context_2&&context_2.id;function digitsToString(d){var i,k,ws,indexOfLastWord=d.length-1,str="",w=d[0];if(indexOfLastWord>0){for(str+=w,i=1;i<indexOfLastWord;i++)ws=d[i]+"",(k=LOG_BASE-ws.length)&&(str+=getZeroString(k)),str+=ws;w=d[i],(k=LOG_BASE-(ws=w+"").length)&&(str+=getZeroString(k))}else if(0===w)return"0";for(;w%10==0;)w/=10;return str+w}function checkInt32(i,min,max){if(i!==~~i||i<min||i>max)throw Error(invalidArgument+i)}function checkRoundingDigits(d,i,rm,repeating){var di,k,r,rd;for(k=d[0];k>=10;k/=10)--i;return--i<0?(i+=LOG_BASE,di=0):(di=Math.ceil((i+1)/LOG_BASE),i%=LOG_BASE),k=mathpow(10,LOG_BASE-i),rd=d[di]%k|0,null==repeating?i<3?(0==i?rd=rd/100|0:1==i&&(rd=rd/10|0),r=rm<4&&99999==rd||rm>3&&49999==rd||5e4==rd||0==rd):r=(rm<4&&rd+1==k||rm>3&&rd+1==k/2)&&(d[di+1]/k/100|0)==mathpow(10,i-2)-1||(rd==k/2||0==rd)&&0==(d[di+1]/k/100|0):i<4?(0==i?rd=rd/1e3|0:1==i?rd=rd/100|0:2==i&&(rd=rd/10|0),r=(repeating||rm<4)&&9999==rd||!repeating&&rm>3&&4999==rd):r=((repeating||rm<4)&&rd+1==k||!repeating&&rm>3&&rd+1==k/2)&&(d[di+1]/k/1e3|0)==mathpow(10,i-3)-1,r}function convertBase(str,baseIn,baseOut){for(var j,arr=[0],arrL,i=0,strL=str.length;i<strL;){for(arrL=arr.length;arrL--;)arr[arrL]*=baseIn;for(arr[0]+=NUMERALS.indexOf(str.charAt(i++)),j=0;j<arr.length;j++)arr[j]>baseOut-1&&(void 0===arr[j+1]&&(arr[j+1]=0),arr[j+1]+=arr[j]/baseOut|0,arr[j]%=baseOut)}return arr.reverse()}function cosine(Ctor,x){var k,y,len=x.d.length;len<32?y=(1/tinyPow(4,k=Math.ceil(len/3))).toString():(k=16,y="2.3283064365386962890625e-10"),Ctor.precision+=k,x=taylorSeries(Ctor,1,x.times(y),new Ctor(1));for(var i=k;i--;){var cos2x=x.times(x);x=cos2x.times(cos2x).minus(cos2x).times(8).plus(1)}return Ctor.precision-=k,x}function finalise(x,sd,rm,isTruncated){var digits,i,j,k,rd,roundUp,w,xd,xdi,Ctor=x.constructor;out:if(null!=sd){if(!(xd=x.d))return x;for(digits=1,k=xd[0];k>=10;k/=10)digits++;if((i=sd-digits)<0)i+=LOG_BASE,j=sd,rd=(w=xd[xdi=0])/mathpow(10,digits-j-1)%10|0;else if((xdi=Math.ceil((i+1)/LOG_BASE))>=(k=xd.length)){if(!isTruncated)break out;for(;k++<=xdi;)xd.push(0);w=rd=0,digits=1,j=(i%=LOG_BASE)-LOG_BASE+1}else{for(w=k=xd[xdi],digits=1;k>=10;k/=10)digits++;rd=(j=(i%=LOG_BASE)-LOG_BASE+digits)<0?0:w/mathpow(10,digits-j-1)%10|0}if(isTruncated=isTruncated||sd<0||void 0!==xd[xdi+1]||(j<0?w:w%mathpow(10,digits-j-1)),roundUp=rm<4?(rd||isTruncated)&&(0==rm||rm==(x.s<0?3:2)):rd>5||5==rd&&(4==rm||isTruncated||6==rm&&(i>0?j>0?w/mathpow(10,digits-j):0:xd[xdi-1])%10&1||rm==(x.s<0?8:7)),sd<1||!xd[0])return xd.length=0,roundUp?(sd-=x.e+1,xd[0]=mathpow(10,(LOG_BASE-sd%LOG_BASE)%LOG_BASE),x.e=-sd||0):xd[0]=x.e=0,x;if(0==i?(xd.length=xdi,k=1,xdi--):(xd.length=xdi+1,k=mathpow(10,LOG_BASE-i),xd[xdi]=j>0?(w/mathpow(10,digits-j)%mathpow(10,j)|0)*k:0),roundUp)for(;;){if(0==xdi){for(i=1,j=xd[0];j>=10;j/=10)i++;for(j=xd[0]+=k,k=1;j>=10;j/=10)k++;i!=k&&(x.e++,xd[0]==BASE&&(xd[0]=1));break}if(xd[xdi]+=k,xd[xdi]!=BASE)break;xd[xdi--]=0,k=1}for(i=xd.length;0===xd[--i];)xd.pop()}return external&&(x.e>Ctor.maxE?(x.d=null,x.e=NaN):x.e<Ctor.minE&&(x.e=0,x.d=[0])),x}function finiteToString(x,isExp,sd){if(!x.isFinite())return nonFiniteToString(x);var k,e=x.e,str=digitsToString(x.d),len=str.length;return isExp?(sd&&(k=sd-len)>0?str=str.charAt(0)+"."+str.slice(1)+getZeroString(k):len>1&&(str=str.charAt(0)+"."+str.slice(1)),str=str+(x.e<0?"e":"e+")+x.e):e<0?(str="0."+getZeroString(-e-1)+str,sd&&(k=sd-len)>0&&(str+=getZeroString(k))):e>=len?(str+=getZeroString(e+1-len),sd&&(k=sd-e-1)>0&&(str=str+"."+getZeroString(k))):((k=e+1)<len&&(str=str.slice(0,k)+"."+str.slice(k)),sd&&(k=sd-len)>0&&(e+1===len&&(str+="."),str+=getZeroString(k))),str}function getBase10Exponent(digits,e){var w=digits[0];for(e*=LOG_BASE;w>=10;w/=10)e++;return e}function getLn10(Ctor,sd,pr){if(sd>LN10_PRECISION)throw external=!0,pr&&(Ctor.precision=pr),Error(precisionLimitExceeded);return finalise(new Ctor(LN10),sd,1,!0)}function getPi(Ctor,sd,rm){if(sd>PI_PRECISION)throw Error(precisionLimitExceeded);return finalise(new Ctor(PI),sd,rm,!0)}function getPrecision(digits){var w=digits.length-1,len=w*LOG_BASE+1;if(w=digits[w]){for(;w%10==0;w/=10)len--;for(w=digits[0];w>=10;w/=10)len++}return len}function getZeroString(k){for(var zs="";k--;)zs+="0";return zs}function intPow(Ctor,x,n,pr){var isTruncated,r=new Ctor(1),k=Math.ceil(pr/LOG_BASE+4);for(external=!1;;){if(n%2&&truncate((r=r.times(x)).d,k)&&(isTruncated=!0),0===(n=mathfloor(n/2))){n=r.d.length-1,isTruncated&&0===r.d[n]&&++r.d[n];break}truncate((x=x.times(x)).d,k)}return external=!0,r}function isOdd(n){return 1&n.d[n.d.length-1]}function maxOrMin(Ctor,args,ltgt){for(var y,x=new Ctor(args[0]),i=0;++i<args.length;){if(!(y=new Ctor(args[i])).s){x=y;break}x[ltgt](y)&&(x=y)}return x}function naturalExponential(x,sd){var denominator,guard,j,pow,sum,t,wpr,rep=0,i=0,k=0,Ctor=x.constructor,rm=Ctor.rounding,pr=Ctor.precision;if(!x.d||!x.d[0]||x.e>17)return new Ctor(x.d?x.d[0]?x.s<0?0:1/0:1:x.s?x.s<0?0:x:NaN);for(null==sd?(external=!1,wpr=pr):wpr=sd,t=new Ctor(.03125);x.e>-2;)x=x.times(t),k+=5;for(wpr+=guard=Math.log(mathpow(2,k))/Math.LN10*2+5|0,denominator=pow=sum=new Ctor(1),Ctor.precision=wpr;;){if(pow=finalise(pow.times(x),wpr,1),denominator=denominator.times(++i),digitsToString((t=sum.plus(divide(pow,denominator,wpr,1))).d).slice(0,wpr)===digitsToString(sum.d).slice(0,wpr)){for(j=k;j--;)sum=finalise(sum.times(sum),wpr,1);if(null!=sd)return Ctor.precision=pr,sum;if(!(rep<3&&checkRoundingDigits(sum.d,wpr-guard,rm,rep)))return finalise(sum,Ctor.precision=pr,rm,external=!0);Ctor.precision=wpr+=10,denominator=pow=t=new Ctor(1),i=0,rep++}sum=t}}function naturalLogarithm(y,sd){var c,c0,denominator,e,numerator,rep,sum,t,wpr,x1,x2,n=1,guard=10,x=y,xd=x.d,Ctor=x.constructor,rm=Ctor.rounding,pr=Ctor.precision;if(x.s<0||!xd||!xd[0]||!x.e&&1==xd[0]&&1==xd.length)return new Ctor(xd&&!xd[0]?-1/0:1!=x.s?NaN:xd?0:x);if(null==sd?(external=!1,wpr=pr):wpr=sd,Ctor.precision=wpr+=10,c0=(c=digitsToString(xd)).charAt(0),!(Math.abs(e=x.e)<15e14))return t=getLn10(Ctor,wpr+2,pr).times(e+""),x=naturalLogarithm(new Ctor(c0+"."+c.slice(1)),wpr-10).plus(t),Ctor.precision=pr,null==sd?finalise(x,pr,rm,external=!0):x;for(;c0<7&&1!=c0||1==c0&&c.charAt(1)>3;)c0=(c=digitsToString((x=x.times(y)).d)).charAt(0),n++;for(e=x.e,c0>1?(x=new Ctor("0."+c),e++):x=new Ctor(c0+"."+c.slice(1)),x1=x,sum=numerator=x=divide(x.minus(1),x.plus(1),wpr,1),x2=finalise(x.times(x),wpr,1),denominator=3;;){if(numerator=finalise(numerator.times(x2),wpr,1),digitsToString((t=sum.plus(divide(numerator,new Ctor(denominator),wpr,1))).d).slice(0,wpr)===digitsToString(sum.d).slice(0,wpr)){if(sum=sum.times(2),0!==e&&(sum=sum.plus(getLn10(Ctor,wpr+2,pr).times(e+""))),sum=divide(sum,new Ctor(n),wpr,1),null!=sd)return Ctor.precision=pr,sum;if(!checkRoundingDigits(sum.d,wpr-10,rm,rep))return finalise(sum,Ctor.precision=pr,rm,external=!0);Ctor.precision=wpr+=10,t=numerator=x=divide(x1.minus(1),x1.plus(1),wpr,1),x2=finalise(x.times(x),wpr,1),denominator=rep=1}sum=t,denominator+=2}}function nonFiniteToString(x){return String(x.s*x.s/0)}function parseDecimal(x,str){var e,i,len;for((e=str.indexOf("."))>-1&&(str=str.replace(".","")),(i=str.search(/e/i))>0?(e<0&&(e=i),e+=+str.slice(i+1),str=str.substring(0,i)):e<0&&(e=str.length),i=0;48===str.charCodeAt(i);i++);for(len=str.length;48===str.charCodeAt(len-1);--len);if(str=str.slice(i,len)){if(len-=i,x.e=e=e-i-1,x.d=[],i=(e+1)%LOG_BASE,e<0&&(i+=LOG_BASE),i<len){for(i&&x.d.push(+str.slice(0,i)),len-=LOG_BASE;i<len;)x.d.push(+str.slice(i,i+=LOG_BASE));str=str.slice(i),i=LOG_BASE-str.length}else i-=len;for(;i--;)str+="0";x.d.push(+str),external&&(x.e>x.constructor.maxE?(x.d=null,x.e=NaN):x.e<x.constructor.minE&&(x.e=0,x.d=[0]))}else x.e=0,x.d=[0];return x}function parseOther(x,str){var base,Ctor,divisor,i,isFloat,len,p,xd,xe;if("Infinity"===str||"NaN"===str)return+str||(x.s=NaN),x.e=NaN,x.d=null,x;if(isHex.test(str))base=16,str=str.toLowerCase();else if(isBinary.test(str))base=2;else{if(!isOctal.test(str))throw Error(invalidArgument+str);base=8}for((i=str.search(/p/i))>0?(p=+str.slice(i+1),str=str.substring(2,i)):str=str.slice(2),isFloat=(i=str.indexOf("."))>=0,Ctor=x.constructor,isFloat&&(i=(len=(str=str.replace(".","")).length)-i,divisor=intPow(Ctor,new Ctor(base),i,2*i)),i=xe=(xd=convertBase(str,base,BASE)).length-1;0===xd[i];--i)xd.pop();return i<0?new Ctor(0*x.s):(x.e=getBase10Exponent(xd,xe),x.d=xd,external=!1,isFloat&&(x=divide(x,divisor,4*len)),p&&(x=x.times(Math.abs(p)<54?mathpow(2,p):Decimal.pow(2,p))),external=!0,x)}function sine(Ctor,x){var k,len=x.d.length;if(len<3)return taylorSeries(Ctor,2,x,x);k=(k=1.4*Math.sqrt(len))>16?16:0|k,x=taylorSeries(Ctor,2,x=x.times(1/tinyPow(5,k)),x);for(var sin2_x,d5=new Ctor(5),d16=new Ctor(16),d20=new Ctor(20);k--;)sin2_x=x.times(x),x=x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));return x}function taylorSeries(Ctor,n,x,y,isHyperbolic){var j,t,u,x2,pr=Ctor.precision,k=Math.ceil(pr/LOG_BASE);for(external=!1,x2=x.times(x),u=new Ctor(y);;){if(t=divide(u.times(x2),new Ctor(n++*n++),pr,1),u=isHyperbolic?y.plus(t):y.minus(t),y=divide(t.times(x2),new Ctor(n++*n++),pr,1),void 0!==(t=u.plus(y)).d[k]){for(j=k;t.d[j]===u.d[j]&&j--;);if(-1==j)break}j=u,u=y,y=t,t=j}return external=!0,t.d.length=k+1,t}function tinyPow(b,e){for(var n=b;--e;)n*=b;return n}function toLessThanHalfPi(Ctor,x){var t,isNeg=x.s<0,pi=getPi(Ctor,Ctor.precision,1),halfPi=pi.times(.5);if((x=x.abs()).lte(halfPi))return quadrant=isNeg?4:1,x;if((t=x.divToInt(pi)).isZero())quadrant=isNeg?3:2;else{if((x=x.minus(t.times(pi))).lte(halfPi))return quadrant=isOdd(t)?isNeg?2:3:isNeg?4:1,x;quadrant=isOdd(t)?isNeg?1:4:isNeg?3:2}return x.minus(pi).abs()}function toStringBinary(x,baseOut,sd,rm){var base,e,i,k,len,roundUp,str,xd,y,Ctor=x.constructor,isExp=void 0!==sd;if(isExp?(checkInt32(sd,1,MAX_DIGITS),void 0===rm?rm=Ctor.rounding:checkInt32(rm,0,8)):(sd=Ctor.precision,rm=Ctor.rounding),x.isFinite()){for(isExp?(base=2,16==baseOut?sd=4*sd-3:8==baseOut&&(sd=3*sd-2)):base=baseOut,(i=(str=finiteToString(x)).indexOf("."))>=0&&(str=str.replace(".",""),(y=new Ctor(1)).e=str.length-i,y.d=convertBase(finiteToString(y),10,base),y.e=y.d.length),e=len=(xd=convertBase(str,10,base)).length;0==xd[--len];)xd.pop();if(xd[0]){if(i<0?e--:((x=new Ctor(x)).d=xd,x.e=e,xd=(x=divide(x,y,sd,rm,0,base)).d,e=x.e,roundUp=inexact),i=xd[sd],k=base/2,roundUp=roundUp||void 0!==xd[sd+1],roundUp=rm<4?(void 0!==i||roundUp)&&(0===rm||rm===(x.s<0?3:2)):i>k||i===k&&(4===rm||roundUp||6===rm&&1&xd[sd-1]||rm===(x.s<0?8:7)),xd.length=sd,roundUp)for(;++xd[--sd]>base-1;)xd[sd]=0,sd||(++e,xd.unshift(1));for(len=xd.length;!xd[len-1];--len);for(i=0,str="";i<len;i++)str+=NUMERALS.charAt(xd[i]);if(isExp){if(len>1)if(16==baseOut||8==baseOut){for(i=16==baseOut?4:3,--len;len%i;len++)str+="0";for(len=(xd=convertBase(str,base,baseOut)).length;!xd[len-1];--len);for(i=1,str="1.";i<len;i++)str+=NUMERALS.charAt(xd[i])}else str=str.charAt(0)+"."+str.slice(1);str=str+(e<0?"p":"p+")+e}else if(e<0){for(;++e;)str="0"+str;str="0."+str}else if(++e>len)for(e-=len;e--;)str+="0";else e<len&&(str=str.slice(0,e)+"."+str.slice(e))}else str=isExp?"0p+0":"0";str=(16==baseOut?"0x":2==baseOut?"0b":8==baseOut?"0o":"")+str}else str=nonFiniteToString(x);return x.s<0?"-"+str:str}function truncate(arr,len){if(arr.length>len)return arr.length=len,!0}function abs(x){return new this(x).abs()}function acos(x){return new this(x).acos()}function acosh(x){return new this(x).acosh()}function add(x,y){return new this(x).plus(y)}function asin(x){return new this(x).asin()}function asinh(x){return new this(x).asinh()}function atan(x){return new this(x).atan()}function atanh(x){return new this(x).atanh()}function atan2(y,x){y=new this(y),x=new this(x);var r,pr=this.precision,rm=this.rounding,wpr=pr+4;return y.s&&x.s?y.d||x.d?!x.d||y.isZero()?(r=x.s<0?getPi(this,pr,rm):new this(0)).s=y.s:!y.d||x.isZero()?(r=getPi(this,wpr,1).times(.5)).s=y.s:x.s<0?(this.precision=wpr,this.rounding=1,r=this.atan(divide(y,x,wpr,1)),x=getPi(this,wpr,1),this.precision=pr,this.rounding=rm,r=y.s<0?r.minus(x):r.plus(x)):r=this.atan(divide(y,x,wpr,1)):(r=getPi(this,wpr,1).times(x.s>0?.25:.75)).s=y.s:r=new this(NaN),r}function cbrt(x){return new this(x).cbrt()}function ceil(x){return finalise(x=new this(x),x.e+1,2)}function config(obj){if(!obj||"object"!=typeof obj)throw Error(decimalError+"Object expected");var i,p,v,useDefaults=!0===obj.defaults,ps=["precision",1,MAX_DIGITS,"rounding",0,8,"toExpNeg",-EXP_LIMIT,0,"toExpPos",0,EXP_LIMIT,"maxE",0,EXP_LIMIT,"minE",-EXP_LIMIT,0,"modulo",0,9];for(i=0;i<ps.length;i+=3)if(p=ps[i],useDefaults&&(this[p]=DEFAULTS[p]),void 0!==(v=obj[p])){if(!(mathfloor(v)===v&&v>=ps[i+1]&&v<=ps[i+2]))throw Error(invalidArgument+p+": "+v);this[p]=v}if(p="crypto",useDefaults&&(this[p]=DEFAULTS[p]),void 0!==(v=obj[p])){if(!0!==v&&!1!==v&&0!==v&&1!==v)throw Error(invalidArgument+p+": "+v);if(v){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(cryptoUnavailable);this[p]=!0}else this[p]=!1}return this}function cos(x){return new this(x).cos()}function cosh(x){return new this(x).cosh()}function clone(obj){var i,p,ps;function Decimal(v){var e,i,t,x=this;if(!(x instanceof Decimal))return new Decimal(v);if(x.constructor=Decimal,v instanceof Decimal)return x.s=v.s,void(external?!v.d||v.e>Decimal.maxE?(x.e=NaN,x.d=null):v.e<Decimal.minE?(x.e=0,x.d=[0]):(x.e=v.e,x.d=v.d.slice()):(x.e=v.e,x.d=v.d?v.d.slice():v.d));if("number"===(t=typeof v)){if(0===v)return x.s=1/v<0?-1:1,x.e=0,void(x.d=[0]);if(v<0?(v=-v,x.s=-1):x.s=1,v===~~v&&v<1e7){for(e=0,i=v;i>=10;i/=10)e++;return void(external?e>Decimal.maxE?(x.e=NaN,x.d=null):e<Decimal.minE?(x.e=0,x.d=[0]):(x.e=e,x.d=[v]):(x.e=e,x.d=[v]))}return 0*v!=0?(v||(x.s=NaN),x.e=NaN,void(x.d=null)):parseDecimal(x,v.toString())}if("string"!==t)throw Error(invalidArgument+v);return 45===(i=v.charCodeAt(0))?(v=v.slice(1),x.s=-1):(43===i&&(v=v.slice(1)),x.s=1),isDecimal.test(v)?parseDecimal(x,v):parseOther(x,v)}if(Decimal.prototype=P,Decimal.ROUND_UP=0,Decimal.ROUND_DOWN=1,Decimal.ROUND_CEIL=2,Decimal.ROUND_FLOOR=3,Decimal.ROUND_HALF_UP=4,Decimal.ROUND_HALF_DOWN=5,Decimal.ROUND_HALF_EVEN=6,Decimal.ROUND_HALF_CEIL=7,Decimal.ROUND_HALF_FLOOR=8,Decimal.EUCLID=9,Decimal.config=Decimal.set=config,Decimal.clone=clone,Decimal.isDecimal=isDecimalInstance,Decimal.abs=abs,Decimal.acos=acos,Decimal.acosh=acosh,Decimal.add=add,Decimal.asin=asin,Decimal.asinh=asinh,Decimal.atan=atan,Decimal.atanh=atanh,Decimal.atan2=atan2,Decimal.cbrt=cbrt,Decimal.ceil=ceil,Decimal.cos=cos,Decimal.cosh=cosh,Decimal.div=div,Decimal.exp=exp,Decimal.floor=floor,Decimal.hypot=hypot,Decimal.ln=ln,Decimal.log=log,Decimal.log10=log10,Decimal.log2=log2,Decimal.max=max,Decimal.min=min,Decimal.mod=mod,Decimal.mul=mul,Decimal.pow=pow,Decimal.random=random,Decimal.round=round,Decimal.sign=sign,Decimal.sin=sin,Decimal.sinh=sinh,Decimal.sqrt=sqrt,Decimal.sub=sub,Decimal.tan=tan,Decimal.tanh=tanh,Decimal.trunc=trunc,void 0===obj&&(obj={}),obj&&!0!==obj.defaults)for(ps=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],i=0;i<ps.length;)obj.hasOwnProperty(p=ps[i++])||(obj[p]=this[p]);return Decimal.config(obj),Decimal}function div(x,y){return new this(x).div(y)}function exp(x){return new this(x).exp()}function floor(x){return finalise(x=new this(x),x.e+1,3)}function hypot(){var i,n,t=new this(0);for(external=!1,i=0;i<arguments.length;)if((n=new this(arguments[i++])).d)t.d&&(t=t.plus(n.times(n)));else{if(n.s)return external=!0,new this(1/0);t=n}return external=!0,t.sqrt()}function isDecimalInstance(obj){return obj instanceof Decimal||obj&&"[object Decimal]"===obj.name||!1}function ln(x){return new this(x).ln()}function log(x,y){return new this(x).log(y)}function log2(x){return new this(x).log(2)}function log10(x){return new this(x).log(10)}function max(){return maxOrMin(this,arguments,"lt")}function min(){return maxOrMin(this,arguments,"gt")}function mod(x,y){return new this(x).mod(y)}function mul(x,y){return new this(x).mul(y)}function pow(x,y){return new this(x).pow(y)}function random(sd){var d,e,k,n,i=0,r=new this(1),rd=[];if(void 0===sd?sd=this.precision:checkInt32(sd,1,MAX_DIGITS),k=Math.ceil(sd/LOG_BASE),this.crypto)if(crypto.getRandomValues)for(d=crypto.getRandomValues(new Uint32Array(k));i<k;)(n=d[i])>=429e7?d[i]=crypto.getRandomValues(new Uint32Array(1))[0]:rd[i++]=n%1e7;else{if(!crypto.randomBytes)throw Error(cryptoUnavailable);for(d=crypto.randomBytes(k*=4);i<k;)(n=d[i]+(d[i+1]<<8)+(d[i+2]<<16)+((127&d[i+3])<<24))>=214e7?crypto.randomBytes(4).copy(d,i):(rd.push(n%1e7),i+=4);i=k/4}else for(;i<k;)rd[i++]=1e7*Math.random()|0;for(k=rd[--i],sd%=LOG_BASE,k&&sd&&(n=mathpow(10,LOG_BASE-sd),rd[i]=(k/n|0)*n);0===rd[i];i--)rd.pop();if(i<0)e=0,rd=[0];else{for(e=-1;0===rd[0];e-=LOG_BASE)rd.shift();for(k=1,n=rd[0];n>=10;n/=10)k++;k<LOG_BASE&&(e-=LOG_BASE-k)}return r.e=e,r.d=rd,r}function round(x){return finalise(x=new this(x),x.e+1,this.rounding)}function sign(x){return(x=new this(x)).d?x.d[0]?x.s:0*x.s:x.s||NaN}function sin(x){return new this(x).sin()}function sinh(x){return new this(x).sinh()}function sqrt(x){return new this(x).sqrt()}function sub(x,y){return new this(x).sub(y)}function tan(x){return new this(x).tan()}function tanh(x){return new this(x).tanh()}function trunc(x){return finalise(x=new this(x),x.e+1,1)}return{setters:[],execute:function(){MAX_DIGITS=1e9,NUMERALS="0123456789abcdef",LN10="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",PI="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",DEFAULTS={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-(EXP_LIMIT=9e15),maxE:EXP_LIMIT,crypto:!1},external=!0,invalidArgument=(decimalError="[DecimalError] ")+"Invalid argument: ",precisionLimitExceeded=decimalError+"Precision limit exceeded",cryptoUnavailable=decimalError+"crypto unavailable",mathfloor=Math.floor,mathpow=Math.pow,isBinary=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,isHex=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,isOctal=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,isDecimal=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,BASE=1e7,LOG_BASE=7,MAX_SAFE_INTEGER=9007199254740991,LN10_PRECISION=LN10.length-1,PI_PRECISION=PI.length-1,(P={name:"[object Decimal]"}).absoluteValue=P.abs=function(){var x=new this.constructor(this);return x.s<0&&(x.s=1),finalise(x)},P.ceil=function(){return finalise(new this.constructor(this),this.e+1,2)},P.comparedTo=P.cmp=function(y){var i,j,xdL,ydL,x=this,xd=x.d,yd=(y=new x.constructor(y)).d,xs=x.s,ys=y.s;if(!xd||!yd)return xs&&ys?xs!==ys?xs:xd===yd?0:!xd^xs<0?1:-1:NaN;if(!xd[0]||!yd[0])return xd[0]?xs:yd[0]?-ys:0;if(xs!==ys)return xs;if(x.e!==y.e)return x.e>y.e^xs<0?1:-1;for(i=0,j=(xdL=xd.length)<(ydL=yd.length)?xdL:ydL;i<j;++i)if(xd[i]!==yd[i])return xd[i]>yd[i]^xs<0?1:-1;return xdL===ydL?0:xdL>ydL^xs<0?1:-1},P.cosine=P.cos=function(){var pr,rm,x=this,Ctor=x.constructor;return x.d?x.d[0]?(pr=Ctor.precision,rm=Ctor.rounding,Ctor.precision=pr+Math.max(x.e,x.sd())+LOG_BASE,Ctor.rounding=1,x=cosine(Ctor,toLessThanHalfPi(Ctor,x)),Ctor.precision=pr,Ctor.rounding=rm,finalise(2==quadrant||3==quadrant?x.neg():x,pr,rm,!0)):new Ctor(1):new Ctor(NaN)},P.cubeRoot=P.cbrt=function(){var e,m,n,r,rep,s,sd,t,t3,t3plusx,x=this,Ctor=x.constructor;if(!x.isFinite()||x.isZero())return new Ctor(x);for(external=!1,(s=x.s*mathpow(x.s*x,1/3))&&Math.abs(s)!=1/0?r=new Ctor(s.toString()):(n=digitsToString(x.d),(s=((e=x.e)-n.length+1)%3)&&(n+=1==s||-2==s?"0":"00"),s=mathpow(n,1/3),e=mathfloor((e+1)/3)-(e%3==(e<0?-1:2)),(r=new Ctor(n=s==1/0?"5e"+e:(n=s.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=x.s),sd=(e=Ctor.precision)+3;;)if(t3plusx=(t3=(t=r).times(t).times(t)).plus(x),r=divide(t3plusx.plus(x).times(t),t3plusx.plus(t3),sd+2,1),digitsToString(t.d).slice(0,sd)===(n=digitsToString(r.d)).slice(0,sd)){if("9999"!=(n=n.slice(sd-3,sd+1))&&(rep||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(finalise(r,e+1,1),m=!r.times(r).times(r).eq(x));break}if(!rep&&(finalise(t,e+1,0),t.times(t).times(t).eq(x))){r=t;break}sd+=4,rep=1}return external=!0,finalise(r,e,Ctor.rounding,m)},P.decimalPlaces=P.dp=function(){var w,d=this.d,n=NaN;if(d){if(n=((w=d.length-1)-mathfloor(this.e/LOG_BASE))*LOG_BASE,w=d[w])for(;w%10==0;w/=10)n--;n<0&&(n=0)}return n},P.dividedBy=P.div=function(y){return divide(this,new this.constructor(y))},P.dividedToIntegerBy=P.divToInt=function(y){var x=this,Ctor=x.constructor;return finalise(divide(x,new Ctor(y),0,1,1),Ctor.precision,Ctor.rounding)},P.equals=P.eq=function(y){return 0===this.cmp(y)},P.floor=function(){return finalise(new this.constructor(this),this.e+1,3)},P.greaterThan=P.gt=function(y){return this.cmp(y)>0},P.greaterThanOrEqualTo=P.gte=function(y){var k=this.cmp(y);return 1==k||0===k},P.hyperbolicCosine=P.cosh=function(){var k,n,pr,rm,len,x=this,Ctor=x.constructor,one=new Ctor(1);if(!x.isFinite())return new Ctor(x.s?1/0:NaN);if(x.isZero())return one;pr=Ctor.precision,rm=Ctor.rounding,Ctor.precision=pr+Math.max(x.e,x.sd())+4,Ctor.rounding=1,(len=x.d.length)<32?n=(1/tinyPow(4,k=Math.ceil(len/3))).toString():(k=16,n="2.3283064365386962890625e-10"),x=taylorSeries(Ctor,1,x.times(n),new Ctor(1),!0);for(var cosh2_x,i=k,d8=new Ctor(8);i--;)cosh2_x=x.times(x),x=one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));return finalise(x,Ctor.precision=pr,Ctor.rounding=rm,!0)},P.hyperbolicSine=P.sinh=function(){var k,pr,rm,len,x=this,Ctor=x.constructor;if(!x.isFinite()||x.isZero())return new Ctor(x);if(pr=Ctor.precision,rm=Ctor.rounding,Ctor.precision=pr+Math.max(x.e,x.sd())+4,Ctor.rounding=1,(len=x.d.length)<3)x=taylorSeries(Ctor,2,x,x,!0);else{k=(k=1.4*Math.sqrt(len))>16?16:0|k,x=taylorSeries(Ctor,2,x=x.times(1/tinyPow(5,k)),x,!0);for(var sinh2_x,d5=new Ctor(5),d16=new Ctor(16),d20=new Ctor(20);k--;)sinh2_x=x.times(x),x=x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))))}return Ctor.precision=pr,Ctor.rounding=rm,finalise(x,pr,rm,!0)},P.hyperbolicTangent=P.tanh=function(){var pr,rm,x=this,Ctor=x.constructor;return x.isFinite()?x.isZero()?new Ctor(x):(pr=Ctor.precision,rm=Ctor.rounding,Ctor.precision=pr+7,Ctor.rounding=1,divide(x.sinh(),x.cosh(),Ctor.precision=pr,Ctor.rounding=rm)):new Ctor(x.s)},P.inverseCosine=P.acos=function(){var halfPi,x=this,Ctor=x.constructor,k=x.abs().cmp(1),pr=Ctor.precision,rm=Ctor.rounding;return-1!==k?0===k?x.isNeg()?getPi(Ctor,pr,rm):new Ctor(0):new Ctor(NaN):x.isZero()?getPi(Ctor,pr+4,rm).times(.5):(Ctor.precision=pr+6,Ctor.rounding=1,x=x.asin(),halfPi=getPi(Ctor,pr+4,rm).times(.5),Ctor.precision=pr,Ctor.rounding=rm,halfPi.minus(x))},P.inverseHyperbolicCosine=P.acosh=function(){var pr,rm,x=this,Ctor=x.constructor;return x.lte(1)?new Ctor(x.eq(1)?0:NaN):x.isFinite()?(pr=Ctor.precision,rm=Ctor.rounding,Ctor.precision=pr+Math.max(Math.abs(x.e),x.sd())+4,Ctor.rounding=1,external=!1,x=x.times(x).minus(1).sqrt().plus(x),external=!0,Ctor.precision=pr,Ctor.rounding=rm,x.ln()):new Ctor(x)},P.inverseHyperbolicSine=P.asinh=function(){var pr,rm,x=this,Ctor=x.constructor;return!x.isFinite()||x.isZero()?new Ctor(x):(pr=Ctor.precision,rm=Ctor.rounding,Ctor.precision=pr+2*Math.max(Math.abs(x.e),x.sd())+6,Ctor.rounding=1,external=!1,x=x.times(x).plus(1).sqrt().plus(x),external=!0,Ctor.precision=pr,Ctor.rounding=rm,x.ln())},P.inverseHyperbolicTangent=P.atanh=function(){var pr,rm,wpr,xsd,x=this,Ctor=x.constructor;return x.isFinite()?x.e>=0?new Ctor(x.abs().eq(1)?x.s/0:x.isZero()?x:NaN):(pr=Ctor.precision,rm=Ctor.rounding,xsd=x.sd(),Math.max(xsd,pr)<2*-x.e-1?finalise(new Ctor(x),pr,rm,!0):(Ctor.precision=wpr=xsd-x.e,x=divide(x.plus(1),new Ctor(1).minus(x),wpr+pr,1),Ctor.precision=pr+4,Ctor.rounding=1,x=x.ln(),Ctor.precision=pr,Ctor.rounding=rm,x.times(.5))):new Ctor(NaN)},P.inverseSine=P.asin=function(){var halfPi,k,pr,rm,x=this,Ctor=x.constructor;return x.isZero()?new Ctor(x):(k=x.abs().cmp(1),pr=Ctor.precision,rm=Ctor.rounding,-1!==k?0===k?((halfPi=getPi(Ctor,pr+4,rm).times(.5)).s=x.s,halfPi):new Ctor(NaN):(Ctor.precision=pr+6,Ctor.rounding=1,x=x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan(),Ctor.precision=pr,Ctor.rounding=rm,x.times(2)))},P.inverseTangent=P.atan=function(){var i,j,k,n,px,t,r,wpr,x2,x=this,Ctor=x.constructor,pr=Ctor.precision,rm=Ctor.rounding;if(x.isFinite()){if(x.isZero())return new Ctor(x);if(x.abs().eq(1)&&pr+4<=PI_PRECISION)return(r=getPi(Ctor,pr+4,rm).times(.25)).s=x.s,r}else{if(!x.s)return new Ctor(NaN);if(pr+4<=PI_PRECISION)return(r=getPi(Ctor,pr+4,rm).times(.5)).s=x.s,r}for(Ctor.precision=wpr=pr+10,Ctor.rounding=1,i=k=Math.min(28,wpr/LOG_BASE+2|0);i;--i)x=x.div(x.times(x).plus(1).sqrt().plus(1));for(external=!1,j=Math.ceil(wpr/LOG_BASE),n=1,x2=x.times(x),r=new Ctor(x),px=x;-1!==i;)if(px=px.times(x2),t=r.minus(px.div(n+=2)),px=px.times(x2),void 0!==(r=t.plus(px.div(n+=2))).d[j])for(i=j;r.d[i]===t.d[i]&&i--;);return k&&(r=r.times(2<<k-1)),external=!0,finalise(r,Ctor.precision=pr,Ctor.rounding=rm,!0)},P.isFinite=function(){return!!this.d},P.isInteger=P.isInt=function(){return!!this.d&&mathfloor(this.e/LOG_BASE)>this.d.length-2},P.isNaN=function(){return!this.s},P.isNegative=P.isNeg=function(){return this.s<0},P.isPositive=P.isPos=function(){return this.s>0},P.isZero=function(){return!!this.d&&0===this.d[0]},P.lessThan=P.lt=function(y){return this.cmp(y)<0},P.lessThanOrEqualTo=P.lte=function(y){return this.cmp(y)<1},P.logarithm=P.log=function(base){var isBase10,d,denominator,k,inf,num,sd,r,arg=this,Ctor=arg.constructor,pr=Ctor.precision,rm=Ctor.rounding,guard=5;if(null==base)base=new Ctor(10),isBase10=!0;else{if(d=(base=new Ctor(base)).d,base.s<0||!d||!d[0]||base.eq(1))return new Ctor(NaN);isBase10=base.eq(10)}if(d=arg.d,arg.s<0||!d||!d[0]||arg.eq(1))return new Ctor(d&&!d[0]?-1/0:1!=arg.s?NaN:d?0:1/0);if(isBase10)if(d.length>1)inf=!0;else{for(k=d[0];k%10==0;)k/=10;inf=1!==k}if(external=!1,num=naturalLogarithm(arg,sd=pr+5),denominator=isBase10?getLn10(Ctor,sd+10):naturalLogarithm(base,sd),checkRoundingDigits((r=divide(num,denominator,sd,1)).d,k=pr,rm))do{if(num=naturalLogarithm(arg,sd+=10),denominator=isBase10?getLn10(Ctor,sd+10):naturalLogarithm(base,sd),r=divide(num,denominator,sd,1),!inf){+digitsToString(r.d).slice(k+1,k+15)+1==1e14&&(r=finalise(r,pr+1,0));break}}while(checkRoundingDigits(r.d,k+=10,rm));return external=!0,finalise(r,pr,rm)},P.minus=P.sub=function(y){var d,e,i,j,k,len,pr,rm,xd,xe,xLTy,yd,x=this,Ctor=x.constructor;if(y=new Ctor(y),!x.d||!y.d)return x.s&&y.s?x.d?y.s=-y.s:y=new Ctor(y.d||x.s!==y.s?x:NaN):y=new Ctor(NaN),y;if(x.s!=y.s)return y.s=-y.s,x.plus(y);if(xd=x.d,yd=y.d,pr=Ctor.precision,rm=Ctor.rounding,!xd[0]||!yd[0]){if(yd[0])y.s=-y.s;else{if(!xd[0])return new Ctor(3===rm?-0:0);y=new Ctor(x)}return external?finalise(y,pr,rm):y}if(e=mathfloor(y.e/LOG_BASE),xe=mathfloor(x.e/LOG_BASE),xd=xd.slice(),k=xe-e){for((xLTy=k<0)?(d=xd,k=-k,len=yd.length):(d=yd,e=xe,len=xd.length),k>(i=Math.max(Math.ceil(pr/LOG_BASE),len)+2)&&(k=i,d.length=1),d.reverse(),i=k;i--;)d.push(0);d.reverse()}else{for((xLTy=(i=xd.length)<(len=yd.length))&&(len=i),i=0;i<len;i++)if(xd[i]!=yd[i]){xLTy=xd[i]<yd[i];break}k=0}for(xLTy&&(d=xd,xd=yd,yd=d,y.s=-y.s),len=xd.length,i=yd.length-len;i>0;--i)xd[len++]=0;for(i=yd.length;i>k;){if(xd[--i]<yd[i]){for(j=i;j&&0===xd[--j];)xd[j]=BASE-1;--xd[j],xd[i]+=BASE}xd[i]-=yd[i]}for(;0===xd[--len];)xd.pop();for(;0===xd[0];xd.shift())--e;return xd[0]?(y.d=xd,y.e=getBase10Exponent(xd,e),external?finalise(y,pr,rm):y):new Ctor(3===rm?-0:0)},P.modulo=P.mod=function(y){var q,x=this,Ctor=x.constructor;return y=new Ctor(y),!x.d||!y.s||y.d&&!y.d[0]?new Ctor(NaN):!y.d||x.d&&!x.d[0]?finalise(new Ctor(x),Ctor.precision,Ctor.rounding):(external=!1,9==Ctor.modulo?(q=divide(x,y.abs(),0,3,1)).s*=y.s:q=divide(x,y,0,Ctor.modulo,1),q=q.times(y),external=!0,x.minus(q))},P.naturalExponential=P.exp=function(){return naturalExponential(this)},P.naturalLogarithm=P.ln=function(){return naturalLogarithm(this)},P.negated=P.neg=function(){var x=new this.constructor(this);return x.s=-x.s,finalise(x)},P.plus=P.add=function(y){var carry,d,e,i,k,len,pr,rm,xd,yd,x=this,Ctor=x.constructor;if(y=new Ctor(y),!x.d||!y.d)return x.s&&y.s?x.d||(y=new Ctor(y.d||x.s===y.s?x:NaN)):y=new Ctor(NaN),y;if(x.s!=y.s)return y.s=-y.s,x.minus(y);if(xd=x.d,yd=y.d,pr=Ctor.precision,rm=Ctor.rounding,!xd[0]||!yd[0])return yd[0]||(y=new Ctor(x)),external?finalise(y,pr,rm):y;if(k=mathfloor(x.e/LOG_BASE),e=mathfloor(y.e/LOG_BASE),xd=xd.slice(),i=k-e){for(i<0?(d=xd,i=-i,len=yd.length):(d=yd,e=k,len=xd.length),i>(len=(k=Math.ceil(pr/LOG_BASE))>len?k+1:len+1)&&(i=len,d.length=1),d.reverse();i--;)d.push(0);d.reverse()}for((len=xd.length)-(i=yd.length)<0&&(i=len,d=yd,yd=xd,xd=d),carry=0;i;)carry=(xd[--i]=xd[i]+yd[i]+carry)/BASE|0,xd[i]%=BASE;for(carry&&(xd.unshift(carry),++e),len=xd.length;0==xd[--len];)xd.pop();return y.d=xd,y.e=getBase10Exponent(xd,e),external?finalise(y,pr,rm):y},P.precision=P.sd=function(z){var k,x=this;if(void 0!==z&&z!==!!z&&1!==z&&0!==z)throw Error(invalidArgument+z);return x.d?(k=getPrecision(x.d),z&&x.e+1>k&&(k=x.e+1)):k=NaN,k},P.round=function(){var x=this,Ctor=x.constructor;return finalise(new Ctor(x),x.e+1,Ctor.rounding)},P.sine=P.sin=function(){var pr,rm,x=this,Ctor=x.constructor;return x.isFinite()?x.isZero()?new Ctor(x):(pr=Ctor.precision,rm=Ctor.rounding,Ctor.precision=pr+Math.max(x.e,x.sd())+LOG_BASE,Ctor.rounding=1,x=sine(Ctor,toLessThanHalfPi(Ctor,x)),Ctor.precision=pr,Ctor.rounding=rm,finalise(quadrant>2?x.neg():x,pr,rm,!0)):new Ctor(NaN)},P.squareRoot=P.sqrt=function(){var m,n,sd,r,rep,t,x=this,d=x.d,e=x.e,s=x.s,Ctor=x.constructor;if(1!==s||!d||!d[0])return new Ctor(!s||s<0&&(!d||d[0])?NaN:d?x:1/0);for(external=!1,0==(s=Math.sqrt(+x))||s==1/0?(((n=digitsToString(d)).length+e)%2==0&&(n+="0"),s=Math.sqrt(n),e=mathfloor((e+1)/2)-(e<0||e%2),r=new Ctor(n=s==1/0?"1e"+e:(n=s.toExponential()).slice(0,n.indexOf("e")+1)+e)):r=new Ctor(s.toString()),sd=(e=Ctor.precision)+3;;)if(r=(t=r).plus(divide(x,t,sd+2,1)).times(.5),digitsToString(t.d).slice(0,sd)===(n=digitsToString(r.d)).slice(0,sd)){if("9999"!=(n=n.slice(sd-3,sd+1))&&(rep||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(finalise(r,e+1,1),m=!r.times(r).eq(x));break}if(!rep&&(finalise(t,e+1,0),t.times(t).eq(x))){r=t;break}sd+=4,rep=1}return external=!0,finalise(r,e,Ctor.rounding,m)},P.tangent=P.tan=function(){var pr,rm,x=this,Ctor=x.constructor;return x.isFinite()?x.isZero()?new Ctor(x):(pr=Ctor.precision,rm=Ctor.rounding,Ctor.precision=pr+10,Ctor.rounding=1,(x=x.sin()).s=1,x=divide(x,new Ctor(1).minus(x.times(x)).sqrt(),pr+10,0),Ctor.precision=pr,Ctor.rounding=rm,finalise(2==quadrant||4==quadrant?x.neg():x,pr,rm,!0)):new Ctor(NaN)},P.times=P.mul=function(y){var carry,e,i,k,r,rL,t,xdL,ydL,x=this,Ctor=x.constructor,xd=x.d,yd=(y=new Ctor(y)).d;if(y.s*=x.s,!(xd&&xd[0]&&yd&&yd[0]))return new Ctor(!y.s||xd&&!xd[0]&&!yd||yd&&!yd[0]&&!xd?NaN:xd&&yd?0*y.s:y.s/0);for(e=mathfloor(x.e/LOG_BASE)+mathfloor(y.e/LOG_BASE),(xdL=xd.length)<(ydL=yd.length)&&(r=xd,xd=yd,yd=r,rL=xdL,xdL=ydL,ydL=rL),r=[],i=rL=xdL+ydL;i--;)r.push(0);for(i=ydL;--i>=0;){for(carry=0,k=xdL+i;k>i;)t=r[k]+yd[i]*xd[k-i-1]+carry,r[k--]=t%BASE|0,carry=t/BASE|0;r[k]=(r[k]+carry)%BASE|0}for(;!r[--rL];)r.pop();return carry?++e:r.shift(),y.d=r,y.e=getBase10Exponent(r,e),external?finalise(y,Ctor.precision,Ctor.rounding):y},P.toBinary=function(sd,rm){return toStringBinary(this,2,sd,rm)},P.toDecimalPlaces=P.toDP=function(dp,rm){var x=this,Ctor=x.constructor;return x=new Ctor(x),void 0===dp?x:(checkInt32(dp,0,MAX_DIGITS),void 0===rm?rm=Ctor.rounding:checkInt32(rm,0,8),finalise(x,dp+x.e+1,rm))},P.toExponential=function(dp,rm){var str,x=this,Ctor=x.constructor;return void 0===dp?str=finiteToString(x,!0):(checkInt32(dp,0,MAX_DIGITS),void 0===rm?rm=Ctor.rounding:checkInt32(rm,0,8),str=finiteToString(x=finalise(new Ctor(x),dp+1,rm),!0,dp+1)),x.isNeg()&&!x.isZero()?"-"+str:str},P.toFixed=function(dp,rm){var str,y,x=this,Ctor=x.constructor;return void 0===dp?str=finiteToString(x):(checkInt32(dp,0,MAX_DIGITS),void 0===rm?rm=Ctor.rounding:checkInt32(rm,0,8),str=finiteToString(y=finalise(new Ctor(x),dp+x.e+1,rm),!1,dp+y.e+1)),x.isNeg()&&!x.isZero()?"-"+str:str},P.toFraction=function(maxD){var d,d0,d1,d2,e,k,n,n0,n1,pr,q,r,x=this,xd=x.d,Ctor=x.constructor;if(!xd)return new Ctor(x);if(n1=d0=new Ctor(1),d1=n0=new Ctor(0),k=(e=(d=new Ctor(d1)).e=getPrecision(xd)-x.e-1)%LOG_BASE,d.d[0]=mathpow(10,k<0?LOG_BASE+k:k),null==maxD)maxD=e>0?d:n1;else{if(!(n=new Ctor(maxD)).isInt()||n.lt(n1))throw Error(invalidArgument+n);maxD=n.gt(d)?e>0?d:n1:n}for(external=!1,n=new Ctor(digitsToString(xd)),pr=Ctor.precision,Ctor.precision=e=xd.length*LOG_BASE*2;q=divide(n,d,0,1,1),1!=(d2=d0.plus(q.times(d1))).cmp(maxD);)d0=d1,d1=d2,d2=n1,n1=n0.plus(q.times(d2)),n0=d2,d2=d,d=n.minus(q.times(d2)),n=d2;return d2=divide(maxD.minus(d0),d1,0,1,1),n0=n0.plus(d2.times(n1)),d0=d0.plus(d2.times(d1)),n0.s=n1.s=x.s,r=divide(n1,d1,e,1).minus(x).abs().cmp(divide(n0,d0,e,1).minus(x).abs())<1?[n1,d1]:[n0,d0],Ctor.precision=pr,external=!0,r},P.toHexadecimal=P.toHex=function(sd,rm){return toStringBinary(this,16,sd,rm)},P.toNearest=function(y,rm){var x=this,Ctor=x.constructor;if(x=new Ctor(x),null==y){if(!x.d)return x;y=new Ctor(1),rm=Ctor.rounding}else{if(y=new Ctor(y),void 0===rm?rm=Ctor.rounding:checkInt32(rm,0,8),!x.d)return y.s?x:y;if(!y.d)return y.s&&(y.s=x.s),y}return y.d[0]?(external=!1,x=divide(x,y,0,rm,1).times(y),external=!0,finalise(x)):(y.s=x.s,x=y),x},P.toNumber=function(){return+this},P.toOctal=function(sd,rm){return toStringBinary(this,8,sd,rm)},P.toPower=P.pow=function(y){var e,k,pr,r,rm,s,x=this,Ctor=x.constructor,yn=+(y=new Ctor(y));if(!(x.d&&y.d&&x.d[0]&&y.d[0]))return new Ctor(mathpow(+x,yn));if((x=new Ctor(x)).eq(1))return x;if(pr=Ctor.precision,rm=Ctor.rounding,y.eq(1))return finalise(x,pr,rm);if((e=mathfloor(y.e/LOG_BASE))>=y.d.length-1&&(k=yn<0?-yn:yn)<=9007199254740991)return r=intPow(Ctor,x,k,pr),y.s<0?new Ctor(1).div(r):finalise(r,pr,rm);if((s=x.s)<0){if(e<y.d.length-1)return new Ctor(NaN);if(0==(1&y.d[e])&&(s=1),0==x.e&&1==x.d[0]&&1==x.d.length)return x.s=s,x}return(e=0!=(k=mathpow(+x,yn))&&isFinite(k)?new Ctor(k+"").e:mathfloor(yn*(Math.log("0."+digitsToString(x.d))/Math.LN10+x.e+1)))>Ctor.maxE+1||e<Ctor.minE-1?new Ctor(e>0?s/0:0):(external=!1,Ctor.rounding=x.s=1,k=Math.min(12,(e+"").length),(r=naturalExponential(y.times(naturalLogarithm(x,pr+k)),pr)).d&&checkRoundingDigits((r=finalise(r,pr+5,1)).d,pr,rm)&&(e=pr+10,+digitsToString((r=finalise(naturalExponential(y.times(naturalLogarithm(x,e+k)),e),e+5,1)).d).slice(pr+1,pr+15)+1==1e14&&(r=finalise(r,pr+1,0))),r.s=s,external=!0,Ctor.rounding=rm,finalise(r,pr,rm))},P.toPrecision=function(sd,rm){var str,x=this,Ctor=x.constructor;return void 0===sd?str=finiteToString(x,x.e<=Ctor.toExpNeg||x.e>=Ctor.toExpPos):(checkInt32(sd,1,MAX_DIGITS),void 0===rm?rm=Ctor.rounding:checkInt32(rm,0,8),str=finiteToString(x=finalise(new Ctor(x),sd,rm),sd<=x.e||x.e<=Ctor.toExpNeg,sd)),x.isNeg()&&!x.isZero()?"-"+str:str},P.toSignificantDigits=P.toSD=function(sd,rm){var x=this,Ctor=x.constructor;return void 0===sd?(sd=Ctor.precision,rm=Ctor.rounding):(checkInt32(sd,1,MAX_DIGITS),void 0===rm?rm=Ctor.rounding:checkInt32(rm,0,8)),finalise(new Ctor(x),sd,rm)},P.toString=function(){var x=this,Ctor=x.constructor,str=finiteToString(x,x.e<=Ctor.toExpNeg||x.e>=Ctor.toExpPos);return x.isNeg()&&!x.isZero()?"-"+str:str},P.truncated=P.trunc=function(){return finalise(new this.constructor(this),this.e+1,1)},P.valueOf=P.toJSON=function(){var x=this,Ctor=x.constructor,str=finiteToString(x,x.e<=Ctor.toExpNeg||x.e>=Ctor.toExpPos);return x.isNeg()?"-"+str:str},divide=function(){function multiplyInteger(x,k,base){var temp,carry=0,i=x.length;for(x=x.slice();i--;)temp=x[i]*k+carry,x[i]=temp%base|0,carry=temp/base|0;return carry&&x.unshift(carry),x}function compare(a,b,aL,bL){var i,r;if(aL!=bL)r=aL>bL?1:-1;else for(i=r=0;i<aL;i++)if(a[i]!=b[i]){r=a[i]>b[i]?1:-1;break}return r}function subtract(a,b,aL,base){for(var i=0;aL--;)a[aL]-=i,i=a[aL]<b[aL]?1:0,a[aL]=i*base+a[aL]-b[aL];for(;!a[0]&&a.length>1;)a.shift()}return function(x,y,pr,rm,dp,base){var cmp,e,i,k,logBase,more,prod,prodL,q,qd,rem,remL,rem0,sd,t,xi,xL,yd0,yL,yz,Ctor=x.constructor,sign=x.s==y.s?1:-1,xd=x.d,yd=y.d;if(!(xd&&xd[0]&&yd&&yd[0]))return new Ctor(x.s&&y.s&&(xd?!yd||xd[0]!=yd[0]:yd)?xd&&0==xd[0]||!yd?0*sign:sign/0:NaN);for(base?(logBase=1,e=x.e-y.e):(base=BASE,logBase=LOG_BASE,e=mathfloor(x.e/logBase)-mathfloor(y.e/logBase)),yL=yd.length,xL=xd.length,qd=(q=new Ctor(sign)).d=[],i=0;yd[i]==(xd[i]||0);i++);if(yd[i]>(xd[i]||0)&&e--,null==pr?(sd=pr=Ctor.precision,rm=Ctor.rounding):sd=dp?pr+(x.e-y.e)+1:pr,sd<0)qd.push(1),more=!0;else{if(sd=sd/logBase+2|0,i=0,1==yL){for(k=0,yd=yd[0],sd++;(i<xL||k)&&sd--;i++)t=k*base+(xd[i]||0),qd[i]=t/yd|0,k=t%yd|0;more=k||i<xL}else{for((k=base/(yd[0]+1)|0)>1&&(yd=multiplyInteger(yd,k,base),xd=multiplyInteger(xd,k,base),yL=yd.length,xL=xd.length),xi=yL,remL=(rem=xd.slice(0,yL)).length;remL<yL;)rem[remL++]=0;(yz=yd.slice()).unshift(0),yd0=yd[0],yd[1]>=base/2&&++yd0;do{k=0,(cmp=compare(yd,rem,yL,remL))<0?(rem0=rem[0],yL!=remL&&(rem0=rem0*base+(rem[1]||0)),(k=rem0/yd0|0)>1?(k>=base&&(k=base-1),1==(cmp=compare(prod=multiplyInteger(yd,k,base),rem,prodL=prod.length,remL=rem.length))&&(k--,subtract(prod,yL<prodL?yz:yd,prodL,base))):(0==k&&(cmp=k=1),prod=yd.slice()),(prodL=prod.length)<remL&&prod.unshift(0),subtract(rem,prod,remL,base),-1==cmp&&(cmp=compare(yd,rem,yL,remL=rem.length))<1&&(k++,subtract(rem,yL<remL?yz:yd,remL,base)),remL=rem.length):0===cmp&&(k++,rem=[0]),qd[i++]=k,cmp&&rem[0]?rem[remL++]=xd[xi]||0:(rem=[xd[xi]],remL=1)}while((xi++<xL||void 0!==rem[0])&&sd--);more=void 0!==rem[0]}qd[0]||qd.shift()}if(1==logBase)q.e=e,inexact=more;else{for(i=1,k=qd[0];k>=10;k/=10)i++;q.e=i+e*logBase-1,finalise(q,dp?pr+q.e+1:pr,rm,more)}return q}}(),P[Symbol.for("nodejs.util.inspect.custom")]=P.toString,P[Symbol.toStringTag]="Decimal",Decimal=clone(DEFAULTS),exports_2("Decimal",Decimal),LN10=new Decimal(LN10),PI=new Decimal(PI),exports_2("default",Decimal),exports_2("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/-/complex.js@v2.0.11-pqdvciUusxTzW8SatDqI/dist=es2020/complex",[],(function(exports_3,context_3){var complex,complex$1,__esModule,__moduleName=context_3&&context_3.id;function unwrapExports(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}function createCommonjsModule(fn,basedir,module){return fn(module={path:basedir,exports:{},require:function(path,base){return commonjsRequire(path,null==base?module.path:base)}},module.exports),module.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}return{setters:[],execute:function(){complex=createCommonjsModule((function(module,exports){!function(root){var cosh=function(x){return.5*(Math.exp(x)+Math.exp(-x))},sinh=function(x){return.5*(Math.exp(x)-Math.exp(-x))},cosm1=function(x){var limit=Math.PI/4;if(x<-limit||x>limit)return Math.cos(x)-1;var xx=x*x;return xx*(xx*(1/24+xx*(-1/720+xx*(1/40320+xx*(-1/3628800+xx*(1/4790014600+xx*(-1/87178291200+xx*(1/20922789888e3)))))))-.5)},hypot=function(x,y){var a=Math.abs(x),b=Math.abs(y);return a<3e3&&b<3e3?Math.sqrt(a*a+b*b):(a<b?(a=b,b=x/y):b=y/x,a*Math.sqrt(1+b*b))},parser_exit=function(){throw SyntaxError("Invalid Param")};function logHypot(a,b){var _a=Math.abs(a),_b=Math.abs(b);return 0===a?Math.log(_b):0===b?Math.log(_a):_a<3e3&&_b<3e3?.5*Math.log(a*a+b*b):Math.log(a/Math.cos(Math.atan2(b,a)))}var parse=function(a,b){var z={re:0,im:0};if(null==a)z.re=z.im=0;else if(void 0!==b)z.re=a,z.im=b;else switch(typeof a){case"object":if("im"in a&&"re"in a)z.re=a.re,z.im=a.im;else if("abs"in a&&"arg"in a){if(!Number.isFinite(a.abs)&&Number.isFinite(a.arg))return Complex.INFINITY;z.re=a.abs*Math.cos(a.arg),z.im=a.abs*Math.sin(a.arg)}else if("r"in a&&"phi"in a){if(!Number.isFinite(a.r)&&Number.isFinite(a.phi))return Complex.INFINITY;z.re=a.r*Math.cos(a.phi),z.im=a.r*Math.sin(a.phi)}else 2===a.length?(z.re=a[0],z.im=a[1]):parser_exit();break;case"string":z.im=z.re=0;var tokens=a.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),plus=1,minus=0;null===tokens&&parser_exit();for(var i=0;i<tokens.length;i++){var c=tokens[i];" "===c||"\t"===c||"\n"===c||("+"===c?plus++:"-"===c?minus++:"i"===c||"I"===c?(plus+minus===0&&parser_exit()," "===tokens[i+1]||isNaN(tokens[i+1])?z.im+=parseFloat((minus%2?"-":"")+"1"):(z.im+=parseFloat((minus%2?"-":"")+tokens[i+1]),i++),plus=minus=0):((plus+minus===0||isNaN(c))&&parser_exit(),"i"===tokens[i+1]||"I"===tokens[i+1]?(z.im+=parseFloat((minus%2?"-":"")+c),i++):z.re+=parseFloat((minus%2?"-":"")+c),plus=minus=0))}plus+minus>0&&parser_exit();break;case"number":z.im=0,z.re=a;break;default:parser_exit()}return z};function Complex(a,b){if(!(this instanceof Complex))return new Complex(a,b);var z=parse(a,b);this.re=z.re,this.im=z.im}Complex.prototype={re:0,im:0,sign:function(){var abs=this.abs();return new Complex(this.re/abs,this.im/abs)},add:function(a,b){var z=new Complex(a,b);return this.isInfinite()&&z.isInfinite()?Complex.NAN:this.isInfinite()||z.isInfinite()?Complex.INFINITY:new Complex(this.re+z.re,this.im+z.im)},sub:function(a,b){var z=new Complex(a,b);return this.isInfinite()&&z.isInfinite()?Complex.NAN:this.isInfinite()||z.isInfinite()?Complex.INFINITY:new Complex(this.re-z.re,this.im-z.im)},mul:function(a,b){var z=new Complex(a,b);return this.isInfinite()&&z.isZero()||this.isZero()&&z.isInfinite()?Complex.NAN:this.isInfinite()||z.isInfinite()?Complex.INFINITY:0===z.im&&0===this.im?new Complex(this.re*z.re,0):new Complex(this.re*z.re-this.im*z.im,this.re*z.im+this.im*z.re)},div:function(a,b){var z=new Complex(a,b);if(this.isZero()&&z.isZero()||this.isInfinite()&&z.isInfinite())return Complex.NAN;if(this.isInfinite()||z.isZero())return Complex.INFINITY;if(this.isZero()||z.isInfinite())return Complex.ZERO;a=this.re,b=this.im;var c=z.re,d=z.im,t,x;return 0===d?new Complex(a/c,b/c):Math.abs(c)<Math.abs(d)?new Complex((a*(x=c/d)+b)/(t=c*x+d),(b*x-a)/t):new Complex((a+b*(x=d/c))/(t=d*x+c),(b-a*x)/t)},pow:function(a,b){var z=new Complex(a,b);if(a=this.re,b=this.im,z.isZero())return Complex.ONE;if(0===z.im){if(0===b&&a>=0)return new Complex(Math.pow(a,z.re),0);if(0===a)switch((z.re%4+4)%4){case 0:return new Complex(Math.pow(b,z.re),0);case 1:return new Complex(0,Math.pow(b,z.re));case 2:return new Complex(-Math.pow(b,z.re),0);case 3:return new Complex(0,-Math.pow(b,z.re))}}if(0===a&&0===b&&z.re>0&&z.im>=0)return Complex.ZERO;var arg=Math.atan2(b,a),loh=logHypot(a,b);return a=Math.exp(z.re*loh-z.im*arg),b=z.im*loh+z.re*arg,new Complex(a*Math.cos(b),a*Math.sin(b))},sqrt:function(){var a=this.re,b=this.im,r=this.abs(),re,im;if(a>=0){if(0===b)return new Complex(Math.sqrt(a),0);re=.5*Math.sqrt(2*(r+a))}else re=Math.abs(b)/Math.sqrt(2*(r-a));return im=a<=0?.5*Math.sqrt(2*(r-a)):Math.abs(b)/Math.sqrt(2*(r+a)),new Complex(re,b<0?-im:im)},exp:function(){var tmp=Math.exp(this.re);return this.im,new Complex(tmp*Math.cos(this.im),tmp*Math.sin(this.im))},expm1:function(){var a=this.re,b=this.im;return new Complex(Math.expm1(a)*Math.cos(b)+cosm1(b),Math.exp(a)*Math.sin(b))},log:function(){var a=this.re,b=this.im;return new Complex(logHypot(a,b),Math.atan2(b,a))},abs:function(){return hypot(this.re,this.im)},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var a=this.re,b=this.im;return new Complex(Math.sin(a)*cosh(b),Math.cos(a)*sinh(b))},cos:function(){var a=this.re,b=this.im;return new Complex(Math.cos(a)*cosh(b),-Math.sin(a)*sinh(b))},tan:function(){var a=2*this.re,b=2*this.im,d=Math.cos(a)+cosh(b);return new Complex(Math.sin(a)/d,sinh(b)/d)},cot:function(){var a=2*this.re,b=2*this.im,d=Math.cos(a)-cosh(b);return new Complex(-Math.sin(a)/d,sinh(b)/d)},sec:function(){var a=this.re,b=this.im,d=.5*cosh(2*b)+.5*Math.cos(2*a);return new Complex(Math.cos(a)*cosh(b)/d,Math.sin(a)*sinh(b)/d)},csc:function(){var a=this.re,b=this.im,d=.5*cosh(2*b)-.5*Math.cos(2*a);return new Complex(Math.sin(a)*cosh(b)/d,-Math.cos(a)*sinh(b)/d)},asin:function(){var a=this.re,b=this.im,t1=new Complex(b*b-a*a+1,-2*a*b).sqrt(),t2=new Complex(t1.re-b,t1.im+a).log();return new Complex(t2.im,-t2.re)},acos:function(){var a=this.re,b=this.im,t1=new Complex(b*b-a*a+1,-2*a*b).sqrt(),t2=new Complex(t1.re-b,t1.im+a).log();return new Complex(Math.PI/2-t2.im,t2.re)},atan:function(){var a=this.re,b=this.im;if(0===a){if(1===b)return new Complex(0,1/0);if(-1===b)return new Complex(0,-1/0)}var d=a*a+(1-b)*(1-b),t1=new Complex((1-b*b-a*a)/d,-2*a/d).log();return new Complex(-.5*t1.im,.5*t1.re)},acot:function(){var a=this.re,b=this.im;if(0===b)return new Complex(Math.atan2(1,a),0);var d=a*a+b*b;return 0!==d?new Complex(a/d,-b/d).atan():new Complex(0!==a?a/0:0,0!==b?-b/0:0).atan()},asec:function(){var a=this.re,b=this.im;if(0===a&&0===b)return new Complex(0,1/0);var d=a*a+b*b;return 0!==d?new Complex(a/d,-b/d).acos():new Complex(0!==a?a/0:0,0!==b?-b/0:0).acos()},acsc:function(){var a=this.re,b=this.im;if(0===a&&0===b)return new Complex(Math.PI/2,1/0);var d=a*a+b*b;return 0!==d?new Complex(a/d,-b/d).asin():new Complex(0!==a?a/0:0,0!==b?-b/0:0).asin()},sinh:function(){var a=this.re,b=this.im;return new Complex(sinh(a)*Math.cos(b),cosh(a)*Math.sin(b))},cosh:function(){var a=this.re,b=this.im;return new Complex(cosh(a)*Math.cos(b),sinh(a)*Math.sin(b))},tanh:function(){var a=2*this.re,b=2*this.im,d=cosh(a)+Math.cos(b);return new Complex(sinh(a)/d,Math.sin(b)/d)},coth:function(){var a=2*this.re,b=2*this.im,d=cosh(a)-Math.cos(b);return new Complex(sinh(a)/d,-Math.sin(b)/d)},csch:function(){var a=this.re,b=this.im,d=Math.cos(2*b)-cosh(2*a);return new Complex(-2*sinh(a)*Math.cos(b)/d,2*cosh(a)*Math.sin(b)/d)},sech:function(){var a=this.re,b=this.im,d=Math.cos(2*b)+cosh(2*a);return new Complex(2*cosh(a)*Math.cos(b)/d,-2*sinh(a)*Math.sin(b)/d)},asinh:function(){var tmp=this.im;this.im=-this.re,this.re=tmp;var res=this.asin();return this.re=-this.im,this.im=tmp,tmp=res.re,res.re=-res.im,res.im=tmp,res},acosh:function(){var res=this.acos();if(res.im<=0){var tmp=res.re;res.re=-res.im,res.im=tmp}else{var tmp=res.im;res.im=-res.re,res.re=tmp}return res},atanh:function(){var a=this.re,b=this.im,noIM=a>1&&0===b,oneMinus=1-a,onePlus=1+a,d=oneMinus*oneMinus+b*b,x=0!==d?new Complex((onePlus*oneMinus-b*b)/d,(b*oneMinus+onePlus*b)/d):new Complex(-1!==a?a/0:0,0!==b?b/0:0),temp=x.re;return x.re=logHypot(x.re,x.im)/2,x.im=Math.atan2(x.im,temp)/2,noIM&&(x.im=-x.im),x},acoth:function(){var a=this.re,b=this.im;if(0===a&&0===b)return new Complex(0,Math.PI/2);var d=a*a+b*b;return 0!==d?new Complex(a/d,-b/d).atanh():new Complex(0!==a?a/0:0,0!==b?-b/0:0).atanh()},acsch:function(){var a=this.re,b=this.im;if(0===b)return new Complex(0!==a?Math.log(a+Math.sqrt(a*a+1)):1/0,0);var d=a*a+b*b;return 0!==d?new Complex(a/d,-b/d).asinh():new Complex(0!==a?a/0:0,0!==b?-b/0:0).asinh()},asech:function(){var a=this.re,b=this.im;if(this.isZero())return Complex.INFINITY;var d=a*a+b*b;return 0!==d?new Complex(a/d,-b/d).acosh():new Complex(0!==a?a/0:0,0!==b?-b/0:0).acosh()},inverse:function(){if(this.isZero())return Complex.INFINITY;if(this.isInfinite())return Complex.ZERO;var a=this.re,b=this.im,d=a*a+b*b;return new Complex(a/d,-b/d)},conjugate:function(){return new Complex(this.re,-this.im)},neg:function(){return new Complex(-this.re,-this.im)},ceil:function(places){return places=Math.pow(10,places||0),new Complex(Math.ceil(this.re*places)/places,Math.ceil(this.im*places)/places)},floor:function(places){return places=Math.pow(10,places||0),new Complex(Math.floor(this.re*places)/places,Math.floor(this.im*places)/places)},round:function(places){return places=Math.pow(10,places||0),new Complex(Math.round(this.re*places)/places,Math.round(this.im*places)/places)},equals:function(a,b){var z=new Complex(a,b);return Math.abs(z.re-this.re)<=Complex.EPSILON&&Math.abs(z.im-this.im)<=Complex.EPSILON},clone:function(){return new Complex(this.re,this.im)},toString:function(){var a=this.re,b=this.im,ret="";return this.isNaN()?"NaN":this.isZero()?"0":this.isInfinite()?"Infinity":(0!==a&&(ret+=a),0!==b&&(0!==a?ret+=b<0?" - ":" + ":b<0&&(ret+="-"),1!==(b=Math.abs(b))&&(ret+=b),ret+="i"),ret||"0")},toVector:function(){return[this.re,this.im]},valueOf:function(){return 0===this.im?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return!(0!==this.re&&-0!==this.re||0!==this.im&&-0!==this.im)},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},Complex.ZERO=new Complex(0,0),Complex.ONE=new Complex(1,0),Complex.I=new Complex(0,1),Complex.PI=new Complex(Math.PI,0),Complex.E=new Complex(Math.E,0),Complex.INFINITY=new Complex(1/0,1/0),Complex.NAN=new Complex(NaN,NaN),Complex.EPSILON=1e-16,Object.defineProperty(exports,"__esModule",{value:!0}),Complex.default=Complex,Complex.Complex=Complex,module.exports=Complex}()})),complex$1=unwrapExports(complex),exports_3("default",complex$1),exports_3("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/-/fraction.js@v4.0.12-T3QvKfUHIcZUlFktudbS/dist=es2020/fraction",[],(function(exports_4,context_4){var fraction,fraction$1,__esModule,__moduleName=context_4&&context_4.id;function unwrapExports(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}function createCommonjsModule(fn,basedir,module){return fn(module={path:basedir,exports:{},require:function(path,base){return commonjsRequire(path,null==base?module.path:base)}},module.exports),module.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}return{setters:[],execute:function(){fraction=createCommonjsModule((function(module,exports){!function(root){var MAX_CYCLE_LEN=2e3,P={s:1,n:0,d:1};function createError(name){function errorConstructor(){var temp=Error.apply(this,arguments);temp.name=this.name=name,this.stack=temp.stack,this.message=temp.message}function IntermediateInheritor(){}return IntermediateInheritor.prototype=Error.prototype,errorConstructor.prototype=new IntermediateInheritor,errorConstructor}var DivisionByZero=Fraction.DivisionByZero=createError("DivisionByZero"),InvalidParameter=Fraction.InvalidParameter=createError("InvalidParameter");function assign(n,s){return isNaN(n=parseInt(n,10))&&throwInvalidParam(),n*s}function throwInvalidParam(){throw new InvalidParameter}var parse=function(p1,p2){var n=0,d=1,s=1,v=0,w=0,x=0,y=1,z=1,A=0,B=1,C=1,D=1,N=1e7,M;if(null==p1);else if(void 0!==p2)s=(n=p1)*(d=p2);else switch(typeof p1){case"object":"d"in p1&&"n"in p1?(n=p1.n,d=p1.d,"s"in p1&&(n*=p1.s)):0 in p1?(n=p1[0],1 in p1&&(d=p1[1])):throwInvalidParam(),s=n*d;break;case"number":if(p1<0&&(s=p1,p1=-p1),p1%1==0)n=p1;else if(p1>0){for(p1>=1&&(p1/=z=Math.pow(10,Math.floor(1+Math.log(p1)/Math.LN10)));B<=N&&D<=N;){if(p1===(M=(A+C)/(B+D))){B+D<=N?(n=A+C,d=B+D):D>B?(n=C,d=D):(n=A,d=B);break}p1>M?(A+=C,B+=D):(C+=A,D+=B),B>N?(n=C,d=D):(n=A,d=B)}n*=z}else(isNaN(p1)||isNaN(p2))&&(d=n=NaN);break;case"string":if(null===(B=p1.match(/\d+|./g))&&throwInvalidParam(),"-"===B[A]?(s=-1,A++):"+"===B[A]&&A++,B.length===A+1?w=assign(B[A++],s):"."===B[A+1]||"."===B[A]?("."!==B[A]&&(v=assign(B[A++],s)),(++A+1===B.length||"("===B[A+1]&&")"===B[A+3]||"'"===B[A+1]&&"'"===B[A+3])&&(w=assign(B[A],s),y=Math.pow(10,B[A].length),A++),("("===B[A]&&")"===B[A+2]||"'"===B[A]&&"'"===B[A+2])&&(x=assign(B[A+1],s),z=Math.pow(10,B[A+1].length)-1,A+=3)):"/"===B[A+1]||":"===B[A+1]?(w=assign(B[A],s),y=assign(B[A+2],1),A+=3):"/"===B[A+3]&&" "===B[A+1]&&(v=assign(B[A],s),w=assign(B[A+2],s),y=assign(B[A+4],1),A+=5),B.length<=A){s=n=x+(d=y*z)*v+z*w;break}default:throwInvalidParam()}if(0===d)throw new DivisionByZero;P.s=s<0?-1:1,P.n=Math.abs(n),P.d=Math.abs(d)};function modpow(b,e,m){for(var r=1;e>0;b=b*b%m,e>>=1)1&e&&(r=r*b%m);return r}function cycleLen(n,d){for(;d%2==0;d/=2);for(;d%5==0;d/=5);if(1===d)return 0;for(var rem=10%d,t=1;1!==rem;t++)if(rem=10*rem%d,t>2e3)return 0;return t}function cycleStart(n,d,len){for(var rem1=1,rem2=modpow(10,len,d),t=0;t<300;t++){if(rem1===rem2)return t;rem1=10*rem1%d,rem2=10*rem2%d}return 0}function gcd(a,b){if(!a)return b;if(!b)return a;for(;;){if(!(a%=b))return b;if(!(b%=a))return a}}function Fraction(a,b){if(!(this instanceof Fraction))return new Fraction(a,b);parse(a,b),a=Fraction.REDUCE?gcd(P.d,P.n):1,this.s=P.s,this.n=P.n/a,this.d=P.d/a}Fraction.REDUCE=1,Fraction.prototype={s:1,n:0,d:1,abs:function(){return new Fraction(this.n,this.d)},neg:function(){return new Fraction(-this.s*this.n,this.d)},add:function(a,b){return parse(a,b),new Fraction(this.s*this.n*P.d+P.s*this.d*P.n,this.d*P.d)},sub:function(a,b){return parse(a,b),new Fraction(this.s*this.n*P.d-P.s*this.d*P.n,this.d*P.d)},mul:function(a,b){return parse(a,b),new Fraction(this.s*P.s*this.n*P.n,this.d*P.d)},div:function(a,b){return parse(a,b),new Fraction(this.s*P.s*this.n*P.d,this.d*P.n)},clone:function(){return new Fraction(this)},mod:function(a,b){return isNaN(this.n)||isNaN(this.d)?new Fraction(NaN):void 0===a?new Fraction(this.s*this.n%this.d,1):(parse(a,b),0===P.n&&0===this.d&&Fraction(0,0),new Fraction(this.s*(P.d*this.n)%(P.n*this.d),P.d*this.d))},gcd:function(a,b){return parse(a,b),new Fraction(gcd(P.n,this.n)*gcd(P.d,this.d),P.d*this.d)},lcm:function(a,b){return parse(a,b),0===P.n&&0===this.n?new Fraction:new Fraction(P.n*this.n,gcd(P.n,this.n)*gcd(P.d,this.d))},ceil:function(places){return places=Math.pow(10,places||0),isNaN(this.n)||isNaN(this.d)?new Fraction(NaN):new Fraction(Math.ceil(places*this.s*this.n/this.d),places)},floor:function(places){return places=Math.pow(10,places||0),isNaN(this.n)||isNaN(this.d)?new Fraction(NaN):new Fraction(Math.floor(places*this.s*this.n/this.d),places)},round:function(places){return places=Math.pow(10,places||0),isNaN(this.n)||isNaN(this.d)?new Fraction(NaN):new Fraction(Math.round(places*this.s*this.n/this.d),places)},inverse:function(){return new Fraction(this.s*this.d,this.n)},pow:function(m){return m<0?new Fraction(Math.pow(this.s*this.d,-m),Math.pow(this.n,-m)):new Fraction(Math.pow(this.s*this.n,m),Math.pow(this.d,m))},equals:function(a,b){return parse(a,b),this.s*this.n*P.d==P.s*P.n*this.d},compare:function(a,b){parse(a,b);var t=this.s*this.n*P.d-P.s*P.n*this.d;return(0<t)-(t<0)},simplify:function(eps){if(isNaN(this.n)||isNaN(this.d))return this;var cont=this.abs().toContinued();function rec(a){return 1===a.length?new Fraction(a[0]):rec(a.slice(1)).inverse().add(a[0])}eps=eps||.001;for(var i=0;i<cont.length;i++){var tmp=rec(cont.slice(0,i+1));if(tmp.sub(this.abs()).abs().valueOf()<eps)return tmp.mul(this.s)}return this},divisible:function(a,b){return parse(a,b),!(!(P.n*this.d)||this.n*P.d%(P.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(excludeWhole){var whole,str="",n=this.n,d=this.d;return this.s<0&&(str+="-"),1===d?str+=n:(excludeWhole&&(whole=Math.floor(n/d))>0&&(str+=whole,str+=" ",n%=d),str+=n,str+="/",str+=d),str},toLatex:function(excludeWhole){var whole,str="",n=this.n,d=this.d;return this.s<0&&(str+="-"),1===d?str+=n:(excludeWhole&&(whole=Math.floor(n/d))>0&&(str+=whole,n%=d),str+="\\frac{",str+=n,str+="}{",str+=d,str+="}"),str},toContinued:function(){var t,a=this.n,b=this.d,res=[];if(isNaN(this.n)||isNaN(this.d))return res;do{res.push(Math.floor(a/b)),t=a%b,a=b,b=t}while(1!==a);return res},toString:function(dec){var g,N=this.n,D=this.d;if(isNaN(N)||isNaN(D))return"NaN";Fraction.REDUCE||(N/=g=gcd(N,D),D/=g),dec=dec||15;var cycLen=cycleLen(N,D),cycOff=cycleStart(N,D,cycLen),str=-1===this.s?"-":"";if(str+=N/D|0,N%=D,(N*=10)&&(str+="."),cycLen){for(var i=cycOff;i--;)str+=N/D|0,N%=D,N*=10;str+="(";for(var i=cycLen;i--;)str+=N/D|0,N%=D,N*=10;str+=")"}else for(var i=dec;N&&i--;)str+=N/D|0,N%=D,N*=10;return str}},Object.defineProperty(exports,"__esModule",{value:!0}),Fraction.default=Fraction,Fraction.Fraction=Fraction,module.exports=Fraction}()})),fraction$1=unwrapExports(fraction),exports_4("default",fraction$1),exports_4("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/-/javascript-natural-sort@v0.7.1-LaHLPVOwMJtkFbaCwNsf/dist=es2020/javascript-natural-sort",[],(function(exports_5,context_5){var naturalSort,__esModule,__moduleName=context_5&&context_5.id;return{setters:[],execute:function(){exports_5("default",naturalSort=function naturalSort(a,b){var re=/(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,sre=/(^[ ]*|[ ]*$)/g,dre=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,hre=/^0x[0-9a-f]+$/i,ore=/^0/,i=function(s){return naturalSort.insensitive&&(""+s).toLowerCase()||""+s},x=i(a).replace(sre,"")||"",y=i(b).replace(sre,"")||"",xN=x.replace(re,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),yN=y.replace(re,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),xD=parseInt(x.match(hre),16)||1!==xN.length&&x.match(dre)&&Date.parse(x),yD=parseInt(y.match(hre),16)||xD&&y.match(dre)&&Date.parse(y)||null,oFxNcL,oFyNcL;if(yD){if(xD<yD)return-1;if(xD>yD)return 1}for(var cLoc=0,numS=Math.max(xN.length,yN.length);cLoc<numS;cLoc++){if(oFxNcL=!(xN[cLoc]||"").match(ore)&&parseFloat(xN[cLoc])||xN[cLoc]||0,oFyNcL=!(yN[cLoc]||"").match(ore)&&parseFloat(yN[cLoc])||yN[cLoc]||0,isNaN(oFxNcL)!==isNaN(oFyNcL))return isNaN(oFxNcL)?1:-1;if(typeof oFxNcL!=typeof oFyNcL&&(oFxNcL+="",oFyNcL+=""),oFxNcL<oFyNcL)return-1;if(oFxNcL>oFyNcL)return 1}return 0}),exports_5("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/-/escape-latex@v1.2.0-LqeKBZCkPkQA57FkPA3G/dist=es2020/escape-latex",[],(function(exports_6,context_6){var _extends,defaultEscapes,formatEscapes,defaultEscapeMapFn,dist,__esModule,__moduleName=context_6&&context_6.id;return{setters:[],execute:function(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},defaultEscapes={"{":"\\{","}":"\\}","\\":"\\textbackslash{}","#":"\\#",$:"\\$","%":"\\%","&":"\\&","^":"\\textasciicircum{}",_:"\\_","~":"\\textasciitilde{}"},formatEscapes={"–":"\\--","—":"\\---"," ":"~","\t":"\\qquad{}","\r\n":"\\newline{}","\n":"\\newline{}"},defaultEscapeMapFn=function defaultEscapeMapFn(defaultEscapes,formatEscapes){return _extends({},defaultEscapes,formatEscapes)},exports_6("default",dist=function(str){for(var _ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},_ref$preserveFormatti=_ref.preserveFormatting,preserveFormatting=void 0!==_ref$preserveFormatti&&_ref$preserveFormatti,_ref$escapeMapFn=_ref.escapeMapFn,escapeMapFn=void 0===_ref$escapeMapFn?defaultEscapeMapFn:_ref$escapeMapFn,runningStr=String(str),result="",escapes=escapeMapFn(_extends({},defaultEscapes),preserveFormatting?_extends({},formatEscapes):{}),escapeKeys=Object.keys(escapes),_loop=function _loop(){var specialCharFound=!1;escapeKeys.forEach((function(key,index){specialCharFound||runningStr.length>=key.length&&runningStr.slice(0,key.length)===key&&(result+=escapes[escapeKeys[index]],runningStr=runningStr.slice(key.length,runningStr.length),specialCharFound=!0)})),specialCharFound||(result+=runningStr.slice(0,1),runningStr=runningStr.slice(1,runningStr.length))};runningStr;)_loop();return result}),exports_6("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/-/seed-random@v2.2.0-mID85rR87X0LmUyC7P88/dist=es2020/seed-random",[],(function(exports_7,context_7){var commonjsGlobal,seedRandom,__esModule,__moduleName=context_7&&context_7.id;function createCommonjsModule(fn,basedir,module){return fn(module={path:basedir,exports:{},require:function(path,base){return commonjsRequire(path,null==base?module.path:base)}},module.exports),module.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}return{setters:[],execute:function(){commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},seedRandom=createCommonjsModule((function(module){var width=256,chunks=6,digits=52,pool=[],GLOBAL=void 0===commonjsGlobal?window:commonjsGlobal,startdenom=Math.pow(256,6),significance=Math.pow(2,52),overflow=2*significance,mask=255,oldRandom=Math.random;function ARC4(key){var t,keylen=key.length,me=this,i=0,j=me.i=me.j=0,s=me.S=[];for(keylen||(key=[keylen++]);i<256;)s[i]=i++;for(i=0;i<256;i++)s[i]=s[j=255&j+key[i%keylen]+(t=s[i])],s[j]=t;(me.g=function(count){for(var t,r=0,i=me.i,j=me.j,s=me.S;count--;)t=s[i=255&i+1],r=256*r+s[255&(s[i]=s[j=255&j+t])+(s[j]=t)];return me.i=i,me.j=j,r})(256)}function flatten(obj,depth){var result=[],typ=(typeof obj)[0],prop;if(depth&&"o"==typ)for(prop in obj)try{result.push(flatten(obj[prop],depth-1))}catch(e){}return result.length?result:"s"==typ?obj:obj+"\0"}function mixkey(seed,key){for(var stringseed=seed+"",smear,j=0;j<stringseed.length;)key[255&j]=255&(smear^=19*key[255&j])+stringseed.charCodeAt(j++);return tostring(key)}function autoseed(seed){try{return GLOBAL.crypto.getRandomValues(seed=new Uint8Array(256)),tostring(seed)}catch(e){return[+new Date,GLOBAL,GLOBAL.navigator&&GLOBAL.navigator.plugins,GLOBAL.screen,tostring(pool)]}}function tostring(a){return String.fromCharCode.apply(0,a)}module.exports=function(seed,options){if(options&&!0===options.global)return options.global=!1,Math.random=module.exports(seed,options),options.global=!0,Math.random;var use_entropy=options&&options.entropy||!1,key=[],shortseed=mixkey(flatten(use_entropy?[seed,tostring(pool)]:0 in arguments?seed:autoseed(),3),key),arc4=new ARC4(key);return mixkey(tostring(arc4.S),pool),function(){for(var n=arc4.g(6),d=startdenom,x=0;n<significance;)n=256*(n+x),d*=256,x=arc4.g(1);for(;n>=overflow;)n/=2,d/=2,x>>>=1;return(n+x)/d}},module.exports.resetGlobal=function(){Math.random=oldRandom},mixkey(Math.random(),pool)})),exports_7("default",seedRandom),exports_7("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/-/tiny-emitter@v2.1.0-yhwPTzoEJjLA0c8E2HsB/dist=es2020/tiny-emitter",[],(function(exports_8,context_8){var tinyEmitter,TinyEmitter,__esModule,__moduleName=context_8&&context_8.id;function E(){}return{setters:[],execute:function(){E.prototype={on:function(name,callback,ctx){var e=this.e||(this.e={});return(e[name]||(e[name]=[])).push({fn:callback,ctx:ctx}),this},once:function(name,callback,ctx){var self=this;function listener(){self.off(name,listener),callback.apply(ctx,arguments)}return listener._=callback,this.on(name,listener,ctx)},emit:function(name){for(var data=[].slice.call(arguments,1),evtArr=((this.e||(this.e={}))[name]||[]).slice(),i=0,len=evtArr.length;i<len;i++)evtArr[i].fn.apply(evtArr[i].ctx,data);return this},off:function(name,callback){var e=this.e||(this.e={}),evts=e[name],liveEvents=[];if(evts&&callback)for(var i=0,len=evts.length;i<len;i++)evts[i].fn!==callback&&evts[i].fn._!==callback&&liveEvents.push(evts[i]);return liveEvents.length?e[name]=liveEvents:delete e[name],this}},tinyEmitter=E,exports_8("TinyEmitter",TinyEmitter=E),tinyEmitter.TinyEmitter=TinyEmitter,exports_8("default",tinyEmitter),exports_8("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/-/mathjs@v7.1.0-TyzdyALBLfpK6JafBwu5/dist=es2020/mathjs",["https://cdn.skypack.dev/-/typed-function@v2.0.0-PIfX8IIJDnSXLmzuTzCk/dist=es2020/typed-function","https://cdn.skypack.dev/-/decimal.js@v10.2.0-FAMDtm6MZaoTqtvOmlHu/dist=es2020/decimal","https://cdn.skypack.dev/-/complex.js@v2.0.11-pqdvciUusxTzW8SatDqI/dist=es2020/complex","https://cdn.skypack.dev/-/fraction.js@v4.0.12-T3QvKfUHIcZUlFktudbS/dist=es2020/fraction","https://cdn.skypack.dev/-/javascript-natural-sort@v0.7.1-LaHLPVOwMJtkFbaCwNsf/dist=es2020/javascript-natural-sort","https://cdn.skypack.dev/-/escape-latex@v1.2.0-LqeKBZCkPkQA57FkPA3G/dist=es2020/escape-latex","https://cdn.skypack.dev/-/seed-random@v2.2.0-mID85rR87X0LmUyC7P88/dist=es2020/seed-random","https://cdn.skypack.dev/-/tiny-emitter@v2.1.0-yhwPTzoEJjLA0c8E2HsB/dist=es2020/tiny-emitter"],(function(exports_9,context_9){var dist_es2020_from_mathjs_1,decimal_js_1,complex_js_1,fraction_js_1,javascript_natural_sort_js_1,escape_latex_js_1,seed_random_js_1,tiny_emitter_js_1,DEFAULT_CONFIG,isArray,MATRIX_OPTIONS,NUMBER_OPTIONS,config,sign,log2,log10,log1p,cbrt,expm1,DBL_EPSILON,acosh,asinh,atanh,cosh,sinh,tanh,_createTyped2,dependencies,createTyped,name,dependencies$1,createResultSet,name$1,dependencies$2,createBigNumberClass,name$2,dependencies$3,createComplexClass,name$3,dependencies$4,createFractionClass,name$4,dependencies$5,createRangeClass,name$5,dependencies$6,createMatrixClass,name$6,dependencies$7,createDenseMatrixClass,name$7,dependencies$8,createClone,name$8,dependencies$9,createIsInteger,n1,n2,n1$1,n2$1,pi,tau,e,phi,n1$2,n2$2,gammaG,gammaP,n1$3,n1$4,name$9,dependencies$a,createIsNegative,name$a,dependencies$b,createIsNumeric,name$b,dependencies$c,createHasNumericValue,name$c,dependencies$d,createIsPositive,name$d,dependencies$e,createIsZero,name$e,dependencies$f,createIsNaN,name$f,dependencies$g,createTypeOf,name$g,dependencies$h,createEqualScalar,createEqualScalarNumber,name$h,dependencies$i,createSparseMatrixClass,name$i,dependencies$j,createNumber,name$j,dependencies$k,createString,name$k,dependencies$l,createBoolean,name$l,dependencies$m,createBignumber,name$m,dependencies$n,createComplex,name$n,dependencies$o,createFraction,name$o,dependencies$p,createMatrix,name$p,dependencies$q,createSplitUnit,name$q,dependencies$r,createUnaryMinus,name$r,dependencies$s,createUnaryPlus,name$s,dependencies$t,createAbs,name$t,dependencies$u,createApply,name$u,dependencies$v,createAddScalar,name$v,dependencies$w,createCbrt,name$w,dependencies$x,createCeil,name$x,dependencies$y,createCube,name$y,dependencies$z,createExp,name$z,dependencies$A,createExpm1,name$A,dependencies$B,createFix,name$B,dependencies$C,createFloor,name$C,dependencies$D,createAlgorithm01,name$D,dependencies$E,createAlgorithm04,name$E,dependencies$F,createAlgorithm10,name$F,dependencies$G,createAlgorithm13,name$G,dependencies$H,createAlgorithm14,name$H,dependencies$I,createGcd,name$I,dependencies$J,createAlgorithm02,name$J,dependencies$K,createAlgorithm06,name$K,dependencies$L,createAlgorithm11,name$L,dependencies$M,createLcm,name$M,dependencies$N,createLog10,name$N,dependencies$O,createLog2,name$O,dependencies$P,createAlgorithm03,name$P,dependencies$Q,createAlgorithm05,name$Q,dependencies$R,createAlgorithm12,name$R,dependencies$S,createMod,name$S,dependencies$T,createMultiplyScalar,name$T,dependencies$U,createMultiply,name$U,dependencies$V,createNthRoot,name$V,dependencies$W,createSign,name$W,dependencies$X,createSqrt,name$X,dependencies$Y,createSquare,name$Y,dependencies$Z,createSubtract,name$Z,dependencies$_,createXgcd,name$_,dependencies$$,createAlgorithm09,name$$,dependencies$10,createDotMultiply,name$10,dependencies$11,createBitAnd,name$11,dependencies$12,createBitNot,name$12,dependencies$13,createBitOr,name$13,dependencies$14,createAlgorithm07,name$14,dependencies$15,createBitXor,name$15,dependencies$16,createArg,name$16,dependencies$17,createConj,name$17,dependencies$18,createIm,name$18,dependencies$19,createRe,name$19,dependencies$1a,createNot,name$1a,dependencies$1b,createOr,name$1b,dependencies$1c,createXor,name$1c,dependencies$1d,createConcat,name$1d,dependencies$1e,createColumn,name$1e,dependencies$1f,createCross,name$1f,dependencies$1g,createDiag,name$1g,dependencies$1h,createFilter,name$1h,dependencies$1i,createFlatten,name$1i,dependencies$1j,createForEach,name$1j,dependencies$1k,createGetMatrixDataType,name$1k,dependencies$1l,createIdentity,name$1l,dependencies$1m,createKron,name$1m,dependencies$1n,createMap,name$1n,dependencies$1o,createOnes,name$1o,dependencies$1p,createRange,name$1p,dependencies$1q,createReshape,name$1q,dependencies$1r,createResize,name$1r,dependencies$1s,createRow,name$1s,dependencies$1t,createSize,name$1t,dependencies$1u,createSqueeze,safeNativeProperties,safeNativeMethods,name$1u,dependencies$1v,createSubset,name$1v,dependencies$1w,createTranspose,name$1w,dependencies$1x,createCtranspose,name$1x,dependencies$1y,createZeros,name$1y,dependencies$1z,createErf,THRESH,SQRPI,P,Q,MAX_NUM,name$1z,dependencies$1A,createMode,name$1A,dependencies$1B,createProd,name$1B,dependencies$1C,createFormat,name$1C,dependencies$1D,createPrint,name$1D,dependencies$1E,createTo,name$1E,dependencies$1F,createIsPrime,name$1F,dependencies$1G,createNumeric,name$1G,dependencies$1H,createDivideScalar,name$1H,dependencies$1I,createPow,NO_INT,name$1I,dependencies$1J,createRound,roundNumberSignatures,name$1J,dependencies$1K,createLog,name$1K,dependencies$1L,createLog1p,name$1L,dependencies$1M,createNthRoots,name$1M,dependencies$1N,createDotPow,name$1N,dependencies$1O,createDotDivide,name$1O,dependencies$1P,createLsolve,name$1P,dependencies$1Q,createUsolve,name$1Q,dependencies$1R,createAlgorithm08,name$1R,dependencies$1S,createLeftShift,name$1S,dependencies$1T,createRightArithShift,name$1T,dependencies$1U,createRightLogShift,name$1U,dependencies$1V,createAnd,name$1V,dependencies$1W,createCompare,name$1W,dependencies$1X,createCompareNatural,name$1X,dependencies$1Y,createCompareText,name$1Y,dependencies$1Z,createEqual,createEqualNumber,name$1Z,dependencies$1_,createEqualText,name$1_,dependencies$1$,createSmaller,name$1$,dependencies$20,createSmallerEq,name$20,dependencies$21,createLarger,name$21,dependencies$22,createLargerEq,name$22,dependencies$23,createDeepEqual,name$23,dependencies$24,createUnequal,createUnequalNumber,name$24,dependencies$25,createPartitionSelect,name$25,dependencies$26,createSort,name$26,dependencies$27,createMax,name$27,dependencies$28,createMin,name$28,dependencies$29,createImmutableDenseMatrixClass,name$29,dependencies$2a,createIndexClass,name$2a,dependencies$2b,createFibonacciHeapClass,name$2b,dependencies$2c,createSpaClass,createBigNumberE,createBigNumberPhi,createBigNumberPi,createBigNumberTau,name$2c,dependencies$2d,createUnitClass,name$2d,dependencies$2e,createUnitFunction,name$2e,dependencies$2f,createSparse,name$2f,dependencies$2g,createCreateUnit,name$2g,dependencies$2h,createAcos,name$2h,dependencies$2i,createAcosh,name$2i,dependencies$2j,createAcot,name$2j,dependencies$2k,createAcoth,name$2k,dependencies$2l,createAcsc,name$2l,dependencies$2m,createAcsch,name$2m,dependencies$2n,createAsec,name$2n,dependencies$2o,createAsech,name$2o,dependencies$2p,createAsin,name$2p,dependencies$2q,createAsinh,name$2q,dependencies$2r,createAtan,name$2r,dependencies$2s,createAtan2,name$2s,dependencies$2t,createAtanh,name$2t,dependencies$2u,createCos,name$2u,dependencies$2v,createCosh,name$2v,dependencies$2w,createCot,name$2w,dependencies$2x,createCoth,name$2x,dependencies$2y,createCsc,name$2y,dependencies$2z,createCsch,name$2z,dependencies$2A,createSec,name$2A,dependencies$2B,createSech,name$2B,dependencies$2C,createSin,name$2C,dependencies$2D,createSinh,name$2D,dependencies$2E,createTan,name$2E,dependencies$2F,createTanh,name$2F,dependencies$2G,createSetCartesian,name$2G,dependencies$2H,createSetDifference,name$2H,dependencies$2I,createSetDistinct,name$2I,dependencies$2J,createSetIntersect,name$2J,dependencies$2K,createSetIsSubset,name$2K,dependencies$2L,createSetMultiplicity,name$2L,dependencies$2M,createSetPowerset,name$2M,dependencies$2N,createSetSize,name$2N,dependencies$2O,createSetSymDifference,name$2O,dependencies$2P,createSetUnion,name$2P,dependencies$2Q,createAdd,name$2Q,dependencies$2R,createHypot,name$2R,dependencies$2S,createNorm,name$2S,dependencies$2T,createDot,name$2T,dependencies$2U,createTrace,name$2U,dependencies$2V,createIndex,keywords,name$2V,dependencies$2W,createNode,name$2W,dependencies$2X,createAccessorNode,name$2X,dependencies$2Y,createArrayNode,properties,name$2Y,dependencies$2Z,createAssignmentNode,name$2Z,dependencies$2_,createBlockNode,name$2_,dependencies$2$,createConditionalNode,latexSymbols,latexOperators,latexFunctions,defaultTemplate,latexUnits,name$2$,dependencies$30,createConstantNode,name$30,dependencies$31,createFunctionAssignmentNode,name$31,dependencies$32,createIndexNode,name$32,dependencies$33,createObjectNode,name$33,dependencies$34,createOperatorNode,name$34,dependencies$35,createParenthesisNode,name$35,dependencies$36,createRangeNode,name$36,dependencies$37,createRelationalNode,name$37,dependencies$38,createSymbolNode,name$38,dependencies$39,createFunctionNode,name$39,dependencies$3a,createParse,name$3a,dependencies$3b,createCompile,name$3b,dependencies$3c,createEvaluate,name$3c,dependencies$3d,createParserClass,name$3d,dependencies$3e,createParser,name$3e,dependencies$3f,createLup,name$3f,dependencies$3g,createQr,name$3g,dependencies$3h,createCsAmd,name$3h,dependencies$3i,createCsCounts,name$3i,dependencies$3j,createCsSqr,name$3j,dependencies$3k,createCsSpsolve,name$3k,dependencies$3l,createCsLu,name$3l,dependencies$3m,createSlu,name$3m,dependencies$3n,createLusolve,name$3n,dependencies$3o,createHelpClass,name$3o,dependencies$3p,createChainClass,bignumberDocs,typeOfDocs,isZeroDocs,isPrimeDocs,isPositiveDocs,isNumericDocs,hasNumericValueDocs,isNegativeDocs,isIntegerDocs,isNaNDocs,formatDocs,cloneDocs,toDocs,tanhDocs,tanDocs,sinhDocs,sechDocs,secDocs,cschDocs,cscDocs,cothDocs,cotDocs,coshDocs,cosDocs,atan2Docs,atanhDocs,atanDocs,asinhDocs,asinDocs,asechDocs,asecDocs,acschDocs,acscDocs,acothDocs,acotDocs,acoshDocs,acosDocs,sumDocs,stdDocs,quantileSeqDocs,prodDocs,modeDocs,minDocs,medianDocs,meanDocs,maxDocs,madDocs,erfDocs,setUnionDocs,setSymDifferenceDocs,setSizeDocs,setPowersetDocs,setMultiplicityDocs,setIsSubsetDocs,setIntersectDocs,setDistinctDocs,setDifferenceDocs,setCartesianDocs,unequalDocs,smallerEqDocs,smallerDocs,largerEqDocs,largerDocs,equalTextDocs,equalDocs,deepEqualDocs,compareTextDocs,compareNaturalDocs,compareDocs,randomIntDocs,randomDocs,pickRandomDocs,permutationsDocs,multinomialDocs,kldivergenceDocs,gammaDocs,factorialDocs,combinationsDocs,combinationsWithRepDocs,zerosDocs,transposeDocs,traceDocs,subsetDocs,squeezeDocs,sortDocs,sizeDocs,reshapeDocs,resizeDocs,rangeDocs,partitionSelectDocs,onesDocs,mapDocs,kronDocs,invDocs,forEachDocs,flattenDocs,filterDocs,identityDocs,getMatrixDataTypeDocs,dotDocs,diagDocs,detDocs,ctransposeDocs,crossDocs,concatDocs,xorDocs,orDocs,notDocs,andDocs,intersectDocs,distanceDocs,helpDocs,evaluateDocs,imDocs,reDocs,conjDocs,argDocs,typedDocs,importDocs,configDocs,stirlingS2Docs,compositionDocs,catalanDocs,bellNumbersDocs,rightLogShiftDocs,rightArithShiftDocs,leftShiftDocs,bitXorDocs,bitOrDocs,bitNotDocs,bitAndDocs,xgcdDocs,unaryPlusDocs,unaryMinusDocs,squareDocs,sqrtmDocs,sqrtDocs,signDocs,roundDocs,powDocs,nthRootsDocs,nthRootDocs,normDocs,multiplyDocs,modDocs,log10Docs,log1pDocs,log2Docs,logDocs,lcmDocs,hypotDocs,gcdDocs,floorDocs,fixDocs,expm1Docs,expmDocs,eigsDocs,expDocs,dotMultiplyDocs,dotDivideDocs,divideDocs,cubeDocs,ceilDocs,cbrtDocs,addDocs,absDocs,qrDocs,usolveDocs,sluDocs,rationalizeDocs,simplifyDocs,lupDocs,lsolveDocs,derivativeDocs,versionDocs,trueDocs,tauDocs,SQRT2Docs,SQRT12Docs,phiDocs,piDocs,nullDocs,NaNDocs,LOG10EDocs,LOG2EDocs,LN10Docs,LN2Docs,InfinityDocs,iDocs,falseDocs,eDocs,unitDocs,stringDocs,splitUnitDocs,sparseDocs,numberDocs,matrixDocs,indexDocs,fractionDocs,createUnitDocs,complexDocs,booleanDocs,dotPowDocs,lusolveDocs,subtractDocs,varianceDocs,sinDocs,numericDocs,columnDocs,rowDocs,embeddedDocs,name$3p,dependencies$3q,createHelp,name$3q,dependencies$3r,createChain,name$3r,dependencies$3s,createDet,name$3s,dependencies$3t,createInv,name$3t,dependencies$3u,createEigs,name$3u,dependencies$3v,createExpm,name$3v,dependencies$3w,createSqrtm,name$3w,dependencies$3x,createDivide,name$3x,dependencies$3y,createDistance,name$3y,dependencies$3z,createIntersect,name$3z,dependencies$3A,createSum,name$3A,dependencies$3B,createMean,name$3B,dependencies$3C,createMedian,name$3C,dependencies$3D,createMad,DEFAULT_NORMALIZATION,name$3D,dependencies$3E,createVariance,name$3E,dependencies$3F,createQuantileSeq,name$3F,dependencies$3G,createStd,name$3G,dependencies$3H,createCombinations,name$3H,dependencies$3I,createCombinationsWithRep,name$3I,dependencies$3J,createGamma,name$3J,dependencies$3K,createFactorial,name$3K,dependencies$3L,createKldivergence,name$3L,dependencies$3M,createMultinomial,name$3M,dependencies$3N,createPermutations,singletonRandom,name$3N,dependencies$3O,createPickRandom,name$3O,dependencies$3P,createRandom,name$3P,dependencies$3Q,createRandomInt,name$3Q,dependencies$3R,createStirlingS2,name$3R,dependencies$3S,createBellNumbers,name$3S,dependencies$3T,createCatalan,name$3T,dependencies$3U,createComposition,name$3U,dependencies$3V,createUtil,name$3V,dependencies$3W,createSimplifyCore,name$3W,dependencies$3X,createSimplifyConstant,name$3X,dependencies$3Y,createResolve,name$3Y,dependencies$3Z,createSimplify,name$3Z,dependencies$3_,createDerivative,name$3_,dependencies$3$,createRationalize,name$3$,dependencies$40,createReviver,name$40,dependencies$41,createReplacer,version,createTrue,createFalse,createNull,createInfinity,createNaN,createPi,createTau,createE,createPhi,createLN2,createLN10,createLOG2E,createLOG10E,createSQRT1_2,createSQRT2,createI,createUppercasePi,createUppercaseE,createVersion,createSpeedOfLight,createGravitationConstant,createPlanckConstant,createReducedPlanckConstant,createMagneticConstant,createElectricConstant,createVacuumImpedance,createCoulomb,createElementaryCharge,createBohrMagneton,createConductanceQuantum,createInverseConductanceQuantum,createMagneticFluxQuantum,createNuclearMagneton,createKlitzing,createBohrRadius,createClassicalElectronRadius,createElectronMass,createFermiCoupling,createFineStructure,createHartreeEnergy,createProtonMass,createDeuteronMass,createNeutronMass,createQuantumOfCirculation,createRydberg,createThomsonCrossSection,createWeakMixingAngle,createEfimovFactor,createAtomicMass,createAvogadro,createBoltzmann,createFaraday,createFirstRadiation,createLoschmidt,createGasConstant,createMolarPlanckConstant,createMolarVolume,createSackurTetrode,createSecondRadiation,createStefanBoltzmann,createWienDisplacement,createMolarMass,createMolarMassC12,createGravity,createPlanckLength,createPlanckMass,createPlanckTime,createPlanckCharge,createPlanckTemperature,name$41,dependencies$42,createApplyTransform,name$42,dependencies$43,createColumnTransform,name$43,dependencies$44,createFilterTransform,name$44,dependencies$45,createForEachTransform,name$45,dependencies$46,createIndexTransform,name$46,dependencies$47,createMapTransform,name$47,dependencies$48,createMaxTransform,name$48,dependencies$49,createMeanTransform,name$49,dependencies$4a,createMinTransform,name$4a,dependencies$4b,createRangeTransform,name$4b,dependencies$4c,createRowTransform,name$4c,dependencies$4d,createSubsetTransform,name$4d,dependencies$4e,createConcatTransform,name$4e,dependencies$4f,createStdTransform,name$4f,dependencies$4g,createSumTransform,name$4g,dependencies$4h,createVarianceTransform,allFactories,ResultSet,Complex,Range,_false,_null,_true,BigNumber,Matrix,replacer,i,LN10,LOG10E,_NaN,pi$1,SQRT1_2,tau$1,efimovFactor,fineStructure,sackurTetrode,weakMixingAngle,Fraction,e$1,_Infinity,LOG2E,version$1,DenseMatrix,phi$1,typed,isInteger$1,isNumeric,isPositive,isNaN$1,equalScalar,number,_boolean,complex,splitUnit,unaryPlus,apply,cube,expm1$1,log10$1,multiplyScalar,sign$1,square,bitNot,arg,im,not,filter$1,forEach$1,map$1,erf,format$3,isPrime,acos,acot,acsc,asec,asin,atan,atanh$1,cosh$1,coth,csch,sech,sinh$1,tanh$1,combinations,pickRandom,randomInt,LN2,clone$1,hasNumericValue,typeOf$1,string,fraction,unaryMinus,addScalar,exp,log2$1,sqrt,conj,getMatrixDataType,mode,print,acosh$1,acsch,asinh$1,cos,csc,sin,combinationsWithRep,random,SQRT2,isNegative,SparseMatrix,matrix,cbrt$1,gcd,mod,nthRoot,xgcd,bitAnd,bitXor$1,or,concat,diag,identity,ones,reshape$1,size,subset,zeros$1,to,round,leftShift,rightLogShift,compare,compareText$1,smaller,larger,unequal,ImmutableDenseMatrix,FibonacciHeap,sparse,acoth,atan2,sec,add,dot,composition,isZero,abs,floor,multiply,dotMultiply,re,flatten$1,resize$1,squeeze$1,pow,dotPow,rightArithShift,compareNatural,equalText,largerEq,partitionSelect,Index,asech,tan,setDifference,setIntersect,setMultiplicity,setSize,norm,index,quantileSeq,gamma,bignumber,lcm,bitOr,kron,transpose,numeric,and,smallerEq,sort,min,cot,setDistinct,setPowerset,trace,sum,factorial,permutations,ceil,subtract,cross,ctranspose,divideScalar,nthRoots,lsolve,equal,max,setCartesian,setSymDifference,hypot,qr,distance,stirlingS2,catalan,fix,range,prod,dotDivide,deepEqual,Unit,createUnit,setUnion,slu,intersect,bellNumbers,atomicMass,bohrMagneton,boltzmann,conductanceQuantum,deuteronMass,electronMass,faraday,firstRadiation,gravitationConstant,hartreeEnergy,klitzing,magneticConstant,molarMass,molarPlanckConstant,neutronMass,planckCharge,planckLength,planckTemperature,protonMass,reducedPlanckConstant,secondRadiation,stefanBoltzmann,vacuumImpedance,xor,row,usolve,unit,avogadro,classicalElectronRadius,electricConstant,fermiCoupling,gravity,loschmidt,molarMassC12,nuclearMagneton,planckMass,quantumOfCirculation,speedOfLight,wienDisplacement,column,Spa,lup,det,bohrRadius,elementaryCharge,inverseConductanceQuantum,molarVolume,planckTime,thomsonCrossSection,log,setIsSubset,lusolve,inv,expm,divide,median,variance,kldivergence,coulomb,magneticFluxQuantum,rydberg,log1p$1,eigs,mean,std,gasConstant,sqrtm,multinomial,planckConstant,mad,math,mathWithTransform,classes,Node,ArrayNode,BlockNode,ConstantNode,ObjectNode,ParenthesisNode,RelationalNode,Chain,reviver,ConditionalNode,OperatorNode,RangeNode,FunctionAssignmentNode,chain,AccessorNode,IndexNode,SymbolNode,AssignmentNode,FunctionNode,parse,evaluate,Help,compile,help,simplify,rationalize,Parser,parser,derivative,BigNumberDependencies,ComplexDependencies,MatrixDependencies,DenseMatrixDependencies,FractionDependencies,typedDependencies,ResultSetDependencies,RangeDependencies,cloneDependencies,isIntegerDependencies,isNegativeDependencies,isNumericDependencies,hasNumericValueDependencies,isPositiveDependencies,isZeroDependencies,isNaNDependencies,typeOfDependencies,equalScalarDependencies,SparseMatrixDependencies,numberDependencies,stringDependencies,booleanDependencies,bignumberDependencies,complexDependencies,fractionDependencies,matrixDependencies,splitUnitDependencies,unaryMinusDependencies,unaryPlusDependencies,absDependencies,applyDependencies,addScalarDependencies,cbrtDependencies,zerosDependencies,roundDependencies,ceilDependencies,cubeDependencies,expDependencies,expm1Dependencies,floorDependencies,fixDependencies,gcdDependencies,lcmDependencies,log10Dependencies,log2Dependencies,modDependencies,multiplyScalarDependencies,conjDependencies,sizeDependencies,dotDependencies,multiplyDependencies,nthRootDependencies,signDependencies,sqrtDependencies,squareDependencies,subtractDependencies,xgcdDependencies,dotMultiplyDependencies,bitAndDependencies,bitNotDependencies,bitOrDependencies,bitXorDependencies,argDependencies,imDependencies,reDependencies,notDependencies,orDependencies,xorDependencies,concatDependencies,smallerDependencies,ImmutableDenseMatrixDependencies,IndexDependencies,largerDependencies,largerEqDependencies,smallerEqDependencies,rangeDependencies,columnDependencies,crossDependencies,diagDependencies,filterDependencies,flattenDependencies,forEachDependencies,getMatrixDataTypeDependencies,identityDependencies,kronDependencies,mapDependencies,onesDependencies,reshapeDependencies,resizeDependencies,rowDependencies,squeezeDependencies,subsetDependencies,transposeDependencies,ctransposeDependencies,erfDependencies,modeDependencies,numericDependencies,prodDependencies,formatDependencies,printDependencies,toDependencies,isPrimeDependencies,divideScalarDependencies,powDependencies,logDependencies,log1pDependencies,nthRootsDependencies,dotPowDependencies,dotDivideDependencies,lsolveDependencies,usolveDependencies,leftShiftDependencies,rightArithShiftDependencies,rightLogShiftDependencies,andDependencies,compareDependencies,compareNaturalDependencies,compareTextDependencies,equalDependencies,equalTextDependencies,deepEqualDependencies,unequalDependencies,partitionSelectDependencies,sortDependencies,maxDependencies,minDependencies,FibonacciHeapDependencies,SpaDependencies,UnitDependencies,unitDependencies,sparseDependencies,createUnitDependencies,acosDependencies,acoshDependencies,acotDependencies,acothDependencies,acscDependencies,acschDependencies,asecDependencies,asechDependencies,asinDependencies,asinhDependencies,atanDependencies,atan2Dependencies,atanhDependencies,cosDependencies,coshDependencies,cotDependencies,cothDependencies,cscDependencies,cschDependencies,secDependencies,sechDependencies,sinDependencies,sinhDependencies,tanDependencies,tanhDependencies,setCartesianDependencies,setDifferenceDependencies,setDistinctDependencies,setIntersectDependencies,setIsSubsetDependencies,setMultiplicityDependencies,setPowersetDependencies,setSizeDependencies,setSymDifferenceDependencies,setUnionDependencies,addDependencies,hypotDependencies,normDependencies,traceDependencies,indexDependencies,NodeDependencies,AccessorNodeDependencies,ArrayNodeDependencies,AssignmentNodeDependencies,BlockNodeDependencies,ConditionalNodeDependencies,ConstantNodeDependencies,FunctionAssignmentNodeDependencies,IndexNodeDependencies,ObjectNodeDependencies,OperatorNodeDependencies,ParenthesisNodeDependencies,RangeNodeDependencies,RelationalNodeDependencies,SymbolNodeDependencies,FunctionNodeDependencies,parseDependencies,compileDependencies,evaluateDependencies,ParserDependencies,parserDependencies,lupDependencies,qrDependencies,sluDependencies,lusolveDependencies,HelpDependencies,ChainDependencies,helpDependencies,chainDependencies,detDependencies,invDependencies,eigsDependencies,expmDependencies,sqrtmDependencies,divideDependencies,distanceDependencies,intersectDependencies,sumDependencies,meanDependencies,medianDependencies,madDependencies,varianceDependencies,quantileSeqDependencies,stdDependencies,combinationsDependencies,combinationsWithRepDependencies,gammaDependencies,factorialDependencies,kldivergenceDependencies,multinomialDependencies,permutationsDependencies,pickRandomDependencies,randomDependencies,randomIntDependencies,stirlingS2Dependencies,bellNumbersDependencies,catalanDependencies,compositionDependencies,simplifyDependencies,derivativeDependencies,rationalizeDependencies,reviverDependencies,replacerDependencies,eDependencies,EDependencies,falseDependencies,iDependencies,InfinityDependencies,LN10Dependencies,LN2Dependencies,LOG10EDependencies,LOG2EDependencies,NaNDependencies,nullDependencies,phiDependencies,piDependencies,PIDependencies,SQRT1_2Dependencies,SQRT2Dependencies,tauDependencies,trueDependencies,versionDependencies,atomicMassDependencies,avogadroDependencies,bohrMagnetonDependencies,bohrRadiusDependencies,boltzmannDependencies,classicalElectronRadiusDependencies,conductanceQuantumDependencies,coulombDependencies,deuteronMassDependencies,efimovFactorDependencies,electricConstantDependencies,electronMassDependencies,elementaryChargeDependencies,faradayDependencies,fermiCouplingDependencies,fineStructureDependencies,firstRadiationDependencies,gasConstantDependencies,gravitationConstantDependencies,gravityDependencies,hartreeEnergyDependencies,inverseConductanceQuantumDependencies,klitzingDependencies,loschmidtDependencies,magneticConstantDependencies,magneticFluxQuantumDependencies,molarMassDependencies,molarMassC12Dependencies,molarPlanckConstantDependencies,molarVolumeDependencies,neutronMassDependencies,nuclearMagnetonDependencies,planckChargeDependencies,planckConstantDependencies,planckLengthDependencies,planckMassDependencies,planckTemperatureDependencies,planckTimeDependencies,protonMassDependencies,quantumOfCirculationDependencies,reducedPlanckConstantDependencies,rydbergDependencies,sackurTetrodeDependencies,secondRadiationDependencies,speedOfLightDependencies,stefanBoltzmannDependencies,thomsonCrossSectionDependencies,vacuumImpedanceDependencies,weakMixingAngleDependencies,wienDisplacementDependencies,applyTransformDependencies,columnTransformDependencies,filterTransformDependencies,forEachTransformDependencies,indexTransformDependencies,mapTransformDependencies,maxTransformDependencies,meanTransformDependencies,minTransformDependencies,rangeTransformDependencies,rowTransformDependencies,subsetTransformDependencies,concatTransformDependencies,stdTransformDependencies,sumTransformDependencies,varianceTransformDependencies,all,__esModule,__moduleName=context_9&&context_9.id;function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function isNumber(x){return"number"==typeof x}function isBigNumber(x){return x&&!0===x.constructor.prototype.isBigNumber||!1}function isComplex(x){return x&&"object"===_typeof(x)&&!0===Object.getPrototypeOf(x).isComplex||!1}function isFraction(x){return x&&"object"===_typeof(x)&&!0===Object.getPrototypeOf(x).isFraction||!1}function isUnit(x){return x&&!0===x.constructor.prototype.isUnit||!1}function isString(x){return"string"==typeof x}function isMatrix(x){return x&&!0===x.constructor.prototype.isMatrix||!1}function isCollection(x){return Array.isArray(x)||isMatrix(x)}function isDenseMatrix(x){return x&&x.isDenseMatrix&&!0===x.constructor.prototype.isMatrix||!1}function isSparseMatrix(x){return x&&x.isSparseMatrix&&!0===x.constructor.prototype.isMatrix||!1}function isRange(x){return x&&!0===x.constructor.prototype.isRange||!1}function isIndex(x){return x&&!0===x.constructor.prototype.isIndex||!1}function isBoolean(x){return"boolean"==typeof x}function isResultSet(x){return x&&!0===x.constructor.prototype.isResultSet||!1}function isHelp(x){return x&&!0===x.constructor.prototype.isHelp||!1}function isFunction(x){return"function"==typeof x}function isDate(x){return x instanceof Date}function isRegExp(x){return x instanceof RegExp}function isObject(x){return!(!x||"object"!==_typeof(x)||x.constructor!==Object||isComplex(x)||isFraction(x))}function isNull(x){return null===x}function isUndefined(x){return void 0===x}function isAccessorNode(x){return x&&!0===x.isAccessorNode&&!0===x.constructor.prototype.isNode||!1}function isArrayNode(x){return x&&!0===x.isArrayNode&&!0===x.constructor.prototype.isNode||!1}function isAssignmentNode(x){return x&&!0===x.isAssignmentNode&&!0===x.constructor.prototype.isNode||!1}function isBlockNode(x){return x&&!0===x.isBlockNode&&!0===x.constructor.prototype.isNode||!1}function isConditionalNode(x){return x&&!0===x.isConditionalNode&&!0===x.constructor.prototype.isNode||!1}function isConstantNode(x){return x&&!0===x.isConstantNode&&!0===x.constructor.prototype.isNode||!1}function isFunctionAssignmentNode(x){return x&&!0===x.isFunctionAssignmentNode&&!0===x.constructor.prototype.isNode||!1}function isFunctionNode(x){return x&&!0===x.isFunctionNode&&!0===x.constructor.prototype.isNode||!1}function isIndexNode(x){return x&&!0===x.isIndexNode&&!0===x.constructor.prototype.isNode||!1}function isNode(x){return x&&!0===x.isNode&&!0===x.constructor.prototype.isNode||!1}function isObjectNode(x){return x&&!0===x.isObjectNode&&!0===x.constructor.prototype.isNode||!1}function isOperatorNode(x){return x&&!0===x.isOperatorNode&&!0===x.constructor.prototype.isNode||!1}function isParenthesisNode(x){return x&&!0===x.isParenthesisNode&&!0===x.constructor.prototype.isNode||!1}function isRangeNode(x){return x&&!0===x.isRangeNode&&!0===x.constructor.prototype.isNode||!1}function isSymbolNode(x){return x&&!0===x.isSymbolNode&&!0===x.constructor.prototype.isNode||!1}function isChain(x){return x&&!0===x.constructor.prototype.isChain||!1}function typeOf(x){var t=_typeof(x);return"object"===t?null===x?"null":Array.isArray(x)?"Array":x instanceof Date?"Date":x instanceof RegExp?"RegExp":isBigNumber(x)?"BigNumber":isComplex(x)?"Complex":isFraction(x)?"Fraction":isMatrix(x)?"Matrix":isUnit(x)?"Unit":isIndex(x)?"Index":isRange(x)?"Range":isResultSet(x)?"ResultSet":isNode(x)?x.type:isChain(x)?"Chain":isHelp(x)?"Help":"Object":"function"===t?"Function":t}function _typeof$1(obj){return(_typeof$1="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function clone(x){var type=_typeof$1(x);if("number"===type||"string"===type||"boolean"===type||null==x)return x;if("function"==typeof x.clone)return x.clone();if(Array.isArray(x))return x.map((function(value){return clone(value)}));if(x instanceof Date)return new Date(x.valueOf());if(isBigNumber(x))return x;if(x instanceof RegExp)throw new TypeError("Cannot clone "+x);return mapObject(x,clone)}function mapObject(object,callback){var clone={};for(var key in object)hasOwnProperty(object,key)&&(clone[key]=callback(object[key]));return clone}function extend(a,b){for(var prop in b)hasOwnProperty(b,prop)&&(a[prop]=b[prop]);return a}function deepExtend(a,b){if(Array.isArray(b))throw new TypeError("Arrays are not supported by deepExtend");for(var prop in b)if(hasOwnProperty(b,prop))if(b[prop]&&b[prop].constructor===Object)void 0===a[prop]&&(a[prop]={}),a[prop]&&a[prop].constructor===Object?deepExtend(a[prop],b[prop]):a[prop]=b[prop];else{if(Array.isArray(b[prop]))throw new TypeError("Arrays are not supported by deepExtend");a[prop]=b[prop]}return a}function deepStrictEqual(a,b){var prop,i,len;if(Array.isArray(a)){if(!Array.isArray(b))return!1;if(a.length!==b.length)return!1;for(i=0,len=a.length;i<len;i++)if(!deepStrictEqual(a[i],b[i]))return!1;return!0}if("function"==typeof a)return a===b;if(a instanceof Object){if(Array.isArray(b)||!(b instanceof Object))return!1;for(prop in a)if(!(prop in b&&deepStrictEqual(a[prop],b[prop])))return!1;for(prop in b)if(!(prop in a&&deepStrictEqual(a[prop],b[prop])))return!1;return!0}return a===b}function deepFlatten(nestedObject){var flattenedObject={};return _deepFlatten(nestedObject,flattenedObject),flattenedObject}function _deepFlatten(nestedObject,flattenedObject){for(var prop in nestedObject)if(hasOwnProperty(nestedObject,prop)){var value=nestedObject[prop];"object"===_typeof$1(value)&&null!==value?_deepFlatten(value,flattenedObject):flattenedObject[prop]=value}}function lazy(object,prop,valueResolver){var _uninitialized=!0,_value;Object.defineProperty(object,prop,{get:function get(){return _uninitialized&&(_value=valueResolver(),_uninitialized=!1),_value},set:function set(value){_value=value,_uninitialized=!1},configurable:!0,enumerable:!0})}function hasOwnProperty(object,property){return object&&Object.hasOwnProperty.call(object,property)}function isLegacyFactory(object){return object&&"function"==typeof object.factory}function pickShallow(object,properties){for(var copy={},i=0;i<properties.length;i++){var key=properties[i],value=object[key];void 0!==value&&(copy[key]=value)}return copy}function values(object){return Object.keys(object).map((function(key){return object[key]}))}function configFactory(config,emit){function _config(options){if(options){var prev=mapObject(config,clone);validateOption(options,"matrix",MATRIX_OPTIONS),validateOption(options,"number",NUMBER_OPTIONS),deepExtend(config,options);var curr=mapObject(config,clone),changes=mapObject(options,clone);return emit("config",curr,prev,changes),curr}return mapObject(config,clone)}return _config.MATRIX_OPTIONS=MATRIX_OPTIONS,_config.NUMBER_OPTIONS=NUMBER_OPTIONS,Object.keys(DEFAULT_CONFIG).forEach((function(key){Object.defineProperty(_config,key,{get:function get(){return config[key]},enumerable:!0,configurable:!0})})),_config}function contains(array,item){return-1!==array.indexOf(item)}function validateOption(options,name,values){void 0===options[name]||contains(values,options[name])||console.warn('Warning: Unknown value "'+options[name]+'" for configuration option "'+name+'". Available options: '+values.map((function(value){return JSON.stringify(value)})).join(", ")+".")}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function isInteger(value){return"boolean"==typeof value||!!isFinite(value)&&value===Math.round(value)}function format(value,options){if("function"==typeof options)return options(value);if(value===1/0)return"Infinity";if(value===-1/0)return"-Infinity";if(isNaN(value))return"NaN";var notation="auto",precision;switch(options&&(options.notation&&(notation=options.notation),isNumber(options)?precision=options:isNumber(options.precision)&&(precision=options.precision)),notation){case"fixed":return toFixed(value,precision);case"exponential":return toExponential(value,precision);case"engineering":return toEngineering(value,precision);case"auto":return toPrecision(value,precision,options&&options).replace(/((\.\d*?)(0+))($|e)/,(function(){var digits=arguments[2],e=arguments[4];return"."!==digits?digits+e:e}));default:throw new Error('Unknown notation "'+notation+'". Choose "auto", "exponential", or "fixed".')}}function splitNumber(value){var match=String(value).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!match)throw new SyntaxError("Invalid number "+value);var sign=match[1],digits=match[2],exponent=parseFloat(match[4]||"0"),dot=digits.indexOf(".");exponent+=-1!==dot?dot-1:digits.length-1;var coefficients=digits.replace(".","").replace(/^0*/,(function(zeros){return exponent-=zeros.length,""})).replace(/0*$/,"").split("").map((function(d){return parseInt(d)}));return 0===coefficients.length&&(coefficients.push(0),exponent++),{sign:sign,coefficients:coefficients,exponent:exponent}}function toEngineering(value,precision){if(isNaN(value)||!isFinite(value))return String(value);var split,rounded=roundDigits(splitNumber(value),precision),e=rounded.exponent,c=rounded.coefficients,newExp=e%3==0?e:e<0?e-3-e%3:e-e%3;if(isNumber(precision))for(;precision>c.length||e-newExp+1>c.length;)c.push(0);else for(var missingZeros=Math.abs(e-newExp)-(c.length-1),i=0;i<missingZeros;i++)c.push(0);for(var expDiff=Math.abs(e-newExp),decimalIdx=1;expDiff>0;)decimalIdx++,expDiff--;var decimals=c.slice(decimalIdx).join(""),decimalVal=isNumber(precision)&&decimals.length||decimals.match(/[1-9]/)?"."+decimals:"",str=c.slice(0,decimalIdx).join("")+decimalVal+"e"+(e>=0?"+":"")+newExp.toString();return rounded.sign+str}function toFixed(value,precision){if(isNaN(value)||!isFinite(value))return String(value);var splitValue=splitNumber(value),rounded="number"==typeof precision?roundDigits(splitValue,splitValue.exponent+1+precision):splitValue,c=rounded.coefficients,p=rounded.exponent+1,pp=p+(precision||0);return c.length<pp&&(c=c.concat(zeros(pp-c.length))),p<0&&(c=zeros(1-p).concat(c),p=1),p<c.length&&c.splice(p,0,0===p?"0.":"."),rounded.sign+c.join("")}function toExponential(value,precision){if(isNaN(value)||!isFinite(value))return String(value);var split=splitNumber(value),rounded=precision?roundDigits(split,precision):split,c=rounded.coefficients,e=rounded.exponent;c.length<precision&&(c=c.concat(zeros(precision-c.length)));var first=c.shift();return rounded.sign+first+(c.length>0?"."+c.join(""):"")+"e"+(e>=0?"+":"")+e}function toPrecision(value,precision,options){if(isNaN(value)||!isFinite(value))return String(value);var lowerExp=options&&void 0!==options.lowerExp?options.lowerExp:-3,upperExp=options&&void 0!==options.upperExp?options.upperExp:5,split=splitNumber(value),rounded=precision?roundDigits(split,precision):split;if(rounded.exponent<lowerExp||rounded.exponent>=upperExp)return toExponential(value,precision);var c=rounded.coefficients,e=rounded.exponent;c.length<precision&&(c=c.concat(zeros(precision-c.length))),c=c.concat(zeros(e-c.length+1+(c.length<precision?precision-c.length:0)));var dot=e>0?e:0;return dot<(c=zeros(-e).concat(c)).length-1&&c.splice(dot+1,0,"."),rounded.sign+c.join("")}function roundDigits(split,precision){for(var rounded={sign:split.sign,coefficients:split.coefficients,exponent:split.exponent},c=rounded.coefficients,removed;precision<=0;)c.unshift(0),rounded.exponent++,precision++;if(c.length>precision&&c.splice(precision,c.length-precision)[0]>=5){var i=precision-1;for(c[i]++;10===c[i];)c.pop(),0===i&&(c.unshift(0),rounded.exponent++,i++),c[--i]++}return rounded}function zeros(length){for(var arr=[],i=0;i<length;i++)arr.push(0);return arr}function digits(value){return value.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length}function nearlyEqual(x,y,epsilon){if(null==epsilon)return x===y;if(x===y)return!0;if(isNaN(x)||isNaN(y))return!1;if(isFinite(x)&&isFinite(y)){var diff=Math.abs(x-y);return diff<DBL_EPSILON||diff<=Math.max(Math.abs(x),Math.abs(y))*epsilon}return!1}function format$1(value,options){if("function"==typeof options)return options(value);if(!value.isFinite())return value.isNaN()?"NaN":value.gt(0)?"Infinity":"-Infinity";var notation="auto",precision;switch(void 0!==options&&(options.notation&&(notation=options.notation),"number"==typeof options?precision=options:options.precision&&(precision=options.precision)),notation){case"fixed":return toFixed$1(value,precision);case"exponential":return toExponential$1(value,precision);case"engineering":return toEngineering$1(value,precision);case"auto":var lowerExp=options&&void 0!==options.lowerExp?options.lowerExp:-3,upperExp=options&&void 0!==options.upperExp?options.upperExp:5,str;if(value.isZero())return"0";var rounded=value.toSignificantDigits(precision),exp=rounded.e;return(str=exp>=lowerExp&&exp<upperExp?rounded.toFixed():toExponential$1(value,precision)).replace(/((\.\d*?)(0+))($|e)/,(function(){var digits=arguments[2],e=arguments[4];return"."!==digits?digits+e:e}));default:throw new Error('Unknown notation "'+notation+'". Choose "auto", "exponential", or "fixed".')}}function toEngineering$1(value,precision){var e=value.e,newExp=e%3==0?e:e<0?e-3-e%3:e-e%3,valueWithoutExp=value.mul(Math.pow(10,-newExp)),valueStr=valueWithoutExp.toPrecision(precision);return-1!==valueStr.indexOf("e")&&(valueStr=valueWithoutExp.toString()),valueStr+"e"+(e>=0?"+":"")+newExp.toString()}function toExponential$1(value,precision){return void 0!==precision?value.toExponential(precision-1):value.toExponential()}function toFixed$1(value,precision){return value.toFixed(precision)}function _typeof$2(obj){return(_typeof$2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function endsWith(text,search){var start=text.length-search.length,end=text.length;return text.substring(start,end)===search}function format$2(value,options){return"number"==typeof value?format(value,options):isBigNumber(value)?format$1(value,options):looksLikeFraction(value)?options&&"decimal"===options.fraction?value.toString():value.s*value.n+"/"+value.d:Array.isArray(value)?formatArray(value,options):isString(value)?'"'+value+'"':"function"==typeof value?value.syntax?String(value.syntax):"function":value&&"object"===_typeof$2(value)?"function"==typeof value.format?value.format(options):value&&value.toString(options)!=={}.toString()?value.toString(options):"{"+Object.keys(value).map((function(key){return'"'+key+'": '+format$2(value[key],options)})).join(", ")+"}":String(value);var entries}function stringify(value){for(var text=String(value),escaped="",i=0;i<text.length;){var c=text.charAt(i);"\\"===c?(escaped+=c,i++,""!==(c=text.charAt(i))&&-1!=='"\\/bfnrtu'.indexOf(c)||(escaped+="\\"),escaped+=c):escaped+='"'===c?'\\"':c,i++}return'"'+escaped+'"'}function escape(value){var text=String(value);return text=text.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function formatArray(array,options){if(Array.isArray(array)){for(var str="[",len=array.length,i=0;i<len;i++)0!==i&&(str+=", "),str+=formatArray(array[i],options);return str+="]"}return format$2(array,options)}function looksLikeFraction(value){return value&&"object"===_typeof$2(value)&&"number"==typeof value.s&&"number"==typeof value.n&&"number"==typeof value.d||!1}function compareText(x,y){if(!isString(x))throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: "+typeOf(x)+", index: 0)");if(!isString(y))throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: "+typeOf(y)+", index: 1)");return x===y?0:x>y?1:-1}function DimensionError(actual,expected,relation){if(!(this instanceof DimensionError))throw new SyntaxError("Constructor must be called with the new operator");this.actual=actual,this.expected=expected,this.relation=relation,this.message="Dimension mismatch ("+(Array.isArray(actual)?"["+actual.join(", ")+"]":actual)+" "+(this.relation||"!=")+" "+(Array.isArray(expected)?"["+expected.join(", ")+"]":expected)+")",this.stack=(new Error).stack}function IndexError(index,min,max){if(!(this instanceof IndexError))throw new SyntaxError("Constructor must be called with the new operator");this.index=index,arguments.length<3?(this.min=0,this.max=min):(this.min=min,this.max=max),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}function arraySize(x){for(var s=[];Array.isArray(x);)s.push(x.length),x=x[0];return s}function _validate(array,size,dim){var i,len=array.length;if(len!==size[dim])throw new DimensionError(len,size[dim]);if(dim<size.length-1){var dimNext=dim+1;for(i=0;i<len;i++){var child=array[i];if(!Array.isArray(child))throw new DimensionError(size.length-1,size.length,"<");_validate(array[i],size,dimNext)}}else for(i=0;i<len;i++)if(Array.isArray(array[i]))throw new DimensionError(size.length+1,size.length,">")}function validate(array,size){var isScalar;if(0===size.length){if(Array.isArray(array))throw new DimensionError(array.length,0)}else _validate(array,size,0)}function validateIndex(index,length){if(!isNumber(index)||!isInteger(index))throw new TypeError("Index must be an integer (value: "+index+")");if(index<0||"number"==typeof length&&index>=length)throw new IndexError(index,length)}function resize(array,size,defaultValue){if(!Array.isArray(array)||!Array.isArray(size))throw new TypeError("Array expected");if(0===size.length)throw new Error("Resizing to scalar is not supported");var _defaultValue;return size.forEach((function(value){if(!isNumber(value)||!isInteger(value)||value<0)throw new TypeError("Invalid size, must contain positive integers (size: "+format$2(size)+")")})),_resize(array,size,0,void 0!==defaultValue?defaultValue:0),array}function _resize(array,size,dim,defaultValue){var i,elem,oldLen=array.length,newLen=size[dim],minLen=Math.min(oldLen,newLen);if(array.length=newLen,dim<size.length-1){var dimNext=dim+1;for(i=0;i<minLen;i++)elem=array[i],Array.isArray(elem)||(elem=[elem],array[i]=elem),_resize(elem,size,dimNext,defaultValue);for(i=minLen;i<newLen;i++)elem=[],array[i]=elem,_resize(elem,size,dimNext,defaultValue)}else{for(i=0;i<minLen;i++)for(;Array.isArray(array[i]);)array[i]=array[i][0];for(i=minLen;i<newLen;i++)array[i]=defaultValue}}function reshape(array,sizes){var flatArray=flatten(array),newArray;function product(arr){return arr.reduce((function(prev,curr){return prev*curr}))}if(!Array.isArray(array)||!Array.isArray(sizes))throw new TypeError("Array expected");if(0===sizes.length)throw new DimensionError(0,product(arraySize(array)),"!=");for(var totalSize=1,sizeIndex=0;sizeIndex<sizes.length;sizeIndex++)totalSize*=sizes[sizeIndex];if(flatArray.length!==totalSize)throw new DimensionError(product(sizes),product(arraySize(array)),"!=");try{newArray=_reshape(flatArray,sizes)}catch(e){if(e instanceof DimensionError)throw new DimensionError(product(sizes),product(arraySize(array)),"!=");throw e}return newArray}function _reshape(array,sizes){for(var tmpArray=array,tmpArray2,sizeIndex=sizes.length-1;sizeIndex>0;sizeIndex--){var size=sizes[sizeIndex];tmpArray2=[];for(var length=tmpArray.length/size,i=0;i<length;i++)tmpArray2.push(tmpArray.slice(i*size,(i+1)*size));tmpArray=tmpArray2}return tmpArray}function squeeze(array,size){for(var s=size||arraySize(array);Array.isArray(array)&&1===array.length;)array=array[0],s.shift();for(var dims=s.length;1===s[dims-1];)dims--;return dims<s.length&&(array=_squeeze(array,dims,0),s.length=dims),array}function _squeeze(array,dims,dim){var i,ii;if(dim<dims){var next=dim+1;for(i=0,ii=array.length;i<ii;i++)array[i]=_squeeze(array[i],dims,next)}else for(;Array.isArray(array);)array=array[0];return array}function unsqueeze(array,dims,outer,size){var s=size||arraySize(array);if(outer)for(var i=0;i<outer;i++)array=[array],s.unshift(1);for(array=_unsqueeze(array,dims,0);s.length<dims;)s.push(1);return array}function _unsqueeze(array,dims,dim){var i,ii;if(Array.isArray(array)){var next=dim+1;for(i=0,ii=array.length;i<ii;i++)array[i]=_unsqueeze(array[i],dims,next)}else for(var d=dim;d<dims;d++)array=[array];return array}function flatten(array){if(!Array.isArray(array))return array;var flat=[];return array.forEach((function callback(value){Array.isArray(value)?value.forEach(callback):flat.push(value)})),flat}function map(array,callback){return Array.prototype.map.call(array,callback)}function forEach(array,callback){Array.prototype.forEach.call(array,callback)}function filter(array,callback){if(1!==arraySize(array).length)throw new Error("Only one dimensional matrices supported");return Array.prototype.filter.call(array,callback)}function filterRegExp(array,regexp){if(1!==arraySize(array).length)throw new Error("Only one dimensional matrices supported");return Array.prototype.filter.call(array,(function(entry){return regexp.test(entry)}))}function join(array,separator){return Array.prototype.join.call(array,separator)}function identify(a){if(!Array.isArray(a))throw new TypeError("Array input expected");if(0===a.length)return a;var b=[],count=0;b[0]={value:a[0],identifier:0};for(var i=1;i<a.length;i++)a[i]===a[i-1]?count++:count=0,b.push({value:a[i],identifier:count});return b}function generalize(a){if(!Array.isArray(a))throw new TypeError("Array input expected");if(0===a.length)return a;for(var b=[],i=0;i<a.length;i++)b.push(a[i].value);return b}function getArrayDataType(array,typeOf){for(var type,length=0,i=0;i<array.length;i++){var item=array[i],isArray=Array.isArray(item);if(0===i&&isArray&&(length=item.length),isArray&&item.length!==length)return;var itemType=isArray?getArrayDataType(item,typeOf):typeOf(item);if(void 0===type)type=itemType;else if(type!==itemType)return"mixed"}return type}function contains$1(array,item){return-1!==array.indexOf(item)}function factory(name,dependencies,create,meta){function assertAndCreate(scope){var deps=pickShallow(scope,dependencies.map(stripOptionalNotation));return assertDependencies(name,dependencies,scope),create(deps)}return assertAndCreate.isFactory=!0,assertAndCreate.fn=name,assertAndCreate.dependencies=dependencies.slice().sort(),meta&&(assertAndCreate.meta=meta),assertAndCreate}function isFactory(obj){return"function"==typeof obj&&"string"==typeof obj.fn&&Array.isArray(obj.dependencies)}function assertDependencies(name,dependencies,scope){var allDefined;if(!dependencies.filter((function(dependency){return!isOptionalDependency(dependency)})).every((function(dependency){return void 0!==scope[dependency]}))){var missingDependencies=dependencies.filter((function(dependency){return void 0===scope[dependency]}));throw new Error('Cannot create function "'.concat(name,'", ')+"some dependencies are missing: ".concat(missingDependencies.map((function(d){return'"'.concat(d,'"')})).join(", "),"."))}}function isOptionalDependency(dependency){return dependency&&"?"===dependency[0]}function stripOptionalNotation(dependency){return dependency&&"?"===dependency[0]?dependency.slice(1):dependency}function throwNoBignumber(x){throw new Error("Cannot convert value ".concat(x," into a BigNumber: no class 'BigNumber' provided"))}function throwNoComplex(x){throw new Error("Cannot convert value ".concat(x," into a Complex number: no class 'Complex' provided"))}function throwNoMatrix(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}function throwNoFraction(x){throw new Error("Cannot convert value ".concat(x," into a Fraction, no class 'Fraction' provided."))}function _typeof$3(obj){return(_typeof$3="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function containsCollections(array){for(var i=0;i<array.length;i++)if(isCollection(array[i]))return!0;return!1}function deepForEach(array,callback){isMatrix(array)&&(array=array.valueOf());for(var i=0,ii=array.length;i<ii;i++){var value=array[i];Array.isArray(value)?deepForEach(value,callback):callback(value)}}function deepMap(array,callback,skipZeros){return array&&"function"==typeof array.map?array.map((function(x){return deepMap(x,callback)})):callback(array)}function reduce(mat,dim,callback){var size=Array.isArray(mat)?arraySize(mat):mat.size();if(dim<0||dim>=size.length)throw new IndexError(dim,size.length);return isMatrix(mat)?mat.create(_reduce(mat.valueOf(),dim,callback)):_reduce(mat,dim,callback)}function _reduce(mat,dim,callback){var i,ret,val,tran;if(dim<=0){if(Array.isArray(mat[0])){for(tran=_switch(mat),ret=[],i=0;i<tran.length;i++)ret[i]=_reduce(tran[i],dim-1,callback);return ret}for(val=mat[0],i=1;i<mat.length;i++)val=callback(val,mat[i]);return val}for(ret=[],i=0;i<mat.length;i++)ret[i]=_reduce(mat[i],dim-1,callback);return ret}function _switch(mat){var I=mat.length,J=mat[0].length,i,j,ret=[];for(j=0;j<J;j++){var tmp=[];for(i=0;i<I;i++)tmp.push(mat[i][j]);ret.push(tmp)}return ret}function scatter(a,j,w,x,u,mark,cindex,f,inverse,update,value){var avalues=a._values,aindex=a._index,aptr=a._ptr,k,k0,k1,i;if(x)for(k0=aptr[j],k1=aptr[j+1],k=k0;k<k1;k++)w[i=aindex[k]]!==mark?(w[i]=mark,cindex.push(i),update?(x[i]=inverse?f(avalues[k],value):f(value,avalues[k]),u[i]=mark):x[i]=avalues[k]):(x[i]=inverse?f(avalues[k],x[i]):f(x[i],avalues[k]),u[i]=mark);else for(k0=aptr[j],k1=aptr[j+1],k=k0;k<k1;k++)w[i=aindex[k]]!==mark?(w[i]=mark,cindex.push(i)):u[i]=mark}function absNumber(a){return Math.abs(a)}function addNumber(a,b){return a+b}function multiplyNumber(a,b){return a*b}function unaryMinusNumber(x){return-x}function unaryPlusNumber(x){return x}function cbrtNumber(x){return cbrt(x)}function ceilNumber(x){return Math.ceil(x)}function cubeNumber(x){return x*x*x}function expNumber(x){return Math.exp(x)}function expm1Number(x){return expm1(x)}function gcdNumber(a,b){if(!isInteger(a)||!isInteger(b))throw new Error("Parameters in function gcd must be integer numbers");for(var r;0!==b;)r=a%b,a=b,b=r;return a<0?-a:a}function lcmNumber(a,b){if(!isInteger(a)||!isInteger(b))throw new Error("Parameters in function lcm must be integer numbers");if(0===a||0===b)return 0;for(var t,prod=a*b;0!==b;)b=a%(t=b),a=t;return Math.abs(prod/a)}function logNumber(x){return Math.log(x)}function log10Number(x){return log10(x)}function log2Number(x){return log2(x)}function modNumber(x,y){if(y>0)return x-y*Math.floor(x/y);if(0===y)return x;throw new Error("Cannot calculate mod for a negative divisor")}function nthRootNumber(a,root){var inv=root<0;if(inv&&(root=-root),0===root)throw new Error("Root must be non-zero");if(a<0&&Math.abs(root)%2!=1)throw new Error("Root must be odd when a is negative.");if(0===a)return inv?1/0:0;if(!isFinite(a))return inv?0:a;var x=Math.pow(Math.abs(a),1/root);return x=a<0?-x:x,inv?1/x:x}function signNumber(x){return sign(x)}function squareNumber(x){return x*x}function xgcdNumber(a,b){var t,q,r,x=0,lastx=1,y=1,lasty=0,res;if(!isInteger(a)||!isInteger(b))throw new Error("Parameters in function xgcd must be integer numbers");for(;b;)r=a-(q=Math.floor(a/b))*b,t=x,x=lastx-q*x,lastx=t,t=y,y=lasty-q*y,lasty=t,a=b,b=r;return res=a<0?[-a,-lastx,-lasty]:[a,a?lastx:0,lasty]}function powNumber(x,y){return x*x<1&&y===1/0||x*x>1&&y===-1/0?0:Math.pow(x,y)}function roundNumber(value){var decimals=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return parseFloat(toFixed(value,decimals))}function bitAndNumber(x,y){if(!isInteger(x)||!isInteger(y))throw new Error("Integers expected in function bitAnd");return x&y}function bitNotNumber(x){if(!isInteger(x))throw new Error("Integer expected in function bitNot");return~x}function bitOrNumber(x,y){if(!isInteger(x)||!isInteger(y))throw new Error("Integers expected in function bitOr");return x|y}function bitXorNumber(x,y){if(!isInteger(x)||!isInteger(y))throw new Error("Integers expected in function bitXor");return x^y}function leftShiftNumber(x,y){if(!isInteger(x)||!isInteger(y))throw new Error("Integers expected in function leftShift");return x<<y}function rightArithShiftNumber(x,y){if(!isInteger(x)||!isInteger(y))throw new Error("Integers expected in function rightArithShift");return x>>y}function rightLogShiftNumber(x,y){if(!isInteger(x)||!isInteger(y))throw new Error("Integers expected in function rightLogShift");return x>>>y}function product(i,n){if(n<i)return 1;if(n===i)return n;var half=n+i>>1;return product(i,half)*product(half+1,n)}function combinationsNumber(n,k){if(!isInteger(n)||n<0)throw new TypeError("Positive integer value expected in function combinations");if(!isInteger(k)||k<0)throw new TypeError("Positive integer value expected in function combinations");if(k>n)throw new TypeError("k must be less than or equal to n");var nMinusk=n-k,prodrange;return k<nMinusk?(prodrange=product(nMinusk+1,n))/product(1,k):(prodrange=product(k+1,n))/product(1,nMinusk)}function notNumber(x){return!x}function orNumber(x,y){return!(!x&&!y)}function xorNumber(x,y){return!!x!=!!y}function andNumber(x,y){return!(!x||!y)}function gammaNumber(n){var x;if(isInteger(n))return n<=0?isFinite(n)?1/0:NaN:n>171?1/0:product(1,n-1);if(n<.5)return Math.PI/(Math.sin(Math.PI*n)*gammaNumber(1-n));if(n>=171.35)return 1/0;if(n>85){var twoN=n*n,threeN=twoN*n,fourN=threeN*n,fiveN=fourN*n;return Math.sqrt(2*Math.PI/n)*Math.pow(n/Math.E,n)*(1+1/(12*n)+1/(288*twoN)-139/(51840*threeN)-571/(2488320*fourN)+163879/(209018880*fiveN)+5246819/(75246796800*fiveN*n))}--n,x=gammaP[0];for(var i=1;i<gammaP.length;++i)x+=gammaP[i]/(n+i);var t=n+gammaG+.5;return Math.sqrt(2*Math.PI)*Math.pow(t,n+.5)*Math.exp(-t)*x}function acoshNumber(x){return acosh(x)}function acotNumber(x){return Math.atan(1/x)}function acothNumber(x){return isFinite(x)?(Math.log((x+1)/x)+Math.log(x/(x-1)))/2:0}function acscNumber(x){return Math.asin(1/x)}function acschNumber(x){var xInv=1/x;return Math.log(xInv+Math.sqrt(xInv*xInv+1))}function asecNumber(x){return Math.acos(1/x)}function asechNumber(x){var xInv=1/x,ret=Math.sqrt(xInv*xInv-1);return Math.log(ret+xInv)}function asinhNumber(x){return asinh(x)}function atanhNumber(x){return atanh(x)}function cotNumber(x){return 1/Math.tan(x)}function cothNumber(x){var e=Math.exp(2*x);return(e+1)/(e-1)}function cscNumber(x){return 1/Math.sin(x)}function cschNumber(x){return 0===x?Number.POSITIVE_INFINITY:Math.abs(2/(Math.exp(x)-Math.exp(-x)))*sign(x)}function secNumber(x){return 1/Math.cos(x)}function sechNumber(x){return 2/(Math.exp(x)+Math.exp(-x))}function sinhNumber(x){return sinh(x)}function isNegativeNumber(x){return x<0}function isPositiveNumber(x){return x>0}function isZeroNumber(x){return 0===x}function isNaNNumber(x){return Number.isNaN(x)}function nearlyEqual$1(x,y,epsilon){if(null==epsilon)return x.eq(y);if(x.eq(y))return!0;if(x.isNaN()||y.isNaN())return!1;if(x.isFinite()&&y.isFinite()){var diff=x.minus(y).abs();if(diff.isZero())return!0;var max=x.constructor.max(x.abs(),y.abs());return diff.lte(max.times(epsilon))}return!1}function complexEquals(x,y,epsilon){return nearlyEqual(x.re,y.re,epsilon)&&nearlyEqual(x.im,y.im,epsilon)}function _apply(mat,dim,callback){var i,ret,tran;if(dim<=0){if(Array.isArray(mat[0])){for(tran=_switch$1(mat),ret=[],i=0;i<tran.length;i++)ret[i]=_apply(tran[i],dim-1,callback);return ret}return callback(mat)}for(ret=[],i=0;i<mat.length;i++)ret[i]=_apply(mat[i],dim-1,callback);return ret}function _switch$1(mat){var I=mat.length,J=mat[0].length,i,j,ret=[];for(j=0;j<J;j++){var tmp=[];for(i=0;i<I;i++)tmp.push(mat[i][j]);ret.push(tmp)}return ret}function checkEqualDimensions(x,y){var xsize=x.size(),ysize=y.size();if(xsize.length!==ysize.length)throw new DimensionError(xsize.length,ysize.length)}function bitAndBigNumber(x,y){if(x.isFinite()&&!x.isInteger()||y.isFinite()&&!y.isInteger())throw new Error("Integers expected in function bitAnd");var BigNumber=x.constructor;if(x.isNaN()||y.isNaN())return new BigNumber(NaN);if(x.isZero()||y.eq(-1)||x.eq(y))return x;if(y.isZero()||x.eq(-1))return y;if(!x.isFinite()||!y.isFinite()){if(!x.isFinite()&&!y.isFinite())return x.isNegative()===y.isNegative()?x:new BigNumber(0);if(!x.isFinite())return y.isNegative()?x:x.isNegative()?new BigNumber(0):y;if(!y.isFinite())return x.isNegative()?y:y.isNegative()?new BigNumber(0):x}return bitwise(x,y,(function(a,b){return a&b}))}function bitNotBigNumber(x){if(x.isFinite()&&!x.isInteger())throw new Error("Integer expected in function bitNot");var BigNumber=x.constructor,prevPrec=BigNumber.precision;BigNumber.config({precision:1e9});var result=x.plus(new BigNumber(1));return result.s=-result.s||null,BigNumber.config({precision:prevPrec}),result}function bitOrBigNumber(x,y){if(x.isFinite()&&!x.isInteger()||y.isFinite()&&!y.isInteger())throw new Error("Integers expected in function bitOr");var BigNumber=x.constructor;if(x.isNaN()||y.isNaN())return new BigNumber(NaN);var negOne=new BigNumber(-1);return x.isZero()||y.eq(negOne)||x.eq(y)?y:y.isZero()||x.eq(negOne)?x:x.isFinite()&&y.isFinite()?bitwise(x,y,(function(a,b){return a|b})):!x.isFinite()&&!x.isNegative()&&y.isNegative()||x.isNegative()&&!y.isNegative()&&!y.isFinite()?negOne:x.isNegative()&&y.isNegative()?x.isFinite()?x:y:x.isFinite()?y:x}function bitwise(x,y,func){var BigNumber=x.constructor,xBits,yBits,xSign=+(x.s<0),ySign=+(y.s<0),minBits,maxBits,minSign;if(xSign){xBits=decCoefficientToBinaryString(bitNotBigNumber(x));for(var i=0;i<xBits.length;++i)xBits[i]^=1}else xBits=decCoefficientToBinaryString(x);if(ySign){yBits=decCoefficientToBinaryString(bitNotBigNumber(y));for(var _i=0;_i<yBits.length;++_i)yBits[_i]^=1}else yBits=decCoefficientToBinaryString(y);xBits.length<=yBits.length?(minBits=xBits,maxBits=yBits,minSign=xSign):(minBits=yBits,maxBits=xBits,minSign=ySign);var shortLen=minBits.length,longLen=maxBits.length,expFuncVal=1^func(xSign,ySign),outVal=new BigNumber(1^expFuncVal),twoPower=new BigNumber(1),two=new BigNumber(2),prevPrec=BigNumber.precision;for(BigNumber.config({precision:1e9});shortLen>0;)func(minBits[--shortLen],maxBits[--longLen])===expFuncVal&&(outVal=outVal.plus(twoPower)),twoPower=twoPower.times(two);for(;longLen>0;)func(minSign,maxBits[--longLen])===expFuncVal&&(outVal=outVal.plus(twoPower)),twoPower=twoPower.times(two);return BigNumber.config({precision:prevPrec}),0===expFuncVal&&(outVal.s=-outVal.s),outVal}function decCoefficientToBinaryString(x){for(var a=x.d,r=a[0]+"",i=1;i<a.length;++i){for(var s=a[i]+"",z=7-s.length;z--;)s="0"+s;r+=s}for(var j=r.length;"0"===r.charAt(j);)j--;var xe=x.e,str=r.slice(0,j+1||1),strL=str.length;if(xe>0)if(++xe>strL)for(xe-=strL;xe--;)str+="0";else xe<strL&&(str=str.slice(0,xe)+"."+str.slice(xe));for(var arr=[0],_i2=0;_i2<str.length;){for(var arrL=arr.length;arrL--;)arr[arrL]*=10;arr[0]+=parseInt(str.charAt(_i2++));for(var _j=0;_j<arr.length;++_j)arr[_j]>1&&(null!==arr[_j+1]&&void 0!==arr[_j+1]||(arr[_j+1]=0),arr[_j+1]+=arr[_j]>>1,arr[_j]&=1)}return arr.reverse()}function bitXor(x,y){if(x.isFinite()&&!x.isInteger()||y.isFinite()&&!y.isInteger())throw new Error("Integers expected in function bitXor");var BigNumber=x.constructor;if(x.isNaN()||y.isNaN())return new BigNumber(NaN);if(x.isZero())return y;if(y.isZero())return x;if(x.eq(y))return new BigNumber(0);var negOne=new BigNumber(-1);return x.eq(negOne)?bitNotBigNumber(y):y.eq(negOne)?bitNotBigNumber(x):x.isFinite()&&y.isFinite()?bitwise(x,y,(function(a,b){return a^b})):x.isFinite()||y.isFinite()?new BigNumber(x.isNegative()===y.isNegative()?1/0:-1/0):negOne}function leftShiftBigNumber(x,y){if(x.isFinite()&&!x.isInteger()||y.isFinite()&&!y.isInteger())throw new Error("Integers expected in function leftShift");var BigNumber=x.constructor;return x.isNaN()||y.isNaN()||y.isNegative()&&!y.isZero()?new BigNumber(NaN):x.isZero()||y.isZero()?x:x.isFinite()||y.isFinite()?y.lt(55)?x.times(Math.pow(2,y.toNumber())+""):x.times(new BigNumber(2).pow(y)):new BigNumber(NaN)}function rightArithShiftBigNumber(x,y){if(x.isFinite()&&!x.isInteger()||y.isFinite()&&!y.isInteger())throw new Error("Integers expected in function rightArithShift");var BigNumber=x.constructor;return x.isNaN()||y.isNaN()||y.isNegative()&&!y.isZero()?new BigNumber(NaN):x.isZero()||y.isZero()?x:y.isFinite()?y.lt(55)?x.div(Math.pow(2,y.toNumber())+"").floor():x.div(new BigNumber(2).pow(y)).floor():x.isNegative()?new BigNumber(-1):x.isFinite()?new BigNumber(0):new BigNumber(NaN)}function _concat(a,b,concatDim,dim){if(dim<concatDim){if(a.length!==b.length)throw new DimensionError(a.length,b.length);for(var c=[],i=0;i<a.length;i++)c[i]=_concat(a[i],b[i],concatDim,dim+1);return c}return a.concat(b)}function _typeof$4(obj){return(_typeof$4="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function memoize(fn,hasher){return function memoize(){"object"!==_typeof$4(memoize.cache)&&(memoize.cache={});for(var args=[],i=0;i<arguments.length;i++)args[i]=arguments[i];var hash=hasher?hasher(args):JSON.stringify(args);return hash in memoize.cache||(memoize.cache[hash]=fn.apply(fn,args)),memoize.cache[hash]}}function maxArgumentCount(fn){return Object.keys(fn.signatures||{}).reduce((function(args,signature){var count=(signature.match(/,/g)||[]).length+1;return Math.max(args,count)}),-1)}function _filterCallback(x,callback){var args=maxArgumentCount(callback);return filter(x,(function(value,index,array){return 1===args?callback(value):2===args?callback(value,[index]):callback(value,[index],array)}))}function _forEach(array,callback){var args=maxArgumentCount(callback),recurse;(function recurse(value,index){Array.isArray(value)?forEach(value,(function(child,i){recurse(child,index.concat(i))})):1===args?callback(value):2===args?callback(value,index):callback(value,index,array)})(array,[])}function _map(array,callback){var args=maxArgumentCount(callback),recurse;return function recurse(value,index){return Array.isArray(value)?value.map((function(child,i){return recurse(child,index.concat(i))})):1===args?callback(value):2===args?callback(value,index):callback(value,index,array)}(array,[])}function noBignumber(){throw new Error('No "bignumber" implementation available')}function noFraction(){throw new Error('No "fraction" implementation available')}function noMatrix(){throw new Error('No "matrix" implementation available')}function ArgumentsError(fn,count,min,max){if(!(this instanceof ArgumentsError))throw new SyntaxError("Constructor must be called with the new operator");this.fn=fn,this.count=count,this.min=min,this.max=max,this.message="Wrong number of arguments in function "+fn+" ("+count+" provided, "+min+(null!=max?"-"+max:"")+" expected)",this.stack=(new Error).stack}function _typeof$5(obj){return(_typeof$5="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function getSafeProperty(object,prop){if(isPlainObject(object)&&isSafeProperty(object,prop))return object[prop];if("function"==typeof object[prop]&&isSafeMethod(object,prop))throw new Error('Cannot access method "'+prop+'" as a property');throw new Error('No access to property "'+prop+'"')}function setSafeProperty(object,prop,value){if(isPlainObject(object)&&isSafeProperty(object,prop))return object[prop]=value,value;throw new Error('No access to property "'+prop+'"')}function isSafeProperty(object,prop){return!(!object||"object"!==_typeof$5(object))&&(!!hasOwnProperty(safeNativeProperties,prop)||!(prop in Object.prototype)&&!(prop in Function.prototype))}function validateSafeMethod(object,method){if(!isSafeMethod(object,method))throw new Error('No access to method "'+method+'"')}function isSafeMethod(object,method){return null!=object&&"function"==typeof object[method]&&(!(hasOwnProperty(object,method)&&Object.getPrototypeOf&&method in Object.getPrototypeOf(object))&&(!!hasOwnProperty(safeNativeMethods,method)||!(method in Object.prototype)&&!(method in Function.prototype)))}function isPlainObject(object){return"object"===_typeof$5(object)&&object&&object.constructor===Object}function _getSubstring(str,index){if(!isIndex(index))throw new TypeError("Index expected");if(1!==index.size().length)throw new DimensionError(index.size().length,1);var strLen=str.length;validateIndex(index.min()[0],strLen),validateIndex(index.max()[0],strLen);var range=index.dimension(0),substr="";return range.forEach((function(v){substr+=str.charAt(v)})),substr}function _setSubstring(str,index,replacement,defaultValue){if(!index||!0!==index.isIndex)throw new TypeError("Index expected");if(1!==index.size().length)throw new DimensionError(index.size().length,1);if(void 0!==defaultValue){if("string"!=typeof defaultValue||1!==defaultValue.length)throw new TypeError("Single character expected as defaultValue")}else defaultValue=" ";var range=index.dimension(0),len;if(range.size()[0]!==replacement.length)throw new DimensionError(range.size()[0],replacement.length);var strLen=str.length;validateIndex(index.min()[0]),validateIndex(index.max()[0]);for(var chars=[],i=0;i<strLen;i++)chars[i]=str.charAt(i);if(range.forEach((function(v,i){chars[v]=replacement.charAt(i[0])})),chars.length>strLen)for(var _i=strLen-1,_len=chars.length;_i<_len;_i++)chars[_i]||(chars[_i]=defaultValue);return chars.join("")}function _getObjectProperty(object,index){if(1!==index.size().length)throw new DimensionError(index.size(),1);var key=index.dimension(0);if("string"!=typeof key)throw new TypeError("String expected as index to retrieve an object property");return getSafeProperty(object,key)}function _setObjectProperty(object,index,replacement){if(1!==index.size().length)throw new DimensionError(index.size(),1);var key=index.dimension(0);if("string"!=typeof key)throw new TypeError("String expected as index to retrieve an object property");var updated=clone(object);return setSafeProperty(updated,key,replacement),updated}function improveErrorMessage(err,fnName,value){var details;return-1!==String(err).indexOf("Unexpected type")?(details=arguments.length>2?" (type: "+typeOf(value)+", value: "+JSON.stringify(value)+")":" (type: "+err.data.actual+")",new TypeError("Cannot calculate "+fnName+", unexpected type of argument"+details)):-1!==String(err).indexOf("complex numbers")?(details=arguments.length>2?" (type: "+typeOf(value)+", value: "+JSON.stringify(value)+")":"",new TypeError("Cannot calculate "+fnName+", no ordering relation is defined for complex numbers"+details)):err}function _print(template,values,options){return template.replace(/\$([\w.]+)/g,(function(original,key){for(var keys=key.split("."),value=values[keys.shift()];keys.length&&void 0!==value;){var k=keys.shift();value=k?value[k]:value+"."}return void 0!==value?isString(value)?value:format$2(value,options):original}))}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function createSolveValidation(_ref){var DenseMatrix=_ref.DenseMatrix;return function solveValidation(m,b,copy){var size=m.size();if(2!==size.length)throw new RangeError("Matrix must be two dimensional (size: "+format$2(size)+")");var rows=size[0],columns,data,i,bdata;if(rows!==size[1])throw new RangeError("Matrix must be square (size: "+format$2(size)+")");if(isMatrix(b)){var msize=b.size();if(1===msize.length){if(msize[0]!==rows)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(data=[],bdata=b._data,i=0;i<rows;i++)data[i]=[bdata[i]];return new DenseMatrix({data:data,size:[rows,1],datatype:b._datatype})}if(2===msize.length){if(msize[0]!==rows||1!==msize[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if(isDenseMatrix(b)){if(copy){for(data=[],bdata=b._data,i=0;i<rows;i++)data[i]=[bdata[i][0]];return new DenseMatrix({data:data,size:[rows,1],datatype:b._datatype})}return b}for(data=[],i=0;i<rows;i++)data[i]=[0];for(var values=b._values,index=b._index,ptr=b._ptr,k1=ptr[1],k=ptr[0];k<k1;k++)data[i=index[k]][0]=values[k];return new DenseMatrix({data:data,size:[rows,1],datatype:b._datatype})}throw new RangeError("Dimension mismatch. Matrix columns must match vector length.")}if(isArray(b)){var asize=arraySize(b);if(1===asize.length){if(asize[0]!==rows)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(data=[],i=0;i<rows;i++)data[i]=[b[i]];return new DenseMatrix({data:data,size:[rows,1]})}if(2===asize.length){if(asize[0]!==rows||1!==asize[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(data=[],i=0;i<rows;i++)data[i]=[b[i][0]];return new DenseMatrix({data:data,size:[rows,1]})}throw new RangeError("Dimension mismatch. Matrix columns must match vector length.")}}}function compareComplexNumbers(x,y){return x.re>y.re?1:x.re<y.re?-1:x.im>y.im?1:x.im<y.im?-1:0}function hasher(args){return args[0].precision}function _typeof$6(obj){return(_typeof$6="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _extends$1(){return(_extends$1=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function ownKeys$1(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread$1(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys$1(Object(source),!0).forEach((function(key){_defineProperty$1(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys$1(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty$1(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _typeof$7(obj){return(_typeof$7="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function errorTransform(err){return err&&err.isIndexError?new IndexError(err.index+1,err.min+1,void 0!==err.max?err.max+1:void 0):err}function _typeof$8(obj){return(_typeof$8="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function accessFactory(_ref){var subset=_ref.subset;return function access(object,index){try{if(Array.isArray(object))return subset(object,index);if(object&&"function"==typeof object.subset)return object.subset(index);if("string"==typeof object)return subset(object,index);if("object"===_typeof$8(object)){if(!index.isObjectProperty())throw new TypeError("Cannot apply a numeric index as object property");return getSafeProperty(object,index.getObjectProperty())}throw new TypeError("Cannot apply index: unsupported type of object")}catch(err){throw errorTransform(err)}}}function _typeof$9(obj){return(_typeof$9="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function assignFactory(_ref){var subset=_ref.subset,matrix=_ref.matrix;return function assign(object,index,value){try{if(Array.isArray(object))return matrix(object).subset(index,value).valueOf();if(object&&"function"==typeof object.subset)return object.subset(index,value);if("string"==typeof object)return subset(object,index,value);if("object"===_typeof$9(object)){if(!index.isObjectProperty())throw TypeError("Cannot apply a numeric index as object property");return setSafeProperty(object,index.getObjectProperty(),value),object}throw new TypeError("Cannot apply index: unsupported type of object")}catch(err){throw errorTransform(err)}}}function getPrecedence(_node,parenthesis){var node=_node;"keep"!==parenthesis&&(node=_node.getContent());for(var identifier=node.getIdentifier(),i=0;i<properties.length;i++)if(identifier in properties[i])return i;return null}function getAssociativity(_node,parenthesis){var node=_node;"keep"!==parenthesis&&(node=_node.getContent());var identifier=node.getIdentifier(),index=getPrecedence(node,parenthesis);if(null===index)return null;var property=properties[index][identifier];if(hasOwnProperty(property,"associativity")){if("left"===property.associativity)return"left";if("right"===property.associativity)return"right";throw Error("'"+identifier+"' has the invalid associativity '"+property.associativity+"'.")}return null}function isAssociativeWith(nodeA,nodeB,parenthesis){var a="keep"!==parenthesis?nodeA.getContent():nodeA,b="keep"!==parenthesis?nodeA.getContent():nodeB,identifierA=a.getIdentifier(),identifierB=b.getIdentifier(),index=getPrecedence(a,parenthesis);if(null===index)return null;var property=properties[index][identifierA];if(hasOwnProperty(property,"associativeWith")&&property.associativeWith instanceof Array){for(var i=0;i<property.associativeWith.length;i++)if(property.associativeWith[i]===identifierB)return!0;return!1}return null}function escapeLatex(string){return escape_latex_js_1.default(string,{preserveFormatting:!0})}function toSymbol(name,isUnit){return(isUnit=void 0!==isUnit&&isUnit)?hasOwnProperty(latexUnits,name)?latexUnits[name]:"\\mathrm{"+escapeLatex(name)+"}":hasOwnProperty(latexSymbols,name)?latexSymbols[name]:escapeLatex(name)}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _typeof$a(obj){return(_typeof$a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _typeof$b(obj){return(_typeof$b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _extends$2(){return(_extends$2=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _extends$3(){return(_extends$3=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _extends$4(){return(_extends$4=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function csPermute(a,pinv,q,values){for(var avalues=a._values,aindex=a._index,aptr=a._ptr,asize=a._size,adt=a._datatype,m=asize[0],n=asize[1],cvalues=values&&a._values?[]:null,cindex=[],cptr=[],nz=0,k=0;k<n;k++){cptr[k]=nz;for(var j=q?q[k]:k,t0=aptr[j],t1=aptr[j+1],t=t0;t<t1;t++){var r=pinv?pinv[aindex[t]]:aindex[t];cindex[nz]=r,cvalues&&(cvalues[nz]=avalues[t]),nz++}}return cptr[n]=nz,a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[m,n],datatype:adt})}function csTdfs(j,k,w,head,next,post,stack){var top=0;for(w[stack]=j;top>=0;){var p=w[stack+top],i=w[head+p];-1===i?(top--,post[k++]=p):(w[head+p]=w[next+i],w[stack+ ++top]=i)}return k}function csPost(parent,n){if(!parent)return null;var k=0,j,post=[],w=[],head=0,next=n,stack=2*n;for(j=0;j<n;j++)w[0+j]=-1;for(j=n-1;j>=0;j--)-1!==parent[j]&&(w[next+j]=w[0+parent[j]],w[0+parent[j]]=j);for(j=0;j<n;j++)-1===parent[j]&&(k=csTdfs(j,k,w,0,next,post,stack));return post}function csEtree(a,ata){if(!a)return null;var aindex=a._index,aptr=a._ptr,asize=a._size,m=asize[0],n=asize[1],parent=[],w=[],ancestor=0,prev=n,i,inext;if(ata)for(i=0;i<m;i++)w[prev+i]=-1;for(var k=0;k<n;k++){parent[k]=-1,w[0+k]=-1;for(var p0=aptr[k],p1=aptr[k+1],p=p0;p<p1;p++){var r=aindex[p];for(i=ata?w[prev+r]:r;-1!==i&&i<k;i=inext)inext=w[0+i],w[0+i]=k,-1===inext&&(parent[i]=k);ata&&(w[prev+r]=k)}}return parent}function csFkeep(a,callback,other){for(var avalues=a._values,aindex=a._index,aptr=a._ptr,asize,n=a._size[1],nz=0,j=0;j<n;j++){var p=aptr[j];for(aptr[j]=nz;p<aptr[j+1];p++)callback(aindex[p],j,avalues?avalues[p]:1,other)&&(aindex[nz]=aindex[p],avalues&&(avalues[nz]=avalues[p]),nz++)}return aptr[n]=nz,aindex.splice(nz,aindex.length-nz),avalues&&avalues.splice(nz,avalues.length-nz),nz}function csFlip(i){return-i-2}function csLeaf(i,j,w,first,maxfirst,prevleaf,ancestor){var s,sparent,jleaf=0,q;if(i<=j||w[first+j]<=w[maxfirst+i])return-1;w[maxfirst+i]=w[first+j];var jprev=w[prevleaf+i];if(w[prevleaf+i]=j,-1===jprev)jleaf=1,q=i;else{for(jleaf=2,q=jprev;q!==w[ancestor+q];q=w[ancestor+q]);for(s=jprev;s!==q;s=sparent)sparent=w[ancestor+s],w[ancestor+s]=q}return{jleaf:jleaf,q:q}}function csMarked(w,j){return w[j]<0}function csMark(w,j){w[j]=csFlip(w[j])}function csUnflip(i){return i<0?csFlip(i):i}function csDfs(j,g,top,xi,pinv){var index=g._index,ptr=g._ptr,size,n=g._size[1],i,p,p2,head=0;for(xi[0]=j;head>=0;){j=xi[head];var jnew=pinv?pinv[j]:j;csMarked(ptr,j)||(csMark(ptr,j),xi[n+head]=jnew<0?0:csUnflip(ptr[jnew]));var done=1;for(p=xi[n+head],p2=jnew<0?0:csUnflip(ptr[jnew+1]);p<p2;p++)if(!csMarked(ptr,i=index[p])){xi[n+head]=p,xi[++head]=i,done=0;break}done&&(head--,xi[--top]=j)}return top}function csReach(g,b,k,xi,pinv){var gptr=g._ptr,gsize=g._size,bindex=b._index,bptr=b._ptr,n=gsize[1],p,p0,p1,top=n;for(p0=bptr[k],p1=bptr[k+1],p=p0;p<p1;p++){var i=bindex[p];csMarked(gptr,i)||(top=csDfs(i,g,top,xi,pinv))}for(p=top;p<n;p++)csMark(gptr,xi[p]);return top}function csIpvec(p,b){var k,n=b.length,x=[];if(p)for(k=0;k<n;k++)x[p[k]]=b[k];else for(k=0;k<n;k++)x[k]=b[k];return x}function isPositiveInteger(n){return n.isInteger()&&n.gte(0)}function isPositiveInteger$1(n){return n.isInteger()&&n.gte(0)}function isPositiveInteger$2(n){return n.isInteger()&&n.gte(0)}function createRng(randomSeed){var random;function setSeed(seed){random=null===seed?singletonRandom:seed_random_js_1.default(String(seed))}function rng(){return random()}return setSeed(randomSeed),rng}function randomMatrix(size,random){var data=[];if((size=size.slice(0)).length>1)for(var i=0,length=size.shift();i<length;i++)data.push(randomMatrix(size,random));else for(var _i=0,_length=size.shift();_i<_length;_i++)data.push(random());return data}function _typeof$c(obj){return(_typeof$c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function recreateFactory(name,dependencies,create){return factory(name,dependencies,create,{recreateOnConfigChange:!0})}function unitFactory(name,valueStr,unitStr){var dependencies;return factory(name,["config","Unit","BigNumber"],(function(_ref){var config=_ref.config,Unit=_ref.Unit,BigNumber=_ref.BigNumber,value,unit=new Unit("BigNumber"===config.number?new BigNumber(valueStr):parseFloat(valueStr),unitStr);return unit.fixPrefix=!0,unit}))}function numberFactory(name,value){var dependencies;return factory(name,["config","BigNumber"],(function(_ref2){var config=_ref2.config,BigNumber=_ref2.BigNumber;return"BigNumber"===config.number?new BigNumber(value):value}))}function compileInlineExpression(expression,math,scope){var symbol=expression.filter((function(node){return isSymbolNode(node)&&!(node.name in math)&&!(node.name in scope)}))[0];if(!symbol)throw new Error('No undefined variable found in inline expression "'+expression+'"');var name=symbol.name,subScope=Object.create(scope),eq=expression.compile();return function inlineExpression(x){return subScope[name]=x,eq.evaluate(subScope)}}function _filter(x,callback){var args=maxArgumentCount(callback);return filter(x,(function(value,index,array){return 1===args?callback(value):2===args?callback(value,[index+1]):callback(value,[index+1],array)}))}function _map$1(array,callback,orig){var argsCount=maxArgumentCount(callback);function recurse(value,index){return Array.isArray(value)?map(value,(function(child,i){return recurse(child,index.concat(i+1))})):1===argsCount?callback(value):2===argsCount?callback(value,index):callback(value,index,orig)}return recurse(array,[])}function _extends$5(){return(_extends$5=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function mixin(obj){var emitter=new tiny_emitter_js_1.default;return obj.on=emitter.on.bind(emitter),obj.off=emitter.off.bind(emitter),obj.once=emitter.once.bind(emitter),obj.emit=emitter.emit.bind(emitter),obj}function _defineProperty$2(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _typeof$d(obj){return(_typeof$d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function importFactory(typed,load,math,importedFactories){function mathImport(functions,options){var num=arguments.length;if(1!==num&&2!==num)throw new ArgumentsError("import",num,1,2);function flattenImports(flatValues,value,name){if(Array.isArray(value))value.forEach((function(item){return flattenImports(flatValues,item)}));else if("object"===_typeof$d(value))for(var _name in value)hasOwnProperty(value,_name)&&flattenImports(flatValues,value[_name],_name);else if(isFactory(value)||void 0!==name){var flatName=isFactory(value)?isTransformFunctionFactory(value)?value.fn+".transform":value.fn:name;if(hasOwnProperty(flatValues,flatName)&&flatValues[flatName]!==value&&!options.silent)throw new Error('Cannot import "'+flatName+'" twice');flatValues[flatName]=value}else if(!options.silent)throw new TypeError("Factory, Object, or Array expected")}options||(options={});var flatValues={};for(var name in flattenImports(flatValues,functions),flatValues)if(hasOwnProperty(flatValues,name)){var value=flatValues[name];if(isFactory(value))_importFactory(value,options);else if(isSupportedType(value))_import(name,value,options);else if(!options.silent)throw new TypeError("Factory, Object, or Array expected")}}function _import(name,value,options){if(options.wrap&&"function"==typeof value&&(value=_wrap(value)),hasTypedFunctionSignature(value)&&(value=typed(name,_defineProperty$2({},value.signature,value))),isTypedFunction(math[name])&&isTypedFunction(value))return value=options.override?typed(name,value.signatures):typed(math[name],value),math[name]=value,delete importedFactories[name],_importTransform(name,value),void math.emit("import",name,(function resolver(){return value}));if(void 0===math[name]||options.override)return math[name]=value,delete importedFactories[name],_importTransform(name,value),void math.emit("import",name,(function resolver(){return value}));if(!options.silent)throw new Error('Cannot import "'+name+'": already exists')}function _importTransform(name,value){value&&"function"==typeof value.transform?(math.expression.transform[name]=value.transform,allowedInExpressions(name)&&(math.expression.mathWithTransform[name]=value.transform)):(delete math.expression.transform[name],allowedInExpressions(name)&&(math.expression.mathWithTransform[name]=value))}function _deleteTransform(name){delete math.expression.transform[name],allowedInExpressions(name)?math.expression.mathWithTransform[name]=math[name]:delete math.expression.mathWithTransform[name]}function _wrap(fn){var wrapper=function wrapper(){for(var args=[],i=0,len=arguments.length;i<len;i++){var arg=arguments[i];args[i]=arg&&arg.valueOf()}return fn.apply(math,args)};return fn.transform&&(wrapper.transform=fn.transform),wrapper}function _importFactory(factory,options){var name=arguments.length>2&&void 0!==arguments[2]?arguments[2]:factory.fn;if(contains$1(name,"."))throw new Error("Factory name should not contain a nested path. Name: "+JSON.stringify(name));var namespace=isTransformFunctionFactory(factory)?math.expression.transform:math,existingTransform=name in math.expression.transform,existing=hasOwnProperty(namespace,name)?namespace[name]:void 0,resolver=function resolver(){var dependencies={};factory.dependencies.map(stripOptionalNotation).forEach((function(dependency){if(contains$1(dependency,"."))throw new Error("Factory dependency should not contain a nested path. Name: "+JSON.stringify(dependency));"math"===dependency?dependencies.math=math:"mathWithTransform"===dependency?dependencies.mathWithTransform=math.expression.mathWithTransform:"classes"===dependency?dependencies.classes=math:dependencies[dependency]=math[dependency]}));var instance=factory(dependencies);if(instance&&"function"==typeof instance.transform)throw new Error('Transforms cannot be attached to factory functions. Please create a separate function for it with exports.path="expression.transform"');if(void 0===existing||options.override)return instance;if(isTypedFunction(existing)&&isTypedFunction(instance))return typed(existing,instance);if(options.silent)return existing;throw new Error('Cannot import "'+name+'": already exists')};factory.meta&&!1===factory.meta.lazy?(namespace[name]=resolver(),existing&&existingTransform?_deleteTransform(name):(isTransformFunctionFactory(factory)||factoryAllowedInExpressions(factory))&&lazy(math.expression.mathWithTransform,name,(function(){return namespace[name]}))):(lazy(namespace,name,resolver),existing&&existingTransform?_deleteTransform(name):(isTransformFunctionFactory(factory)||factoryAllowedInExpressions(factory))&&lazy(math.expression.mathWithTransform,name,(function(){return namespace[name]}))),importedFactories[name]=factory,math.emit("import",name,resolver)}function isSupportedType(object){return"function"==typeof object||"number"==typeof object||"string"==typeof object||"boolean"==typeof object||null===object||isUnit(object)||isComplex(object)||isBigNumber(object)||isFraction(object)||isMatrix(object)||Array.isArray(object)}function isTypedFunction(fn){return"function"==typeof fn&&"object"===_typeof$d(fn.signatures)}function hasTypedFunctionSignature(fn){return"function"==typeof fn&&"string"==typeof fn.signature}function allowedInExpressions(name){return!hasOwnProperty(unsafe,name)}function factoryAllowedInExpressions(factory){return!(-1!==factory.fn.indexOf(".")||hasOwnProperty(unsafe,factory.fn)||factory.meta&&factory.meta.isClass)}function isTransformFunctionFactory(factory){return void 0!==factory&&void 0!==factory.meta&&!0===factory.meta.isTransformFunction||!1}var unsafe={expression:!0,type:!0,docs:!0,error:!0,json:!0,chain:!0};return mathImport}function _extends$6(){return(_extends$6=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function create(factories,config){var configInternal=_extends$6({},DEFAULT_CONFIG,config);if("function"!=typeof Object.create)throw new Error("ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.");var math=mixin({isNumber:isNumber,isComplex:isComplex,isBigNumber:isBigNumber,isFraction:isFraction,isUnit:isUnit,isString:isString,isArray:isArray,isMatrix:isMatrix,isCollection:isCollection,isDenseMatrix:isDenseMatrix,isSparseMatrix:isSparseMatrix,isRange:isRange,isIndex:isIndex,isBoolean:isBoolean,isResultSet:isResultSet,isHelp:isHelp,isFunction:isFunction,isDate:isDate,isRegExp:isRegExp,isObject:isObject,isNull:isNull,isUndefined:isUndefined,isAccessorNode:isAccessorNode,isArrayNode:isArrayNode,isAssignmentNode:isAssignmentNode,isBlockNode:isBlockNode,isConditionalNode:isConditionalNode,isConstantNode:isConstantNode,isFunctionAssignmentNode:isFunctionAssignmentNode,isFunctionNode:isFunctionNode,isIndexNode:isIndexNode,isNode:isNode,isObjectNode:isObjectNode,isOperatorNode:isOperatorNode,isParenthesisNode:isParenthesisNode,isRangeNode:isRangeNode,isSymbolNode:isSymbolNode,isChain:isChain});math.config=configFactory(configInternal,math.emit),math.expression={transform:{},mathWithTransform:{config:math.config}};var legacyFactories=[],legacyInstances=[];function load(factory){if(isFactory(factory))return factory(math);var firstProperty=factory[Object.keys(factory)[0]];if(isFactory(firstProperty))return firstProperty(math);if(!isLegacyFactory(factory))throw console.warn("Factory object with properties `type`, `name`, and `factory` expected",factory),new Error("Factory object with properties `type`, `name`, and `factory` expected");var index=legacyFactories.indexOf(factory),instance;return-1===index?(instance=!0===factory.math?factory.factory(math.type,configInternal,load,math.typed,math):factory.factory(math.type,configInternal,load,math.typed),legacyFactories.push(factory),legacyInstances.push(instance)):instance=legacyInstances[index],instance}var importedFactories={};function lazyTyped(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return math.typed.apply(math.typed,args)}var internalImport=importFactory(lazyTyped,load,math,importedFactories);return math.import=internalImport,math.on("config",(function(){values(importedFactories).forEach((function(factory){factory&&factory.meta&&factory.meta.recreateOnConfigChange&&internalImport(factory,{override:!0})}))})),math.create=create.bind(null,factories),math.factory=factory,math.import(values(deepFlatten(factories))),math.ArgumentsError=ArgumentsError,math.DimensionError=DimensionError,math.IndexError=IndexError,math}return exports_9("isNumber",isNumber),exports_9("isBigNumber",isBigNumber),exports_9("isComplex",isComplex),exports_9("isFraction",isFraction),exports_9("isUnit",isUnit),exports_9("isString",isString),exports_9("isMatrix",isMatrix),exports_9("isCollection",isCollection),exports_9("isDenseMatrix",isDenseMatrix),exports_9("isSparseMatrix",isSparseMatrix),exports_9("isRange",isRange),exports_9("isIndex",isIndex),exports_9("isBoolean",isBoolean),exports_9("isResultSet",isResultSet),exports_9("isHelp",isHelp),exports_9("isFunction",isFunction),exports_9("isDate",isDate),exports_9("isRegExp",isRegExp),exports_9("isObject",isObject),exports_9("isNull",isNull),exports_9("isUndefined",isUndefined),exports_9("isAccessorNode",isAccessorNode),exports_9("isArrayNode",isArrayNode),exports_9("isAssignmentNode",isAssignmentNode),exports_9("isBlockNode",isBlockNode),exports_9("isConditionalNode",isConditionalNode),exports_9("isConstantNode",isConstantNode),exports_9("isFunctionAssignmentNode",isFunctionAssignmentNode),exports_9("isFunctionNode",isFunctionNode),exports_9("isIndexNode",isIndexNode),exports_9("isNode",isNode),exports_9("isObjectNode",isObjectNode),exports_9("isOperatorNode",isOperatorNode),exports_9("isParenthesisNode",isParenthesisNode),exports_9("isRangeNode",isRangeNode),exports_9("isSymbolNode",isSymbolNode),exports_9("isChain",isChain),exports_9("DimensionError",DimensionError),exports_9("IndexError",IndexError),exports_9("factory",factory),exports_9("ArgumentsError",ArgumentsError),exports_9("create",create),{setters:[function(dist_es2020_from_mathjs_1_1){dist_es2020_from_mathjs_1=dist_es2020_from_mathjs_1_1},function(decimal_js_1_1){decimal_js_1=decimal_js_1_1},function(complex_js_1_1){complex_js_1=complex_js_1_1},function(fraction_js_1_1){fraction_js_1=fraction_js_1_1},function(javascript_natural_sort_js_1_1){javascript_natural_sort_js_1=javascript_natural_sort_js_1_1},function(escape_latex_js_1_1){escape_latex_js_1=escape_latex_js_1_1},function(seed_random_js_1_1){seed_random_js_1=seed_random_js_1_1},function(tiny_emitter_js_1_1){tiny_emitter_js_1=tiny_emitter_js_1_1}],execute:function(){DEFAULT_CONFIG={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null},isArray=Array.isArray,exports_9("isArray",isArray),MATRIX_OPTIONS=["Matrix","Array"],NUMBER_OPTIONS=["number","BigNumber","Fraction"],exports_9("config",config=function config(options){if(options)throw new Error("The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n");return Object.freeze(DEFAULT_CONFIG)}),_extends(config,DEFAULT_CONFIG,{MATRIX_OPTIONS:MATRIX_OPTIONS,NUMBER_OPTIONS:NUMBER_OPTIONS}),sign=Math.sign||function(x){return x>0?1:x<0?-1:0},log2=Math.log2||function log2(x){return Math.log(x)/Math.LN2},log10=Math.log10||function log10(x){return Math.log(x)/Math.LN10},log1p=Math.log1p||function(x){return Math.log(x+1)},cbrt=Math.cbrt||function cbrt(x){if(0===x)return x;var negate=x<0,result;return negate&&(x=-x),result=isFinite(x)?(x/((result=Math.exp(Math.log(x)/3))*result)+2*result)/3:x,negate?-result:result},expm1=Math.expm1||function expm1(x){return x>=2e-4||x<=-2e-4?Math.exp(x)-1:x+x*x/2+x*x*x/6},DBL_EPSILON=Number.EPSILON||2220446049250313e-31,acosh=Math.acosh||function(x){return Math.log(Math.sqrt(x*x-1)+x)},asinh=Math.asinh||function(x){return Math.log(Math.sqrt(x*x+1)+x)},atanh=Math.atanh||function(x){return Math.log((1+x)/(1-x))/2},cosh=Math.cosh||function(x){return(Math.exp(x)+Math.exp(-x))/2},sinh=Math.sinh||function(x){return(Math.exp(x)-Math.exp(-x))/2},tanh=Math.tanh||function(x){var e=Math.exp(2*x);return(e-1)/(e+1)},DimensionError.prototype=new RangeError,DimensionError.prototype.constructor=RangeError,DimensionError.prototype.name="DimensionError",DimensionError.prototype.isDimensionError=!0,IndexError.prototype=new RangeError,IndexError.prototype.constructor=RangeError,IndexError.prototype.name="IndexError",IndexError.prototype.isIndexError=!0,_createTyped2=function _createTyped(){return _createTyped2=dist_es2020_from_mathjs_1.default.create,dist_es2020_from_mathjs_1.default},createTyped=factory("typed",dependencies=["?BigNumber","?Complex","?DenseMatrix","?Fraction"],(function createTyped(_ref){var BigNumber=_ref.BigNumber,Complex=_ref.Complex,DenseMatrix=_ref.DenseMatrix,Fraction=_ref.Fraction,typed=_createTyped2();return typed.types=[{name:"number",test:isNumber},{name:"Complex",test:isComplex},{name:"BigNumber",test:isBigNumber},{name:"Fraction",test:isFraction},{name:"Unit",test:isUnit},{name:"string",test:isString},{name:"Chain",test:isChain},{name:"Array",test:isArray},{name:"Matrix",test:isMatrix},{name:"DenseMatrix",test:isDenseMatrix},{name:"SparseMatrix",test:isSparseMatrix},{name:"Range",test:isRange},{name:"Index",test:isIndex},{name:"boolean",test:isBoolean},{name:"ResultSet",test:isResultSet},{name:"Help",test:isHelp},{name:"function",test:isFunction},{name:"Date",test:isDate},{name:"RegExp",test:isRegExp},{name:"null",test:isNull},{name:"undefined",test:isUndefined},{name:"AccessorNode",test:isAccessorNode},{name:"ArrayNode",test:isArrayNode},{name:"AssignmentNode",test:isAssignmentNode},{name:"BlockNode",test:isBlockNode},{name:"ConditionalNode",test:isConditionalNode},{name:"ConstantNode",test:isConstantNode},{name:"FunctionNode",test:isFunctionNode},{name:"FunctionAssignmentNode",test:isFunctionAssignmentNode},{name:"IndexNode",test:isIndexNode},{name:"Node",test:isNode},{name:"ObjectNode",test:isObjectNode},{name:"OperatorNode",test:isOperatorNode},{name:"ParenthesisNode",test:isParenthesisNode},{name:"RangeNode",test:isRangeNode},{name:"SymbolNode",test:isSymbolNode},{name:"Object",test:isObject}],typed.conversions=[{from:"number",to:"BigNumber",convert:function convert(x){if(BigNumber||throwNoBignumber(x),digits(x)>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+x+"). Use function bignumber(x) to convert to BigNumber.");return new BigNumber(x)}},{from:"number",to:"Complex",convert:function convert(x){return Complex||throwNoComplex(x),new Complex(x,0)}},{from:"number",to:"string",convert:function convert(x){return x+""}},{from:"BigNumber",to:"Complex",convert:function convert(x){return Complex||throwNoComplex(x),new Complex(x.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function convert(x){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function convert(x){return Complex||throwNoComplex(x),new Complex(x.valueOf(),0)}},{from:"number",to:"Fraction",convert:function convert(x){Fraction||throwNoFraction(x);var f=new Fraction(x);if(f.valueOf()!==x)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+x+"). Use function fraction(x) to convert to Fraction.");return f}},{from:"string",to:"number",convert:function convert(x){var n=Number(x);if(isNaN(n))throw new Error('Cannot convert "'+x+'" to a number');return n}},{from:"string",to:"BigNumber",convert:function convert(x){BigNumber||throwNoBignumber(x);try{return new BigNumber(x)}catch(err){throw new Error('Cannot convert "'+x+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function convert(x){Fraction||throwNoFraction(x);try{return new Fraction(x)}catch(err){throw new Error('Cannot convert "'+x+'" to Fraction')}}},{from:"string",to:"Complex",convert:function convert(x){Complex||throwNoComplex(x);try{return new Complex(x)}catch(err){throw new Error('Cannot convert "'+x+'" to Complex')}}},{from:"boolean",to:"number",convert:function convert(x){return+x}},{from:"boolean",to:"BigNumber",convert:function convert(x){return BigNumber||throwNoBignumber(x),new BigNumber(+x)}},{from:"boolean",to:"Fraction",convert:function convert(x){return Fraction||throwNoFraction(x),new Fraction(+x)}},{from:"boolean",to:"string",convert:function convert(x){return String(x)}},{from:"Array",to:"Matrix",convert:function convert(array){return DenseMatrix||throwNoMatrix(),new DenseMatrix(array)}},{from:"Matrix",to:"Array",convert:function convert(matrix){return matrix.valueOf()}}],typed})),exports_9("createTyped",createTyped),createResultSet=factory(name="ResultSet",dependencies$1=[],(function(){function ResultSet(entries){if(!(this instanceof ResultSet))throw new SyntaxError("Constructor must be called with the new operator");this.entries=entries||[]}return ResultSet.prototype.type="ResultSet",ResultSet.prototype.isResultSet=!0,ResultSet.prototype.valueOf=function(){return this.entries},ResultSet.prototype.toString=function(){return"["+this.entries.join(", ")+"]"},ResultSet.prototype.toJSON=function(){return{mathjs:"ResultSet",entries:this.entries}},ResultSet.fromJSON=function(json){return new ResultSet(json.entries)},ResultSet}),{isClass:!0}),exports_9("createResultSet",createResultSet),createBigNumberClass=factory(name$1="BigNumber",dependencies$2=["?on","config"],(function(_ref){var on=_ref.on,config=_ref.config,BigNumber=decimal_js_1.default.clone({precision:config.precision});return BigNumber.prototype.type="BigNumber",BigNumber.prototype.isBigNumber=!0,BigNumber.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},BigNumber.fromJSON=function(json){return new BigNumber(json.value)},on&&on("config",(function(curr,prev){curr.precision!==prev.precision&&BigNumber.config({precision:curr.precision})})),BigNumber}),{isClass:!0}),exports_9("createBigNumberClass",createBigNumberClass),createComplexClass=factory(name$2="Complex",dependencies$3=[],(function(){return complex_js_1.default.prototype.type="Complex",complex_js_1.default.prototype.isComplex=!0,complex_js_1.default.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},complex_js_1.default.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},complex_js_1.default.prototype.format=function(options){var str="",im=this.im,re=this.re,strRe=format(this.re,options),strIm=format(this.im,options),precision=isNumber(options)?options:options?options.precision:null;if(null!==precision){var epsilon=Math.pow(10,-precision);Math.abs(re/im)<epsilon&&(re=0),Math.abs(im/re)<epsilon&&(im=0)}return str=0===im?strRe:0===re?1===im?"i":-1===im?"-i":strIm+"i":im<0?-1===im?strRe+" - i":strRe+" - "+strIm.substring(1)+"i":1===im?strRe+" + i":strRe+" + "+strIm+"i"},complex_js_1.default.fromPolar=function(args){switch(arguments.length){case 1:var arg=arguments[0];if("object"===_typeof$3(arg))return complex_js_1.default(arg);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var r=arguments[0],phi=arguments[1];if(isNumber(r)){if(isUnit(phi)&&phi.hasBase("ANGLE")&&(phi=phi.toNumber("rad")),isNumber(phi))return new complex_js_1.default({r:r,phi:phi});throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},complex_js_1.default.prototype.valueOf=complex_js_1.default.prototype.toString,complex_js_1.default.fromJSON=function(json){return new complex_js_1.default(json)},complex_js_1.default.compare=function(a,b){return a.re>b.re?1:a.re<b.re?-1:a.im>b.im?1:a.im<b.im?-1:0},complex_js_1.default}),{isClass:!0}),exports_9("createComplexClass",createComplexClass),createFractionClass=factory(name$3="Fraction",dependencies$4=[],(function(){return fraction_js_1.default.prototype.type="Fraction",fraction_js_1.default.prototype.isFraction=!0,fraction_js_1.default.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},fraction_js_1.default.fromJSON=function(json){return new fraction_js_1.default(json)},fraction_js_1.default}),{isClass:!0}),exports_9("createFractionClass",createFractionClass),createRangeClass=factory(name$4="Range",dependencies$5=[],(function(){function Range(start,end,step){if(!(this instanceof Range))throw new SyntaxError("Constructor must be called with the new operator");var hasStart=null!=start,hasEnd=null!=end,hasStep=null!=step;if(hasStart)if(isBigNumber(start))start=start.toNumber();else if("number"!=typeof start)throw new TypeError("Parameter start must be a number");if(hasEnd)if(isBigNumber(end))end=end.toNumber();else if("number"!=typeof end)throw new TypeError("Parameter end must be a number");if(hasStep)if(isBigNumber(step))step=step.toNumber();else if("number"!=typeof step)throw new TypeError("Parameter step must be a number");this.start=hasStart?parseFloat(start):0,this.end=hasEnd?parseFloat(end):0,this.step=hasStep?parseFloat(step):1}return Range.prototype.type="Range",Range.prototype.isRange=!0,Range.parse=function(str){if("string"!=typeof str)return null;var args,nums=str.split(":").map((function(arg){return parseFloat(arg)})),invalid;if(nums.some((function(num){return isNaN(num)})))return null;switch(nums.length){case 2:return new Range(nums[0],nums[1]);case 3:return new Range(nums[0],nums[2],nums[1]);default:return null}},Range.prototype.clone=function(){return new Range(this.start,this.end,this.step)},Range.prototype.size=function(){var len=0,start=this.start,step=this.step,end,diff=this.end-start;return sign(step)===sign(diff)?len=Math.ceil(diff/step):0===diff&&(len=0),isNaN(len)&&(len=0),[len]},Range.prototype.min=function(){var size=this.size()[0];return size>0?this.step>0?this.start:this.start+(size-1)*this.step:void 0},Range.prototype.max=function(){var size=this.size()[0];return size>0?this.step>0?this.start+(size-1)*this.step:this.start:void 0},Range.prototype.forEach=function(callback){var x=this.start,step=this.step,end=this.end,i=0;if(step>0)for(;x<end;)callback(x,[i],this),x+=step,i++;else if(step<0)for(;x>end;)callback(x,[i],this),x+=step,i++},Range.prototype.map=function(callback){var array=[];return this.forEach((function(value,index,obj){array[index[0]]=callback(value,index,obj)})),array},Range.prototype.toArray=function(){var array=[];return this.forEach((function(value,index){array[index[0]]=value})),array},Range.prototype.valueOf=function(){return this.toArray()},Range.prototype.format=function(options){var str=format(this.start,options);return 1!==this.step&&(str+=":"+format(this.step,options)),str+=":"+format(this.end,options)},Range.prototype.toString=function(){return this.format()},Range.prototype.toJSON=function(){return{mathjs:"Range",start:this.start,end:this.end,step:this.step}},Range.fromJSON=function(json){return new Range(json.start,json.end,json.step)},Range}),{isClass:!0}),exports_9("createRangeClass",createRangeClass),createMatrixClass=factory(name$5="Matrix",dependencies$6=[],(function(){function Matrix(){if(!(this instanceof Matrix))throw new SyntaxError("Constructor must be called with the new operator")}return Matrix.prototype.type="Matrix",Matrix.prototype.isMatrix=!0,Matrix.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},Matrix.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},Matrix.prototype.create=function(data,datatype){throw new Error("Cannot invoke create on a Matrix interface")},Matrix.prototype.subset=function(index,replacement,defaultValue){throw new Error("Cannot invoke subset on a Matrix interface")},Matrix.prototype.get=function(index){throw new Error("Cannot invoke get on a Matrix interface")},Matrix.prototype.set=function(index,value,defaultValue){throw new Error("Cannot invoke set on a Matrix interface")},Matrix.prototype.resize=function(size,defaultValue){throw new Error("Cannot invoke resize on a Matrix interface")},Matrix.prototype.reshape=function(size,defaultValue){throw new Error("Cannot invoke reshape on a Matrix interface")},Matrix.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},Matrix.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},Matrix.prototype.map=function(callback,skipZeros){throw new Error("Cannot invoke map on a Matrix interface")},Matrix.prototype.forEach=function(callback){throw new Error("Cannot invoke forEach on a Matrix interface")},Matrix.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},Matrix.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},Matrix.prototype.format=function(options){throw new Error("Cannot invoke format on a Matrix interface")},Matrix.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},Matrix}),{isClass:!0}),exports_9("createMatrixClass",createMatrixClass),createDenseMatrixClass=factory(name$6="DenseMatrix",dependencies$7=["Matrix"],(function(_ref){var Matrix=_ref.Matrix;function DenseMatrix(data,datatype){if(!(this instanceof DenseMatrix))throw new SyntaxError("Constructor must be called with the new operator");if(datatype&&!isString(datatype))throw new Error("Invalid datatype: "+datatype);if(isMatrix(data))"DenseMatrix"===data.type?(this._data=clone(data._data),this._size=clone(data._size),this._datatype=datatype||data._datatype):(this._data=data.toArray(),this._size=data.size(),this._datatype=datatype||data._datatype);else if(data&&isArray(data.data)&&isArray(data.size))this._data=data.data,this._size=data.size,validate(this._data,this._size),this._datatype=datatype||data.datatype;else if(isArray(data))this._data=preprocess(data),this._size=arraySize(this._data),validate(this._data,this._size),this._datatype=datatype;else{if(data)throw new TypeError("Unsupported type of data ("+typeOf(data)+")");this._data=[],this._size=[0],this._datatype=datatype}}function _get(matrix,index){if(!isIndex(index))throw new TypeError("Invalid index");var isScalar;if(index.isScalar())return matrix.get(index.min());var size=index.size();if(size.length!==matrix._size.length)throw new DimensionError(size.length,matrix._size.length);for(var min=index.min(),max=index.max(),i=0,ii=matrix._size.length;i<ii;i++)validateIndex(min[i],matrix._size[i]),validateIndex(max[i],matrix._size[i]);return new DenseMatrix(_getSubmatrix(matrix._data,index,size.length,0),matrix._datatype)}function _getSubmatrix(data,index,dims,dim){var last=dim===dims-1,range=index.dimension(dim);return last?range.map((function(i){return validateIndex(i,data.length),data[i]})).valueOf():range.map((function(i){var child;return validateIndex(i,data.length),_getSubmatrix(data[i],index,dims,dim+1)})).valueOf()}function _set(matrix,index,submatrix,defaultValue){if(!index||!0!==index.isIndex)throw new TypeError("Invalid index");var iSize=index.size(),isScalar=index.isScalar(),sSize;if(isMatrix(submatrix)?(sSize=submatrix.size(),submatrix=submatrix.valueOf()):sSize=arraySize(submatrix),isScalar){if(0!==sSize.length)throw new TypeError("Scalar expected");matrix.set(index.min(),submatrix,defaultValue)}else{if(iSize.length<matrix._size.length)throw new DimensionError(iSize.length,matrix._size.length,"<");if(sSize.length<iSize.length){for(var i=0,outer=0;1===iSize[i]&&1===sSize[i];)i++;for(;1===iSize[i];)outer++,i++;submatrix=unsqueeze(submatrix,iSize.length,outer,sSize)}if(!deepStrictEqual(iSize,sSize))throw new DimensionError(iSize,sSize,">");var size;_fit(matrix,index.max().map((function(i){return i+1})),defaultValue);var dims=iSize.length,dim=0;_setSubmatrix(matrix._data,index,submatrix,dims,0)}return matrix}function _setSubmatrix(data,index,submatrix,dims,dim){var last=dim===dims-1,range=index.dimension(dim);last?range.forEach((function(dataIndex,subIndex){validateIndex(dataIndex),data[dataIndex]=submatrix[subIndex[0]]})):range.forEach((function(dataIndex,subIndex){validateIndex(dataIndex),_setSubmatrix(data[dataIndex],index,submatrix[subIndex[0]],dims,dim+1)}))}function _resize(matrix,size,defaultValue){if(0===size.length){for(var v=matrix._data;isArray(v);)v=v[0];return v}return matrix._size=size.slice(0),matrix._data=resize(matrix._data,matrix._size,defaultValue),matrix}function _fit(matrix,size,defaultValue){for(var newSize=matrix._size.slice(0),changed=!1;newSize.length<size.length;)newSize.push(0),changed=!0;for(var i=0,ii=size.length;i<ii;i++)size[i]>newSize[i]&&(newSize[i]=size[i],changed=!0);changed&&_resize(matrix,newSize,defaultValue)}function preprocess(data){for(var i=0,ii=data.length;i<ii;i++){var elem=data[i];isArray(elem)?data[i]=preprocess(elem):elem&&!0===elem.isMatrix&&(data[i]=preprocess(elem.valueOf()))}return data}return DenseMatrix.prototype=new Matrix,DenseMatrix.prototype.createDenseMatrix=function(data,datatype){return new DenseMatrix(data,datatype)},DenseMatrix.prototype.type="DenseMatrix",DenseMatrix.prototype.isDenseMatrix=!0,DenseMatrix.prototype.getDataType=function(){return getArrayDataType(this._data,typeOf)},DenseMatrix.prototype.storage=function(){return"dense"},DenseMatrix.prototype.datatype=function(){return this._datatype},DenseMatrix.prototype.create=function(data,datatype){return new DenseMatrix(data,datatype)},DenseMatrix.prototype.subset=function(index,replacement,defaultValue){switch(arguments.length){case 1:return _get(this,index);case 2:case 3:return _set(this,index,replacement,defaultValue);default:throw new SyntaxError("Wrong number of arguments")}},DenseMatrix.prototype.get=function(index){if(!isArray(index))throw new TypeError("Array expected");if(index.length!==this._size.length)throw new DimensionError(index.length,this._size.length);for(var x=0;x<index.length;x++)validateIndex(index[x],this._size[x]);for(var data=this._data,i=0,ii=index.length;i<ii;i++){var indexI=index[i];validateIndex(indexI,data.length),data=data[indexI]}return data},DenseMatrix.prototype.set=function(index,value,defaultValue){if(!isArray(index))throw new TypeError("Array expected");if(index.length<this._size.length)throw new DimensionError(index.length,this._size.length,"<");var i,ii,indexI,size;_fit(this,index.map((function(i){return i+1})),defaultValue);var data=this._data;for(i=0,ii=index.length-1;i<ii;i++)validateIndex(indexI=index[i],data.length),data=data[indexI];return validateIndex(indexI=index[index.length-1],data.length),data[indexI]=value,this},DenseMatrix.prototype.resize=function(size,defaultValue,copy){if(!isCollection(size))throw new TypeError("Array or Matrix expected");var sizeArray=size.valueOf().map((function(value){return Array.isArray(value)&&1===value.length?value[0]:value})),m;return _resize(copy?this.clone():this,sizeArray,defaultValue)},DenseMatrix.prototype.reshape=function(size,copy){var m=copy?this.clone():this;return m._data=reshape(m._data,size),m._size=size.slice(0),m},DenseMatrix.prototype.clone=function(){var m;return new DenseMatrix({data:clone(this._data),size:clone(this._size),datatype:this._datatype})},DenseMatrix.prototype.size=function(){return this._size.slice(0)},DenseMatrix.prototype.map=function(callback){var me=this,recurse,data=function recurse(value,index){return isArray(value)?value.map((function(child,i){return recurse(child,index.concat(i))})):callback(value,index,me)}(this._data,[]),datatype;return new DenseMatrix(data,void 0!==this._datatype?getArrayDataType(data,typeOf):void 0)},DenseMatrix.prototype.forEach=function(callback){var me=this,recurse;(function recurse(value,index){isArray(value)?value.forEach((function(child,i){recurse(child,index.concat(i))})):callback(value,index,me)})(this._data,[])},DenseMatrix.prototype.toArray=function(){return clone(this._data)},DenseMatrix.prototype.valueOf=function(){return this._data},DenseMatrix.prototype.format=function(options){return format$2(this._data,options)},DenseMatrix.prototype.toString=function(){return format$2(this._data)},DenseMatrix.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},DenseMatrix.prototype.diagonal=function(k){if(k){if(isBigNumber(k)&&(k=k.toNumber()),!isNumber(k)||!isInteger(k))throw new TypeError("The parameter k must be an integer number")}else k=0;for(var kSuper=k>0?k:0,kSub=k<0?-k:0,rows=this._size[0],columns=this._size[1],n=Math.min(rows-kSub,columns-kSuper),data=[],i=0;i<n;i++)data[i]=this._data[i+kSub][i+kSuper];return new DenseMatrix({data:data,size:[n],datatype:this._datatype})},DenseMatrix.diagonal=function(size,value,k,defaultValue){if(!isArray(size))throw new TypeError("Array expected, size parameter");if(2!==size.length)throw new Error("Only two dimensions matrix are supported");if(size=size.map((function(s){if(isBigNumber(s)&&(s=s.toNumber()),!isNumber(s)||!isInteger(s)||s<1)throw new Error("Size values must be positive integers");return s})),k){if(isBigNumber(k)&&(k=k.toNumber()),!isNumber(k)||!isInteger(k))throw new TypeError("The parameter k must be an integer number")}else k=0;var kSuper=k>0?k:0,kSub=k<0?-k:0,rows=size[0],columns=size[1],n=Math.min(rows-kSub,columns-kSuper),_value;if(isArray(value)){if(value.length!==n)throw new Error("Invalid value array length");_value=function _value(i){return value[i]}}else if(isMatrix(value)){var ms=value.size();if(1!==ms.length||ms[0]!==n)throw new Error("Invalid matrix length");_value=function _value(i){return value.get([i])}}else _value=function _value(){return value};defaultValue||(defaultValue=isBigNumber(_value(0))?_value(0).mul(0):0);var data=[];if(size.length>0){data=resize(data,size,defaultValue);for(var d=0;d<n;d++)data[d+kSub][d+kSuper]=_value(d)}return new DenseMatrix({data:data,size:[rows,columns]})},DenseMatrix.fromJSON=function(json){return new DenseMatrix(json)},DenseMatrix.prototype.swapRows=function(i,j){if(!(isNumber(i)&&isInteger(i)&&isNumber(j)&&isInteger(j)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return validateIndex(i,this._size[0]),validateIndex(j,this._size[0]),DenseMatrix._swapRows(i,j,this._data),this},DenseMatrix._swapRows=function(i,j,data){var vi=data[i];data[i]=data[j],data[j]=vi},DenseMatrix}),{isClass:!0}),exports_9("createDenseMatrixClass",createDenseMatrixClass),createClone=factory(name$7="clone",dependencies$8=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$7,{any:clone})})),exports_9("createClone",createClone),createIsInteger=factory(name$8="isInteger",dependencies$9=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$8,{number:isInteger,BigNumber:function BigNumber(x){return x.isInt()},Fraction:function Fraction(x){return 1===x.d&&isFinite(x.n)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createIsInteger",createIsInteger),n1="number",n2="number, number",absNumber.signature=n1,addNumber.signature=n2,multiplyNumber.signature=n2,unaryMinusNumber.signature=n1,unaryPlusNumber.signature=n1,cbrtNumber.signature=n1,ceilNumber.signature=n1,cubeNumber.signature=n1,expNumber.signature=n1,expm1Number.signature=n1,gcdNumber.signature=n2,lcmNumber.signature=n2,logNumber.signature=n1,log10Number.signature=n1,log2Number.signature=n1,modNumber.signature=n2,nthRootNumber.signature=n2,signNumber.signature=n1,squareNumber.signature=n1,xgcdNumber.signature=n2,powNumber.signature=n2,roundNumber.signature=n2,n1$1="number",n2$1="number, number",bitAndNumber.signature=n2$1,bitNotNumber.signature=n1$1,bitOrNumber.signature=n2$1,bitXorNumber.signature=n2$1,leftShiftNumber.signature=n2$1,rightArithShiftNumber.signature=n2$1,rightLogShiftNumber.signature=n2$1,combinationsNumber.signature="number, number",pi=Math.PI,tau=2*Math.PI,e=Math.E,phi=1.618033988749895,n1$2="number",n2$2="number, number",notNumber.signature=n1$2,orNumber.signature=n2$2,xorNumber.signature=n2$2,andNumber.signature=n2$2,gammaNumber.signature="number",gammaG=4.7421875,gammaP=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22],n1$3="number",acoshNumber.signature=n1$3,acotNumber.signature=n1$3,acothNumber.signature=n1$3,acscNumber.signature=n1$3,acschNumber.signature=n1$3,asecNumber.signature=n1$3,asechNumber.signature=n1$3,asinhNumber.signature=n1$3,atanhNumber.signature=n1$3,cotNumber.signature=n1$3,cothNumber.signature=n1$3,cscNumber.signature=n1$3,cschNumber.signature=n1$3,secNumber.signature=n1$3,sechNumber.signature=n1$3,sinhNumber.signature=n1$3,n1$4="number",isNegativeNumber.signature=n1$4,isPositiveNumber.signature=n1$4,isZeroNumber.signature=n1$4,isNaNNumber.signature=n1$4,createIsNegative=factory(name$9="isNegative",dependencies$a=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$9,{number:isNegativeNumber,BigNumber:function BigNumber(x){return x.isNeg()&&!x.isZero()&&!x.isNaN()},Fraction:function Fraction(x){return x.s<0},Unit:function Unit(x){return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createIsNegative",createIsNegative),createIsNumeric=factory(name$a="isNumeric",dependencies$b=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$a,{"number | BigNumber | Fraction | boolean":function numberBigNumberFractionBoolean(){return!0},"Complex | Unit | string | null | undefined | Node":function ComplexUnitStringNullUndefinedNode(){return!1},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createIsNumeric",createIsNumeric),createHasNumericValue=factory(name$b="hasNumericValue",dependencies$c=["typed","isNumeric"],(function(_ref){var typed=_ref.typed,isNumeric=_ref.isNumeric;return typed(name$b,{string:function string(x){return x.trim().length>0&&!isNaN(Number(x))},any:function any(x){return isNumeric(x)}})})),exports_9("createHasNumericValue",createHasNumericValue),createIsPositive=factory(name$c="isPositive",dependencies$d=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$c,{number:isPositiveNumber,BigNumber:function BigNumber(x){return!x.isNeg()&&!x.isZero()&&!x.isNaN()},Fraction:function Fraction(x){return x.s>0&&x.n>0},Unit:function Unit(x){return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createIsPositive",createIsPositive),createIsZero=factory(name$d="isZero",dependencies$e=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$d,{number:isZeroNumber,BigNumber:function BigNumber(x){return x.isZero()},Complex:function Complex(x){return 0===x.re&&0===x.im},Fraction:function Fraction(x){return 1===x.d&&0===x.n},Unit:function Unit(x){return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createIsZero",createIsZero),createIsNaN=factory(name$e="isNaN",dependencies$f=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$e,{number:isNaNNumber,BigNumber:function BigNumber(x){return x.isNaN()},Fraction:function Fraction(x){return!1},Complex:function Complex(x){return x.isNaN()},Unit:function Unit(x){return Number.isNaN(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,Number.isNaN)}})})),exports_9("createIsNaN",createIsNaN),createTypeOf=factory(name$f="typeOf",dependencies$g=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$f,{any:typeOf})})),exports_9("createTypeOf",createTypeOf),createEqualScalar=factory(name$g="equalScalar",dependencies$h=["typed","config"],(function(_ref){var typed=_ref.typed,config=_ref.config;return typed(name$g,{"boolean, boolean":function booleanBoolean(x,y){return x===y},"number, number":function numberNumber(x,y){return nearlyEqual(x,y,config.epsilon)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.eq(y)||nearlyEqual$1(x,y,config.epsilon)},"Fraction, Fraction":function FractionFraction(x,y){return x.equals(y)},"Complex, Complex":function ComplexComplex(x,y){return complexEquals(x,y,config.epsilon)},"Unit, Unit":function UnitUnit(x,y){if(!x.equalBase(y))throw new Error("Cannot compare units with different base");return this(x.value,y.value)}})})),exports_9("createEqualScalar",createEqualScalar),createEqualScalarNumber=factory(name$g,["typed","config"],(function(_ref2){var typed=_ref2.typed,config=_ref2.config;return typed(name$g,{"number, number":function numberNumber(x,y){return nearlyEqual(x,y,config.epsilon)}})})),createSparseMatrixClass=factory(name$h="SparseMatrix",dependencies$i=["typed","equalScalar","Matrix"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar,Matrix=_ref.Matrix;function SparseMatrix(data,datatype){if(!(this instanceof SparseMatrix))throw new SyntaxError("Constructor must be called with the new operator");if(datatype&&!isString(datatype))throw new Error("Invalid datatype: "+datatype);if(isMatrix(data))_createFromMatrix(this,data,datatype);else if(data&&isArray(data.index)&&isArray(data.ptr)&&isArray(data.size))this._values=data.values,this._index=data.index,this._ptr=data.ptr,this._size=data.size,this._datatype=datatype||data.datatype;else if(isArray(data))_createFromArray(this,data,datatype);else{if(data)throw new TypeError("Unsupported type of data ("+typeOf(data)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=datatype}}function _createFromMatrix(matrix,source,datatype){"SparseMatrix"===source.type?(matrix._values=source._values?clone(source._values):void 0,matrix._index=clone(source._index),matrix._ptr=clone(source._ptr),matrix._size=clone(source._size),matrix._datatype=datatype||source._datatype):_createFromArray(matrix,source.valueOf(),datatype||source._datatype)}function _createFromArray(matrix,data,datatype){matrix._values=[],matrix._index=[],matrix._ptr=[],matrix._datatype=datatype;var rows=data.length,columns=0,eq=equalScalar,zero=0;if(isString(datatype)&&(eq=typed.find(equalScalar,[datatype,datatype])||equalScalar,zero=typed.convert(0,datatype)),rows>0){var j=0;do{matrix._ptr.push(matrix._index.length);for(var i=0;i<rows;i++){var row=data[i];if(isArray(row)){if(0===j&&columns<row.length&&(columns=row.length),j<row.length){var v=row[j];eq(v,zero)||(matrix._values.push(v),matrix._index.push(i))}}else 0===j&&columns<1&&(columns=1),eq(row,zero)||(matrix._values.push(row),matrix._index.push(i))}j++}while(j<columns)}matrix._ptr.push(matrix._index.length),matrix._size=[rows,columns]}function _getsubset(matrix,idx){if(!isIndex(idx))throw new TypeError("Invalid index");var isScalar;if(idx.isScalar())return matrix.get(idx.min());var size=idx.size(),i,ii,k,kk;if(size.length!==matrix._size.length)throw new DimensionError(size.length,matrix._size.length);var min=idx.min(),max=idx.max();for(i=0,ii=matrix._size.length;i<ii;i++)validateIndex(min[i],matrix._size[i]),validateIndex(max[i],matrix._size[i]);var mvalues=matrix._values,mindex=matrix._index,mptr=matrix._ptr,rows=idx.dimension(0),columns=idx.dimension(1),w=[],pv=[];rows.forEach((function(i,r){pv[i]=r[0],w[i]=!0}));var values=mvalues?[]:void 0,index=[],ptr=[];return columns.forEach((function(j){for(ptr.push(index.length),k=mptr[j],kk=mptr[j+1];k<kk;k++)i=mindex[k],!0===w[i]&&(index.push(pv[i]),values&&values.push(mvalues[k]))})),ptr.push(index.length),new SparseMatrix({values:values,index:index,ptr:ptr,size:size,datatype:matrix._datatype})}function _setsubset(matrix,index,submatrix,defaultValue){if(!index||!0!==index.isIndex)throw new TypeError("Invalid index");var iSize=index.size(),isScalar=index.isScalar(),sSize;if(isMatrix(submatrix)?(sSize=submatrix.size(),submatrix=submatrix.toArray()):sSize=arraySize(submatrix),isScalar){if(0!==sSize.length)throw new TypeError("Scalar expected");matrix.set(index.min(),submatrix,defaultValue)}else{if(1!==iSize.length&&2!==iSize.length)throw new DimensionError(iSize.length,matrix._size.length,"<");if(sSize.length<iSize.length){for(var i=0,outer=0;1===iSize[i]&&1===sSize[i];)i++;for(;1===iSize[i];)outer++,i++;submatrix=unsqueeze(submatrix,iSize.length,outer,sSize)}if(!deepStrictEqual(iSize,sSize))throw new DimensionError(iSize,sSize,">");for(var x0=index.min()[0],y0=index.min()[1],m=sSize[0],n=sSize[1],x=0;x<m;x++)for(var y=0;y<n;y++){var v=submatrix[x][y];matrix.set([x+x0,y+y0],v,defaultValue)}}return matrix}function _getValueIndex(i,top,bottom,index){if(bottom-top==0)return bottom;for(var r=top;r<bottom;r++)if(index[r]===i)return r;return top}function _remove(k,j,values,index,ptr){values.splice(k,1),index.splice(k,1);for(var x=j+1;x<ptr.length;x++)ptr[x]--}function _insert(k,i,j,v,values,index,ptr){values.splice(k,0,v),index.splice(k,0,i);for(var x=j+1;x<ptr.length;x++)ptr[x]++}function _resize(matrix,rows,columns,defaultValue){var value=defaultValue||0,eq=equalScalar,zero=0;isString(matrix._datatype)&&(eq=typed.find(equalScalar,[matrix._datatype,matrix._datatype])||equalScalar,zero=typed.convert(0,matrix._datatype),value=typed.convert(value,matrix._datatype));var ins=!eq(value,zero),r=matrix._size[0],c=matrix._size[1],i,j,k;if(columns>c){for(j=c;j<columns;j++)if(matrix._ptr[j]=matrix._values.length,ins)for(i=0;i<r;i++)matrix._values.push(value),matrix._index.push(i);matrix._ptr[columns]=matrix._values.length}else columns<c&&(matrix._ptr.splice(columns+1,c-columns),matrix._values.splice(matrix._ptr[columns],matrix._values.length),matrix._index.splice(matrix._ptr[columns],matrix._index.length));if(c=columns,rows>r){if(ins){var n=0;for(j=0;j<c;j++){matrix._ptr[j]=matrix._ptr[j]+n,k=matrix._ptr[j+1]+n;var p=0;for(i=r;i<rows;i++,p++)matrix._values.splice(k+p,0,value),matrix._index.splice(k+p,0,i),n++}matrix._ptr[c]=matrix._values.length}}else if(rows<r){var d=0;for(j=0;j<c;j++){matrix._ptr[j]=matrix._ptr[j]-d;var k0=matrix._ptr[j],k1=matrix._ptr[j+1]-d;for(k=k0;k<k1;k++)(i=matrix._index[k])>rows-1&&(matrix._values.splice(k,1),matrix._index.splice(k,1),d++)}matrix._ptr[j]=matrix._values.length}return matrix._size[0]=rows,matrix._size[1]=columns,matrix}function _map(matrix,minRow,maxRow,minColumn,maxColumn,callback,skipZeros){var values=[],index=[],ptr=[],eq=equalScalar,zero=0;isString(matrix._datatype)&&(eq=typed.find(equalScalar,[matrix._datatype,matrix._datatype])||equalScalar,zero=typed.convert(0,matrix._datatype));for(var invoke=function invoke(v,x,y){v=callback(v,x,y),eq(v,zero)||(values.push(v),index.push(x))},j=minColumn;j<=maxColumn;j++){ptr.push(values.length);var k0=matrix._ptr[j],k1=matrix._ptr[j+1];if(skipZeros)for(var k=k0;k<k1;k++){var i=matrix._index[k];i>=minRow&&i<=maxRow&&invoke(matrix._values[k],i-minRow,j-minColumn)}else{for(var _values={},_k=k0;_k<k1;_k++){var _i4;_values[matrix._index[_k]]=matrix._values[_k]}for(var _i5=minRow;_i5<=maxRow;_i5++){var value;invoke(_i5 in _values?_values[_i5]:0,_i5-minRow,j-minColumn)}}}return ptr.push(values.length),new SparseMatrix({values:values,index:index,ptr:ptr,size:[maxRow-minRow+1,maxColumn-minColumn+1]})}function _toArray(values,index,ptr,size,copy){var rows=size[0],columns=size[1],a=[],i,j;for(i=0;i<rows;i++)for(a[i]=[],j=0;j<columns;j++)a[i][j]=0;for(j=0;j<columns;j++)for(var k0=ptr[j],k1=ptr[j+1],k=k0;k<k1;k++)a[i=index[k]][j]=values?copy?clone(values[k]):values[k]:1;return a}return SparseMatrix.prototype=new Matrix,SparseMatrix.prototype.createSparseMatrix=function(data,datatype){return new SparseMatrix(data,datatype)},SparseMatrix.prototype.type="SparseMatrix",SparseMatrix.prototype.isSparseMatrix=!0,SparseMatrix.prototype.getDataType=function(){return getArrayDataType(this._values,typeOf)},SparseMatrix.prototype.storage=function(){return"sparse"},SparseMatrix.prototype.datatype=function(){return this._datatype},SparseMatrix.prototype.create=function(data,datatype){return new SparseMatrix(data,datatype)},SparseMatrix.prototype.density=function(){var rows=this._size[0],columns=this._size[1];return 0!==rows&&0!==columns?this._index.length/(rows*columns):0},SparseMatrix.prototype.subset=function(index,replacement,defaultValue){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return _getsubset(this,index);case 2:case 3:return _setsubset(this,index,replacement,defaultValue);default:throw new SyntaxError("Wrong number of arguments")}},SparseMatrix.prototype.get=function(index){if(!isArray(index))throw new TypeError("Array expected");if(index.length!==this._size.length)throw new DimensionError(index.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var i=index[0],j=index[1];validateIndex(i,this._size[0]),validateIndex(j,this._size[1]);var k=_getValueIndex(i,this._ptr[j],this._ptr[j+1],this._index);return k<this._ptr[j+1]&&this._index[k]===i?this._values[k]:0},SparseMatrix.prototype.set=function(index,v,defaultValue){if(!isArray(index))throw new TypeError("Array expected");if(index.length!==this._size.length)throw new DimensionError(index.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var i=index[0],j=index[1],rows=this._size[0],columns=this._size[1],eq=equalScalar,zero=0;isString(this._datatype)&&(eq=typed.find(equalScalar,[this._datatype,this._datatype])||equalScalar,zero=typed.convert(0,this._datatype)),(i>rows-1||j>columns-1)&&(_resize(this,Math.max(i+1,rows),Math.max(j+1,columns),defaultValue),rows=this._size[0],columns=this._size[1]),validateIndex(i,rows),validateIndex(j,columns);var k=_getValueIndex(i,this._ptr[j],this._ptr[j+1],this._index);return k<this._ptr[j+1]&&this._index[k]===i?eq(v,zero)?_remove(k,j,this._values,this._index,this._ptr):this._values[k]=v:_insert(k,i,j,v,this._values,this._index,this._ptr),this},SparseMatrix.prototype.resize=function(size,defaultValue,copy){if(!isCollection(size))throw new TypeError("Array or Matrix expected");var sizeArray=size.valueOf().map((function(value){return Array.isArray(value)&&1===value.length?value[0]:value})),m;if(2!==sizeArray.length)throw new Error("Only two dimensions matrix are supported");return sizeArray.forEach((function(value){if(!isNumber(value)||!isInteger(value)||value<0)throw new TypeError("Invalid size, must contain positive integers (size: "+format$2(sizeArray)+")")})),_resize(copy?this.clone():this,sizeArray[0],sizeArray[1],defaultValue)},SparseMatrix.prototype.reshape=function(size,copy){if(!isArray(size))throw new TypeError("Array expected");if(2!==size.length)throw new Error("Sparse matrices can only be reshaped in two dimensions");if(size.forEach((function(value){if(!isNumber(value)||!isInteger(value)||value<0)throw new TypeError("Invalid size, must contain positive integers (size: "+format$2(size)+")")})),this._size[0]*this._size[1]!=size[0]*size[1])throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var m=copy?this.clone():this;if(this._size[0]===size[0]&&this._size[1]===size[1])return m;for(var colIndex=[],i=0;i<m._ptr.length;i++)for(var j=0;j<m._ptr[i+1]-m._ptr[i];j++)colIndex.push(i);for(var values=m._values.slice(),rowIndex=m._index.slice(),_i=0;_i<m._index.length;_i++){var r1=rowIndex[_i],c1=colIndex[_i],flat=r1*m._size[1]+c1;colIndex[_i]=flat%size[1],rowIndex[_i]=Math.floor(flat/size[1])}m._values.length=0,m._index.length=0,m._ptr.length=size[1]+1,m._size=size.slice();for(var _i2=0;_i2<m._ptr.length;_i2++)m._ptr[_i2]=0;for(var h=0;h<values.length;h++){var _i3=rowIndex[h],_j=colIndex[h],v=values[h],k;_insert(_getValueIndex(_i3,m._ptr[_j],m._ptr[_j+1],m._index),_i3,_j,v,m._values,m._index,m._ptr)}return m},SparseMatrix.prototype.clone=function(){var m;return new SparseMatrix({values:this._values?clone(this._values):void 0,index:clone(this._index),ptr:clone(this._ptr),size:clone(this._size),datatype:this._datatype})},SparseMatrix.prototype.size=function(){return this._size.slice(0)},SparseMatrix.prototype.map=function(callback,skipZeros){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var me=this,rows,columns,invoke;return _map(this,0,this._size[0]-1,0,this._size[1]-1,(function invoke(v,i,j){return callback(v,[i,j],me)}),skipZeros)},SparseMatrix.prototype.forEach=function(callback,skipZeros){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var me=this,rows=this._size[0],columns=this._size[1],j=0;j<columns;j++){var k0=this._ptr[j],k1=this._ptr[j+1];if(skipZeros)for(var k=k0;k<k1;k++){var i=this._index[k];callback(this._values[k],[i,j],me)}else{for(var values={},_k2=k0;_k2<k1;_k2++){var _i6;values[this._index[_k2]]=this._values[_k2]}for(var _i7=0;_i7<rows;_i7++){var value;callback(_i7 in values?values[_i7]:0,[_i7,j],me)}}}},SparseMatrix.prototype.toArray=function(){return _toArray(this._values,this._index,this._ptr,this._size,!0)},SparseMatrix.prototype.valueOf=function(){return _toArray(this._values,this._index,this._ptr,this._size,!1)},SparseMatrix.prototype.format=function(options){for(var rows=this._size[0],columns=this._size[1],density=this.density(),str="Sparse Matrix ["+format$2(rows,options)+" x "+format$2(columns,options)+"] density: "+format$2(density,options)+"\n",j=0;j<columns;j++)for(var k0=this._ptr[j],k1=this._ptr[j+1],k=k0;k<k1;k++){var i;str+="\n    ("+format$2(this._index[k],options)+", "+format$2(j,options)+") ==> "+(this._values?format$2(this._values[k],options):"X")}return str},SparseMatrix.prototype.toString=function(){return format$2(this.toArray())},SparseMatrix.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},SparseMatrix.prototype.diagonal=function(k){if(k){if(isBigNumber(k)&&(k=k.toNumber()),!isNumber(k)||!isInteger(k))throw new TypeError("The parameter k must be an integer number")}else k=0;var kSuper=k>0?k:0,kSub=k<0?-k:0,rows=this._size[0],columns=this._size[1],n=Math.min(rows-kSub,columns-kSuper),values=[],index=[],ptr=[];ptr[0]=0;for(var j=kSuper;j<columns&&values.length<n;j++)for(var k0=this._ptr[j],k1=this._ptr[j+1],x=k0;x<k1;x++){var i=this._index[x];if(i===j-kSuper+kSub){values.push(this._values[x]),index[values.length-1]=i-kSub;break}}return ptr.push(values.length),new SparseMatrix({values:values,index:index,ptr:ptr,size:[n,1]})},SparseMatrix.fromJSON=function(json){return new SparseMatrix(json)},SparseMatrix.diagonal=function(size,value,k,defaultValue,datatype){if(!isArray(size))throw new TypeError("Array expected, size parameter");if(2!==size.length)throw new Error("Only two dimensions matrix are supported");if(size=size.map((function(s){if(isBigNumber(s)&&(s=s.toNumber()),!isNumber(s)||!isInteger(s)||s<1)throw new Error("Size values must be positive integers");return s})),k){if(isBigNumber(k)&&(k=k.toNumber()),!isNumber(k)||!isInteger(k))throw new TypeError("The parameter k must be an integer number")}else k=0;var eq=equalScalar,zero=0;isString(datatype)&&(eq=typed.find(equalScalar,[datatype,datatype])||equalScalar,zero=typed.convert(0,datatype));var kSuper=k>0?k:0,kSub=k<0?-k:0,rows=size[0],columns=size[1],n=Math.min(rows-kSub,columns-kSuper),_value;if(isArray(value)){if(value.length!==n)throw new Error("Invalid value array length");_value=function _value(i){return value[i]}}else if(isMatrix(value)){var ms=value.size();if(1!==ms.length||ms[0]!==n)throw new Error("Invalid matrix length");_value=function _value(i){return value.get([i])}}else _value=function _value(){return value};for(var values=[],index=[],ptr=[],j=0;j<columns;j++){ptr.push(values.length);var i=j-kSuper;if(i>=0&&i<n){var v=_value(i);eq(v,zero)||(index.push(i+kSub),values.push(v))}}return ptr.push(values.length),new SparseMatrix({values:values,index:index,ptr:ptr,size:[rows,columns]})},SparseMatrix.prototype.swapRows=function(i,j){if(!(isNumber(i)&&isInteger(i)&&isNumber(j)&&isInteger(j)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return validateIndex(i,this._size[0]),validateIndex(j,this._size[0]),SparseMatrix._swapRows(i,j,this._size[1],this._values,this._index,this._ptr),this},SparseMatrix._forEachRow=function(j,values,index,ptr,callback){for(var k0=ptr[j],k1=ptr[j+1],k=k0;k<k1;k++)callback(index[k],values[k])},SparseMatrix._swapRows=function(x,y,columns,values,index,ptr){for(var j=0;j<columns;j++){var k0=ptr[j],k1=ptr[j+1],kx=_getValueIndex(x,k0,k1,index),ky=_getValueIndex(y,k0,k1,index);if(kx<k1&&ky<k1&&index[kx]===x&&index[ky]===y){if(values){var v=values[kx];values[kx]=values[ky],values[ky]=v}}else if(kx<k1&&index[kx]===x&&(ky>=k1||index[ky]!==y)){var vx=values?values[kx]:void 0;index.splice(ky,0,y),values&&values.splice(ky,0,vx),index.splice(ky<=kx?kx+1:kx,1),values&&values.splice(ky<=kx?kx+1:kx,1)}else if(ky<k1&&index[ky]===y&&(kx>=k1||index[kx]!==x)){var vy=values?values[ky]:void 0;index.splice(kx,0,x),values&&values.splice(kx,0,vy),index.splice(kx<=ky?ky+1:ky,1),values&&values.splice(kx<=ky?ky+1:ky,1)}}},SparseMatrix}),{isClass:!0}),exports_9("createSparseMatrixClass",createSparseMatrixClass),createNumber=factory(name$i="number",dependencies$j=["typed"],(function(_ref){var typed,number=(0,_ref.typed)("number",{"":function _(){return 0},number:function number(x){return x},string:function string(x){if("NaN"===x)return NaN;var num=Number(x);if(isNaN(num))throw new SyntaxError('String "'+x+'" is no valid number');return num},BigNumber:function BigNumber(x){return x.toNumber()},Fraction:function Fraction(x){return x.valueOf()},Unit:function Unit(x){throw new Error("Second argument with valueless unit expected")},null:function _null(x){return 0},"Unit, string | Unit":function UnitStringUnit(unit,valuelessUnit){return unit.toNumber(valuelessUnit)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}});return number.fromJSON=function(json){return parseFloat(json.value)},number})),exports_9("createNumber",createNumber),createString=factory(name$j="string",dependencies$k=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$j,{"":function _(){return""},number:format,null:function _null(x){return"null"},boolean:function boolean(x){return x+""},string:function string(x){return x},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},any:function any(x){return String(x)}})})),exports_9("createString",createString),createBoolean=factory(name$k="boolean",dependencies$l=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$k,{"":function _(){return!1},boolean:function boolean(x){return x},number:function number(x){return!!x},null:function _null(x){return!1},BigNumber:function BigNumber(x){return!x.isZero()},string:function string(x){var lcase=x.toLowerCase();if("true"===lcase)return!0;if("false"===lcase)return!1;var num=Number(x);if(""!==x&&!isNaN(num))return!!num;throw new Error('Cannot convert "'+x+'" to a boolean')},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createBoolean",createBoolean),createBignumber=factory(name$l="bignumber",dependencies$m=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,BigNumber=_ref.BigNumber;return typed("bignumber",{"":function _(){return new BigNumber(0)},number:function number(x){return new BigNumber(x+"")},string:function string(x){return new BigNumber(x)},BigNumber:function BigNumber(x){return x},Fraction:function Fraction(x){return new BigNumber(x.n).div(x.d).times(x.s)},null:function _null(x){return new BigNumber(0)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createBignumber",createBignumber),createComplex=factory(name$m="complex",dependencies$n=["typed","Complex"],(function(_ref){var typed=_ref.typed,Complex=_ref.Complex;return typed("complex",{"":function _(){return Complex.ZERO},number:function number(x){return new Complex(x,0)},"number, number":function numberNumber(re,im){return new Complex(re,im)},"BigNumber, BigNumber":function BigNumberBigNumber(re,im){return new Complex(re.toNumber(),im.toNumber())},Fraction:function Fraction(x){return new Complex(x.valueOf(),0)},Complex:function Complex(x){return x.clone()},string:function string(x){return Complex(x)},null:function _null(x){return Complex(0)},Object:function Object(x){if("re"in x&&"im"in x)return new Complex(x.re,x.im);if("r"in x&&"phi"in x||"abs"in x&&"arg"in x)return new Complex(x);throw new Error("Expected object with properties (re and im) or (r and phi) or (abs and arg)")},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createComplex",createComplex),createFraction=factory(name$n="fraction",dependencies$o=["typed","Fraction"],(function(_ref){var typed=_ref.typed,Fraction=_ref.Fraction;return typed("fraction",{number:function number(x){if(!isFinite(x)||isNaN(x))throw new Error(x+" cannot be represented as a fraction");return new Fraction(x)},string:function string(x){return new Fraction(x)},"number, number":function numberNumber(numerator,denominator){return new Fraction(numerator,denominator)},null:function _null(x){return new Fraction(0)},BigNumber:function BigNumber(x){return new Fraction(x.toString())},Fraction:function Fraction(x){return x},Object:function Object(x){return new Fraction(x)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createFraction",createFraction),createMatrix=factory(name$o="matrix",dependencies$p=["typed","Matrix","DenseMatrix","SparseMatrix"],(function(_ref){var typed=_ref.typed,Matrix=_ref.Matrix,DenseMatrix=_ref.DenseMatrix,SparseMatrix=_ref.SparseMatrix;return typed(name$o,{"":function _(){return _create([])},string:function string(format){return _create([],format)},"string, string":function stringString(format,datatype){return _create([],format,datatype)},Array:function Array(data){return _create(data)},Matrix:function Matrix(data){return _create(data,data.storage())},"Array | Matrix, string":_create,"Array | Matrix, string, string":_create});function _create(data,format,datatype){if("dense"===format||"default"===format||void 0===format)return new DenseMatrix(data,datatype);if("sparse"===format)return new SparseMatrix(data,datatype);throw new TypeError("Unknown matrix type "+JSON.stringify(format)+".")}})),exports_9("createMatrix",createMatrix),createSplitUnit=factory(name$p="splitUnit",dependencies$q=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$p,{"Unit, Array":function UnitArray(unit,parts){return unit.splitUnit(parts)}})})),exports_9("createSplitUnit",createSplitUnit),createUnaryMinus=factory(name$q="unaryMinus",dependencies$r=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$q,{number:unaryMinusNumber,Complex:function Complex(x){return x.neg()},BigNumber:function BigNumber(x){return x.neg()},Fraction:function Fraction(x){return x.neg()},Unit:function Unit(x){var res=x.clone();return res.value=this(x.value),res},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createUnaryMinus",createUnaryMinus),createUnaryPlus=factory(name$r="unaryPlus",dependencies$s=["typed","config","BigNumber"],(function(_ref){var typed=_ref.typed,config=_ref.config,BigNumber=_ref.BigNumber;return typed(name$r,{number:unaryPlusNumber,Complex:function Complex(x){return x},BigNumber:function BigNumber(x){return x},Fraction:function Fraction(x){return x},Unit:function Unit(x){return x.clone()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},"boolean | string":function booleanString(x){return"BigNumber"===config.number?new BigNumber(+x):+x}})})),exports_9("createUnaryPlus",createUnaryPlus),name$s="abs",createAbs=factory("abs",dependencies$t=["typed"],(function(_ref){var typed;return(0,_ref.typed)("abs",{number:absNumber,Complex:function Complex(x){return x.abs()},BigNumber:function BigNumber(x){return x.abs()},Fraction:function Fraction(x){return x.abs()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},Unit:function Unit(x){return x.abs()}})})),exports_9("createAbs",createAbs),createApply=factory(name$t="apply",dependencies$u=["typed","isInteger"],(function(_ref){var typed=_ref.typed,isInteger=_ref.isInteger;return typed(name$t,{"Array | Matrix, number | BigNumber, function":function ArrayMatrixNumberBigNumberFunction(mat,dim,callback){if(!isInteger(dim))throw new TypeError("Integer number expected for dimension");var size=Array.isArray(mat)?arraySize(mat):mat.size();if(dim<0||dim>=size.length)throw new IndexError(dim,size.length);return isMatrix(mat)?mat.create(_apply(mat.valueOf(),dim,callback)):_apply(mat,dim,callback)}})})),exports_9("createApply",createApply),createAddScalar=factory(name$u="addScalar",dependencies$v=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$u,{"number, number":addNumber,"Complex, Complex":function ComplexComplex(x,y){return x.add(y)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.plus(y)},"Fraction, Fraction":function FractionFraction(x,y){return x.add(y)},"Unit, Unit":function UnitUnit(x,y){if(null===x.value||void 0===x.value)throw new Error("Parameter x contains a unit with undefined value");if(null===y.value||void 0===y.value)throw new Error("Parameter y contains a unit with undefined value");if(!x.equalBase(y))throw new Error("Units do not match");var res=x.clone();return res.value=this(res.value,y.value),res.fixPrefix=!1,res}})})),exports_9("createAddScalar",createAddScalar),name$v="cbrt",createCbrt=factory("cbrt",dependencies$w=["config","typed","isNegative","unaryMinus","matrix","Complex","BigNumber","Fraction"],(function(_ref){var config=_ref.config,typed=_ref.typed,isNegative=_ref.isNegative,unaryMinus=_ref.unaryMinus,matrix=_ref.matrix,Complex=_ref.Complex,BigNumber=_ref.BigNumber,Fraction=_ref.Fraction;return typed("cbrt",{number:cbrtNumber,Complex:_cbrtComplex,"Complex, boolean":_cbrtComplex,BigNumber:function BigNumber(x){return x.cbrt()},Unit:_cbrtUnit,"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}});function _cbrtComplex(x,allRoots){var arg3=x.arg()/3,abs=x.abs(),principal=new Complex(cbrtNumber(abs),0).mul(new Complex(0,arg3).exp());if(allRoots){var all=[principal,new Complex(cbrtNumber(abs),0).mul(new Complex(0,arg3+2*Math.PI/3).exp()),new Complex(cbrtNumber(abs),0).mul(new Complex(0,arg3-2*Math.PI/3).exp())];return"Array"===config.matrix?all:matrix(all)}return principal}function _cbrtUnit(x){if(x.value&&isComplex(x.value)){var result=x.clone();return result.value=1,(result=result.pow(1/3)).value=_cbrtComplex(x.value),result}var negate=isNegative(x.value),third;negate&&(x.value=unaryMinus(x.value)),third=isBigNumber(x.value)?new BigNumber(1).div(3):isFraction(x.value)?new Fraction(1,3):1/3;var _result=x.pow(third);return negate&&(_result.value=unaryMinus(_result.value)),_result}})),exports_9("createCbrt",createCbrt),name$w="ceil",createCeil=factory("ceil",dependencies$x=["typed","config","round"],(function(_ref){var typed=_ref.typed,config=_ref.config,round=_ref.round;return typed("ceil",{number:function number(x){return nearlyEqual(x,round(x),config.epsilon)?round(x):ceilNumber(x)},Complex:function Complex(x){return x.ceil()},BigNumber:function BigNumber(x){return nearlyEqual$1(x,round(x),config.epsilon)?round(x):x.ceil()},Fraction:function Fraction(x){return x.ceil()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createCeil",createCeil),name$x="cube",createCube=factory("cube",dependencies$y=["typed"],(function(_ref){var typed;return(0,_ref.typed)("cube",{number:cubeNumber,Complex:function Complex(x){return x.mul(x).mul(x)},BigNumber:function BigNumber(x){return x.times(x).times(x)},Fraction:function Fraction(x){return x.pow(3)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},Unit:function Unit(x){return x.pow(3)}})})),exports_9("createCube",createCube),name$y="exp",createExp=factory("exp",dependencies$z=["typed"],(function(_ref){var typed;return(0,_ref.typed)("exp",{number:expNumber,Complex:function Complex(x){return x.exp()},BigNumber:function BigNumber(x){return x.exp()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createExp",createExp),createExpm1=factory(name$z="expm1",dependencies$A=["typed","Complex"],(function(_ref){var typed=_ref.typed,_Complex=_ref.Complex;return typed(name$z,{number:expm1Number,Complex:function Complex(x){var r=Math.exp(x.re);return new _Complex(r*Math.cos(x.im)-1,r*Math.sin(x.im))},BigNumber:function BigNumber(x){return x.exp().minus(1)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createExpm1",createExpm1),name$A="fix",createFix=factory("fix",dependencies$B=["typed","Complex","ceil","floor"],(function(_ref){var typed=_ref.typed,_Complex=_ref.Complex,ceil=_ref.ceil,floor=_ref.floor;return typed("fix",{number:function number(x){return x>0?floor(x):ceil(x)},Complex:function Complex(x){return new _Complex(x.re>0?Math.floor(x.re):Math.ceil(x.re),x.im>0?Math.floor(x.im):Math.ceil(x.im))},BigNumber:function BigNumber(x){return x.isNegative()?ceil(x):floor(x)},Fraction:function Fraction(x){return x.s<0?x.ceil():x.floor()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createFix",createFix),createFloor=factory(name$B="floor",dependencies$C=["typed","config","round"],(function(_ref){var typed=_ref.typed,config=_ref.config,round=_ref.round;return typed("floor",{number:function number(x){return nearlyEqual(x,round(x),config.epsilon)?round(x):Math.floor(x)},Complex:function Complex(x){return x.floor()},BigNumber:function BigNumber(x){return nearlyEqual$1(x,round(x),config.epsilon)?round(x):x.floor()},Fraction:function Fraction(x){return x.floor()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createFloor",createFloor),createAlgorithm01=factory(name$C="algorithm01",dependencies$D=["typed"],(function(_ref){var typed=_ref.typed;return function algorithm1(denseMatrix,sparseMatrix,callback,inverse){var adata=denseMatrix._data,asize=denseMatrix._size,adt=denseMatrix._datatype,bvalues=sparseMatrix._values,bindex=sparseMatrix._index,bptr=sparseMatrix._ptr,bsize=sparseMatrix._size,bdt=sparseMatrix._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");if(!bvalues)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var rows=asize[0],columns=asize[1],dt="string"==typeof adt&&adt===bdt?adt:void 0,cf=dt?typed.find(callback,[dt,dt]):callback,i,j,cdata=[];for(i=0;i<rows;i++)cdata[i]=[];var x=[],w=[];for(j=0;j<columns;j++){for(var mark=j+1,k0=bptr[j],k1=bptr[j+1],k=k0;k<k1;k++)x[i=bindex[k]]=inverse?cf(bvalues[k],adata[i][j]):cf(adata[i][j],bvalues[k]),w[i]=mark;for(i=0;i<rows;i++)w[i]===mark?cdata[i][j]=x[i]:cdata[i][j]=adata[i][j]}return denseMatrix.createDenseMatrix({data:cdata,size:[rows,columns],datatype:dt})}})),createAlgorithm04=factory(name$D="algorithm04",dependencies$E=["typed","equalScalar"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar;return function algorithm04(a,b,callback){var avalues=a._values,aindex=a._index,aptr=a._ptr,asize=a._size,adt=a._datatype,bvalues=b._values,bindex=b._index,bptr=b._ptr,bsize=b._size,bdt=b._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");var rows=asize[0],columns=asize[1],dt,eq=equalScalar,zero=0,cf=callback;"string"==typeof adt&&adt===bdt&&(dt=adt,eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt),cf=typed.find(callback,[dt,dt]));var cvalues=avalues&&bvalues?[]:void 0,cindex=[],cptr=[],xa=avalues&&bvalues?[]:void 0,xb=avalues&&bvalues?[]:void 0,wa=[],wb=[],i,j,k,k0,k1;for(j=0;j<columns;j++){cptr[j]=cindex.length;var mark=j+1;for(k0=aptr[j],k1=aptr[j+1],k=k0;k<k1;k++)i=aindex[k],cindex.push(i),wa[i]=mark,xa&&(xa[i]=avalues[k]);for(k0=bptr[j],k1=bptr[j+1],k=k0;k<k1;k++)if(wa[i=bindex[k]]===mark){if(xa){var v=cf(xa[i],bvalues[k]);eq(v,zero)?wa[i]=null:xa[i]=v}}else cindex.push(i),wb[i]=mark,xb&&(xb[i]=bvalues[k]);if(xa&&xb)for(k=cptr[j];k<cindex.length;)wa[i=cindex[k]]===mark?(cvalues[k]=xa[i],k++):wb[i]===mark?(cvalues[k]=xb[i],k++):cindex.splice(k,1)}return cptr[columns]=cindex.length,a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[rows,columns],datatype:dt})}})),createAlgorithm10=factory(name$E="algorithm10",dependencies$F=["typed","DenseMatrix"],(function(_ref){var typed=_ref.typed,DenseMatrix=_ref.DenseMatrix;return function algorithm10(s,b,callback,inverse){var avalues=s._values,aindex=s._index,aptr=s._ptr,asize=s._size,adt=s._datatype;if(!avalues)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var rows=asize[0],columns=asize[1],dt,cf=callback;"string"==typeof adt&&(dt=adt,b=typed.convert(b,dt),cf=typed.find(callback,[dt,dt]));for(var cdata=[],x=[],w=[],j=0;j<columns;j++){for(var mark=j+1,k0=aptr[j],k1=aptr[j+1],k=k0;k<k1;k++){var r=aindex[k];x[r]=avalues[k],w[r]=mark}for(var i=0;i<rows;i++)0===j&&(cdata[i]=[]),w[i]===mark?cdata[i][j]=inverse?cf(b,x[i]):cf(x[i],b):cdata[i][j]=b}return new DenseMatrix({data:cdata,size:[rows,columns],datatype:dt})}})),createAlgorithm13=factory(name$F="algorithm13",dependencies$G=["typed"],(function(_ref){var typed=_ref.typed;return function algorithm13(a,b,callback){var adata=a._data,asize=a._size,adt=a._datatype,bdata=b._data,bsize=b._size,bdt=b._datatype,csize=[],dt;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);for(var s=0;s<asize.length;s++){if(asize[s]!==bsize[s])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");csize[s]=asize[s]}var cf=callback;"string"==typeof adt&&adt===bdt&&(dt=adt,cf=typed.find(callback,[dt,dt]));var cdata=csize.length>0?_iterate(cf,0,csize,csize[0],adata,bdata):[];return a.createDenseMatrix({data:cdata,size:csize,datatype:dt})};function _iterate(f,level,s,n,av,bv){var cv=[];if(level===s.length-1)for(var i=0;i<n;i++)cv[i]=f(av[i],bv[i]);else for(var j=0;j<n;j++)cv[j]=_iterate(f,level+1,s,s[level+1],av[j],bv[j]);return cv}})),createAlgorithm14=factory(name$G="algorithm14",dependencies$H=["typed"],(function(_ref){var typed=_ref.typed;return function algorithm14(a,b,callback,inverse){var adata=a._data,asize=a._size,adt=a._datatype,dt,cf=callback;"string"==typeof adt&&(dt=adt,b=typed.convert(b,dt),cf=typed.find(callback,[dt,dt]));var cdata=asize.length>0?_iterate(cf,0,asize,asize[0],adata,b,inverse):[];return a.createDenseMatrix({data:cdata,size:clone(asize),datatype:dt})};function _iterate(f,level,s,n,av,bv,inverse){var cv=[];if(level===s.length-1)for(var i=0;i<n;i++)cv[i]=inverse?f(bv,av[i]):f(av[i],bv);else for(var j=0;j<n;j++)cv[j]=_iterate(f,level+1,s,s[level+1],av[j],bv,inverse);return cv}})),name$H="gcd",createGcd=factory("gcd",dependencies$I=["typed","matrix","equalScalar","BigNumber","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,BigNumber=_ref.BigNumber,DenseMatrix=_ref.DenseMatrix,algorithm01=createAlgorithm01({typed:typed}),algorithm04=createAlgorithm04({typed:typed,equalScalar:equalScalar}),algorithm10=createAlgorithm10({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("gcd",{"number, number":gcdNumber,"BigNumber, BigNumber":_gcdBigNumber,"Fraction, Fraction":function FractionFraction(x,y){return x.gcd(y)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm04(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm01(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm01(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, number | BigNumber":function SparseMatrixNumberBigNumber(x,y){return algorithm10(x,y,this,!1)},"DenseMatrix, number | BigNumber":function DenseMatrixNumberBigNumber(x,y){return algorithm14(x,y,this,!1)},"number | BigNumber, SparseMatrix":function numberBigNumberSparseMatrix(x,y){return algorithm10(y,x,this,!0)},"number | BigNumber, DenseMatrix":function numberBigNumberDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, number | BigNumber":function ArrayNumberBigNumber(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"number | BigNumber, Array":function numberBigNumberArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function ArrayMatrixNumberBigNumberArrayMatrixNumberBigNumberArrayMatrixNumberBigNumber(a,b,args){for(var res=this(a,b),i=0;i<args.length;i++)res=this(res,args[i]);return res}});function _gcdBigNumber(a,b){if(!a.isInt()||!b.isInt())throw new Error("Parameters in function gcd must be integer numbers");for(var zero=new BigNumber(0);!b.isZero();){var r=a.mod(b);a=b,b=r}return a.lt(zero)?a.neg():a}})),exports_9("createGcd",createGcd),createAlgorithm02=factory(name$I="algorithm02",dependencies$J=["typed","equalScalar"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar;return function algorithm02(denseMatrix,sparseMatrix,callback,inverse){var adata=denseMatrix._data,asize=denseMatrix._size,adt=denseMatrix._datatype,bvalues=sparseMatrix._values,bindex=sparseMatrix._index,bptr=sparseMatrix._ptr,bsize=sparseMatrix._size,bdt=sparseMatrix._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");if(!bvalues)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var rows=asize[0],columns=asize[1],dt,eq=equalScalar,zero=0,cf=callback;"string"==typeof adt&&adt===bdt&&(dt=adt,eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt),cf=typed.find(callback,[dt,dt]));for(var cvalues=[],cindex=[],cptr=[],j=0;j<columns;j++){cptr[j]=cindex.length;for(var k0=bptr[j],k1=bptr[j+1],k=k0;k<k1;k++){var i=bindex[k],cij=inverse?cf(bvalues[k],adata[i][j]):cf(adata[i][j],bvalues[k]);eq(cij,zero)||(cindex.push(i),cvalues.push(cij))}}return cptr[columns]=cindex.length,sparseMatrix.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[rows,columns],datatype:dt})}})),createAlgorithm06=factory(name$J="algorithm06",dependencies$K=["typed","equalScalar"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar;return function algorithm06(a,b,callback){var avalues=a._values,asize=a._size,adt=a._datatype,bvalues=b._values,bsize=b._size,bdt=b._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");var rows=asize[0],columns=asize[1],dt,eq=equalScalar,zero=0,cf=callback;"string"==typeof adt&&adt===bdt&&(dt=adt,eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt),cf=typed.find(callback,[dt,dt]));for(var cvalues=avalues&&bvalues?[]:void 0,cindex=[],cptr=[],x=cvalues?[]:void 0,w=[],u=[],j=0;j<columns;j++){cptr[j]=cindex.length;var mark=j+1;if(scatter(a,j,w,x,u,mark,cindex,cf),scatter(b,j,w,x,u,mark,cindex,cf),x)for(var k=cptr[j];k<cindex.length;){var i=cindex[k];if(u[i]===mark){var v=x[i];eq(v,zero)?cindex.splice(k,1):(cvalues.push(v),k++)}else cindex.splice(k,1)}else for(var p=cptr[j];p<cindex.length;){var r;u[cindex[p]]!==mark?cindex.splice(p,1):p++}}return cptr[columns]=cindex.length,a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[rows,columns],datatype:dt})}})),createAlgorithm11=factory(name$K="algorithm11",dependencies$L=["typed","equalScalar"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar;return function algorithm11(s,b,callback,inverse){var avalues=s._values,aindex=s._index,aptr=s._ptr,asize=s._size,adt=s._datatype;if(!avalues)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var rows=asize[0],columns=asize[1],dt,eq=equalScalar,zero=0,cf=callback;"string"==typeof adt&&(dt=adt,eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt),b=typed.convert(b,dt),cf=typed.find(callback,[dt,dt]));for(var cvalues=[],cindex=[],cptr=[],j=0;j<columns;j++){cptr[j]=cindex.length;for(var k0=aptr[j],k1=aptr[j+1],k=k0;k<k1;k++){var i=aindex[k],v=inverse?cf(b,avalues[k]):cf(avalues[k],b);eq(v,zero)||(cindex.push(i),cvalues.push(v))}}return cptr[columns]=cindex.length,s.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[rows,columns],datatype:dt})}})),name$L="lcm",createLcm=factory("lcm",dependencies$M=["typed","matrix","equalScalar"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm06=createAlgorithm06({typed:typed,equalScalar:equalScalar}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("lcm",{"number, number":lcmNumber,"BigNumber, BigNumber":_lcmBigNumber,"Fraction, Fraction":function FractionFraction(x,y){return x.lcm(y)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm06(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm02(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, number | BigNumber":function SparseMatrixNumberBigNumber(x,y){return algorithm11(x,y,this,!1)},"DenseMatrix, number | BigNumber":function DenseMatrixNumberBigNumber(x,y){return algorithm14(x,y,this,!1)},"number | BigNumber, SparseMatrix":function numberBigNumberSparseMatrix(x,y){return algorithm11(y,x,this,!0)},"number | BigNumber, DenseMatrix":function numberBigNumberDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, number | BigNumber":function ArrayNumberBigNumber(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"number | BigNumber, Array":function numberBigNumberArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function ArrayMatrixNumberBigNumberArrayMatrixNumberBigNumberArrayMatrixNumberBigNumber(a,b,args){for(var res=this(a,b),i=0;i<args.length;i++)res=this(res,args[i]);return res}});function _lcmBigNumber(a,b){if(!a.isInt()||!b.isInt())throw new Error("Parameters in function lcm must be integer numbers");if(a.isZero())return a;if(b.isZero())return b;for(var prod=a.times(b);!b.isZero();){var t=b;b=a.mod(t),a=t}return prod.div(a).abs()}})),exports_9("createLcm",createLcm),createLog10=factory(name$M="log10",dependencies$N=["typed","config","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,_Complex=_ref.Complex;return typed(name$M,{number:function number(x){return x>=0||config.predictable?log10Number(x):new _Complex(x,0).log().div(Math.LN10)},Complex:function Complex(x){return new _Complex(x).log().div(Math.LN10)},BigNumber:function BigNumber(x){return!x.isNegative()||config.predictable?x.log():new _Complex(x.toNumber(),0).log().div(Math.LN10)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createLog10",createLog10),name$N="log2",createLog2=factory("log2",dependencies$O=["typed","config","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex;return typed("log2",{number:function number(x){return x>=0||config.predictable?log2Number(x):_log2Complex(new Complex(x,0))},Complex:_log2Complex,BigNumber:function BigNumber(x){return!x.isNegative()||config.predictable?x.log(2):_log2Complex(new Complex(x.toNumber(),0))},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}});function _log2Complex(x){var newX=Math.sqrt(x.re*x.re+x.im*x.im);return new Complex(Math.log2?Math.log2(newX):Math.log(newX)/Math.LN2,Math.atan2(x.im,x.re)/Math.LN2)}})),exports_9("createLog2",createLog2),createAlgorithm03=factory(name$O="algorithm03",dependencies$P=["typed"],(function(_ref){var typed=_ref.typed;return function algorithm03(denseMatrix,sparseMatrix,callback,inverse){var adata=denseMatrix._data,asize=denseMatrix._size,adt=denseMatrix._datatype,bvalues=sparseMatrix._values,bindex=sparseMatrix._index,bptr=sparseMatrix._ptr,bsize=sparseMatrix._size,bdt=sparseMatrix._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");if(!bvalues)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var rows=asize[0],columns=asize[1],dt,zero=0,cf=callback;"string"==typeof adt&&adt===bdt&&(dt=adt,zero=typed.convert(0,dt),cf=typed.find(callback,[dt,dt]));for(var cdata=[],z=0;z<rows;z++)cdata[z]=[];for(var x=[],w=[],j=0;j<columns;j++){for(var mark=j+1,k0=bptr[j],k1=bptr[j+1],k=k0;k<k1;k++){var i=bindex[k];x[i]=inverse?cf(bvalues[k],adata[i][j]):cf(adata[i][j],bvalues[k]),w[i]=mark}for(var y=0;y<rows;y++)w[y]===mark?cdata[y][j]=x[y]:cdata[y][j]=inverse?cf(zero,adata[y][j]):cf(adata[y][j],zero)}return denseMatrix.createDenseMatrix({data:cdata,size:[rows,columns],datatype:dt})}})),createAlgorithm05=factory(name$P="algorithm05",dependencies$Q=["typed","equalScalar"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar;return function algorithm05(a,b,callback){var avalues=a._values,aindex=a._index,aptr=a._ptr,asize=a._size,adt=a._datatype,bvalues=b._values,bindex=b._index,bptr=b._ptr,bsize=b._size,bdt=b._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");var rows=asize[0],columns=asize[1],dt,eq=equalScalar,zero=0,cf=callback;"string"==typeof adt&&adt===bdt&&(dt=adt,eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt),cf=typed.find(callback,[dt,dt]));var cvalues=avalues&&bvalues?[]:void 0,cindex=[],cptr=[],xa=cvalues?[]:void 0,xb=cvalues?[]:void 0,wa=[],wb=[],i,j,k,k1;for(j=0;j<columns;j++){cptr[j]=cindex.length;var mark=j+1;for(k=aptr[j],k1=aptr[j+1];k<k1;k++)i=aindex[k],cindex.push(i),wa[i]=mark,xa&&(xa[i]=avalues[k]);for(k=bptr[j],k1=bptr[j+1];k<k1;k++)wa[i=bindex[k]]!==mark&&cindex.push(i),wb[i]=mark,xb&&(xb[i]=bvalues[k]);if(cvalues)for(k=cptr[j];k<cindex.length;){var wai=wa[i=cindex[k]],wbi=wb[i];if(wai===mark||wbi===mark){var va,vb,vc=cf(wai===mark?xa[i]:zero,wbi===mark?xb[i]:zero);eq(vc,zero)?cindex.splice(k,1):(cvalues.push(vc),k++)}}}return cptr[columns]=cindex.length,a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[rows,columns],datatype:dt})}})),createAlgorithm12=factory(name$Q="algorithm12",dependencies$R=["typed","DenseMatrix"],(function(_ref){var typed=_ref.typed,DenseMatrix=_ref.DenseMatrix;return function algorithm12(s,b,callback,inverse){var avalues=s._values,aindex=s._index,aptr=s._ptr,asize=s._size,adt=s._datatype;if(!avalues)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var rows=asize[0],columns=asize[1],dt,cf=callback;"string"==typeof adt&&(dt=adt,b=typed.convert(b,dt),cf=typed.find(callback,[dt,dt]));for(var cdata=[],x=[],w=[],j=0;j<columns;j++){for(var mark=j+1,k0=aptr[j],k1=aptr[j+1],k=k0;k<k1;k++){var r=aindex[k];x[r]=avalues[k],w[r]=mark}for(var i=0;i<rows;i++)0===j&&(cdata[i]=[]),w[i]===mark?cdata[i][j]=inverse?cf(b,x[i]):cf(x[i],b):cdata[i][j]=inverse?cf(b,0):cf(0,b)}return new DenseMatrix({data:cdata,size:[rows,columns],datatype:dt})}})),name$R="mod",createMod=factory("mod",dependencies$S=["typed","matrix","equalScalar","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm03=createAlgorithm03({typed:typed}),algorithm05=createAlgorithm05({typed:typed,equalScalar:equalScalar}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("mod",{"number, number":modNumber,"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return y.isZero()?x:x.mod(y)},"Fraction, Fraction":function FractionFraction(x,y){return x.mod(y)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm05(x,y,this,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm11(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createMod",createMod),createMultiplyScalar=factory(name$S="multiplyScalar",dependencies$T=["typed"],(function(_ref){var typed;return(0,_ref.typed)("multiplyScalar",{"number, number":multiplyNumber,"Complex, Complex":function ComplexComplex(x,y){return x.mul(y)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.times(y)},"Fraction, Fraction":function FractionFraction(x,y){return x.mul(y)},"number | Fraction | BigNumber | Complex, Unit":function numberFractionBigNumberComplexUnit(x,y){var res=y.clone();return res.value=null===res.value?res._normalize(x):this(res.value,x),res},"Unit, number | Fraction | BigNumber | Complex":function UnitNumberFractionBigNumberComplex(x,y){var res=x.clone();return res.value=null===res.value?res._normalize(y):this(res.value,y),res},"Unit, Unit":function UnitUnit(x,y){return x.multiply(y)}})})),exports_9("createMultiplyScalar",createMultiplyScalar),createMultiply=factory(name$T="multiply",dependencies$U=["typed","matrix","addScalar","multiplyScalar","equalScalar","dot"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,addScalar=_ref.addScalar,multiplyScalar=_ref.multiplyScalar,equalScalar=_ref.equalScalar,dot=_ref.dot,algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm14=createAlgorithm14({typed:typed});function _validateMatrixDimensions(size1,size2){switch(size1.length){case 1:switch(size2.length){case 1:if(size1[0]!==size2[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(size1[0]!==size2[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+size1[0]+") must match Matrix rows ("+size2[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+size2.length+" dimensions)")}break;case 2:switch(size2.length){case 1:if(size1[1]!==size2[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+size1[1]+") must match Vector length ("+size2[0]+")");break;case 2:if(size1[1]!==size2[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+size1[1]+") must match Matrix B rows ("+size2[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+size2.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+size1.length+" dimensions)")}}function _multiplyVectorVector(a,b,n){if(0===n)throw new Error("Cannot multiply two empty vectors");return dot(a,b)}function _multiplyVectorMatrix(a,b){if("dense"!==b.storage())throw new Error("Support for SparseMatrix not implemented");return _multiplyVectorDenseMatrix(a,b)}function _multiplyVectorDenseMatrix(a,b){var adata=a._data,asize=a._size,adt=a._datatype,bdata=b._data,bsize=b._size,bdt=b._datatype,alength=asize[0],bcolumns=bsize[1],dt,af=addScalar,mf=multiplyScalar;adt&&bdt&&adt===bdt&&"string"==typeof adt&&(dt=adt,af=typed.find(addScalar,[dt,dt]),mf=typed.find(multiplyScalar,[dt,dt]));for(var c=[],j=0;j<bcolumns;j++){for(var sum=mf(adata[0],bdata[0][j]),i=1;i<alength;i++)sum=af(sum,mf(adata[i],bdata[i][j]));c[j]=sum}return a.createDenseMatrix({data:c,size:[bcolumns],datatype:dt})}var _multiplyMatrixVector=typed("_multiplyMatrixVector",{"DenseMatrix, any":_multiplyDenseMatrixVector,"SparseMatrix, any":_multiplySparseMatrixVector}),_multiplyMatrixMatrix=typed("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":_multiplyDenseMatrixDenseMatrix,"DenseMatrix, SparseMatrix":_multiplyDenseMatrixSparseMatrix,"SparseMatrix, DenseMatrix":_multiplySparseMatrixDenseMatrix,"SparseMatrix, SparseMatrix":_multiplySparseMatrixSparseMatrix});function _multiplyDenseMatrixVector(a,b){var adata=a._data,asize=a._size,adt=a._datatype,bdata=b._data,bdt=b._datatype,arows=asize[0],acolumns=asize[1],dt,af=addScalar,mf=multiplyScalar;adt&&bdt&&adt===bdt&&"string"==typeof adt&&(dt=adt,af=typed.find(addScalar,[dt,dt]),mf=typed.find(multiplyScalar,[dt,dt]));for(var c=[],i=0;i<arows;i++){for(var row=adata[i],sum=mf(row[0],bdata[0]),j=1;j<acolumns;j++)sum=af(sum,mf(row[j],bdata[j]));c[i]=sum}return a.createDenseMatrix({data:c,size:[arows],datatype:dt})}function _multiplyDenseMatrixDenseMatrix(a,b){var adata=a._data,asize=a._size,adt=a._datatype,bdata=b._data,bsize=b._size,bdt=b._datatype,arows=asize[0],acolumns=asize[1],bcolumns=bsize[1],dt,af=addScalar,mf=multiplyScalar;adt&&bdt&&adt===bdt&&"string"==typeof adt&&(dt=adt,af=typed.find(addScalar,[dt,dt]),mf=typed.find(multiplyScalar,[dt,dt]));for(var c=[],i=0;i<arows;i++){var row=adata[i];c[i]=[];for(var j=0;j<bcolumns;j++){for(var sum=mf(row[0],bdata[0][j]),x=1;x<acolumns;x++)sum=af(sum,mf(row[x],bdata[x][j]));c[i][j]=sum}}return a.createDenseMatrix({data:c,size:[arows,bcolumns],datatype:dt})}function _multiplyDenseMatrixSparseMatrix(a,b){var adata=a._data,asize=a._size,adt=a._datatype,bvalues=b._values,bindex=b._index,bptr=b._ptr,bsize=b._size,bdt=b._datatype;if(!bvalues)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var arows=asize[0],bcolumns=bsize[1],dt,af=addScalar,mf=multiplyScalar,eq=equalScalar,zero=0;adt&&bdt&&adt===bdt&&"string"==typeof adt&&(dt=adt,af=typed.find(addScalar,[dt,dt]),mf=typed.find(multiplyScalar,[dt,dt]),eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt));for(var cvalues=[],cindex=[],cptr=[],c=b.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[arows,bcolumns],datatype:dt}),jb=0;jb<bcolumns;jb++){cptr[jb]=cindex.length;var kb0=bptr[jb],kb1=bptr[jb+1];if(kb1>kb0)for(var last=0,i=0;i<arows;i++){for(var mark=i+1,cij=void 0,kb=kb0;kb<kb1;kb++){var ib=bindex[kb];last!==mark?(cij=mf(adata[i][ib],bvalues[kb]),last=mark):cij=af(cij,mf(adata[i][ib],bvalues[kb]))}last!==mark||eq(cij,zero)||(cindex.push(i),cvalues.push(cij))}}return cptr[bcolumns]=cindex.length,c}function _multiplySparseMatrixVector(a,b){var avalues=a._values,aindex=a._index,aptr=a._ptr,adt=a._datatype;if(!avalues)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var bdata=b._data,bdt=b._datatype,arows=a._size[0],brows=b._size[0],cvalues=[],cindex=[],cptr=[],dt,af=addScalar,mf=multiplyScalar,eq=equalScalar,zero=0;adt&&bdt&&adt===bdt&&"string"==typeof adt&&(dt=adt,af=typed.find(addScalar,[dt,dt]),mf=typed.find(multiplyScalar,[dt,dt]),eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt));var x=[],w=[];cptr[0]=0;for(var ib=0;ib<brows;ib++){var vbi=bdata[ib];if(!eq(vbi,zero))for(var ka0=aptr[ib],ka1=aptr[ib+1],ka=ka0;ka<ka1;ka++){var ia=aindex[ka];w[ia]?x[ia]=af(x[ia],mf(vbi,avalues[ka])):(w[ia]=!0,cindex.push(ia),x[ia]=mf(vbi,avalues[ka]))}}for(var p1=cindex.length,p=0;p<p1;p++){var ic=cindex[p];cvalues[p]=x[ic]}return cptr[1]=cindex.length,a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[arows,1],datatype:dt})}function _multiplySparseMatrixDenseMatrix(a,b){var avalues=a._values,aindex=a._index,aptr=a._ptr,adt=a._datatype;if(!avalues)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var bdata=b._data,bdt=b._datatype,arows=a._size[0],brows=b._size[0],bcolumns=b._size[1],dt,af=addScalar,mf=multiplyScalar,eq=equalScalar,zero=0;adt&&bdt&&adt===bdt&&"string"==typeof adt&&(dt=adt,af=typed.find(addScalar,[dt,dt]),mf=typed.find(multiplyScalar,[dt,dt]),eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt));for(var cvalues=[],cindex=[],cptr=[],c=a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[arows,bcolumns],datatype:dt}),x=[],w=[],jb=0;jb<bcolumns;jb++){cptr[jb]=cindex.length;for(var mark=jb+1,ib=0;ib<brows;ib++){var vbij=bdata[ib][jb];if(!eq(vbij,zero))for(var ka0=aptr[ib],ka1=aptr[ib+1],ka=ka0;ka<ka1;ka++){var ia=aindex[ka];w[ia]!==mark?(w[ia]=mark,cindex.push(ia),x[ia]=mf(vbij,avalues[ka])):x[ia]=af(x[ia],mf(vbij,avalues[ka]))}}for(var p0=cptr[jb],p1=cindex.length,p=p0;p<p1;p++){var ic=cindex[p];cvalues[p]=x[ic]}}return cptr[bcolumns]=cindex.length,c}function _multiplySparseMatrixSparseMatrix(a,b){var avalues=a._values,aindex=a._index,aptr=a._ptr,adt=a._datatype,bvalues=b._values,bindex=b._index,bptr=b._ptr,bdt=b._datatype,arows=a._size[0],bcolumns=b._size[1],values=avalues&&bvalues,dt,af=addScalar,mf=multiplyScalar;adt&&bdt&&adt===bdt&&"string"==typeof adt&&(dt=adt,af=typed.find(addScalar,[dt,dt]),mf=typed.find(multiplyScalar,[dt,dt]));for(var cvalues=values?[]:void 0,cindex=[],cptr=[],c=a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[arows,bcolumns],datatype:dt}),x=values?[]:void 0,w=[],ka,ka0,ka1,kb,kb0,kb1,ia,ib,jb=0;jb<bcolumns;jb++){cptr[jb]=cindex.length;var mark=jb+1;for(kb0=bptr[jb],kb1=bptr[jb+1],kb=kb0;kb<kb1;kb++)if(ib=bindex[kb],values)for(ka0=aptr[ib],ka1=aptr[ib+1],ka=ka0;ka<ka1;ka++)w[ia=aindex[ka]]!==mark?(w[ia]=mark,cindex.push(ia),x[ia]=mf(bvalues[kb],avalues[ka])):x[ia]=af(x[ia],mf(bvalues[kb],avalues[ka]));else for(ka0=aptr[ib],ka1=aptr[ib+1],ka=ka0;ka<ka1;ka++)w[ia=aindex[ka]]!==mark&&(w[ia]=mark,cindex.push(ia));if(values)for(var p0=cptr[jb],p1=cindex.length,p=p0;p<p1;p++){var ic=cindex[p];cvalues[p]=x[ic]}}return cptr[bcolumns]=cindex.length,c}return typed(name$T,extend({"Array, Array":function ArrayArray(x,y){_validateMatrixDimensions(arraySize(x),arraySize(y));var m=this(matrix(x),matrix(y));return isMatrix(m)?m.valueOf():m},"Matrix, Matrix":function MatrixMatrix(x,y){var xsize=x.size(),ysize=y.size();return _validateMatrixDimensions(xsize,ysize),1===xsize.length?1===ysize.length?_multiplyVectorVector(x,y,xsize[0]):_multiplyVectorMatrix(x,y):1===ysize.length?_multiplyMatrixVector(x,y):_multiplyMatrixMatrix(x,y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x,y.storage()),y)},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm11(x,y,multiplyScalar,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,multiplyScalar,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm11(y,x,multiplyScalar,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,multiplyScalar,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,multiplyScalar,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,multiplyScalar,!0).valueOf()},"any, any":multiplyScalar,"any, any, ...any":function anyAnyAny(x,y,rest){for(var result=this(x,y),i=0;i<rest.length;i++)result=this(result,rest[i]);return result}},multiplyScalar.signatures))})),exports_9("createMultiply",createMultiply),createNthRoot=factory(name$U="nthRoot",dependencies$V=["typed","matrix","equalScalar","BigNumber"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,_BigNumber=_ref.BigNumber,algorithm01=createAlgorithm01({typed:typed}),algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm06=createAlgorithm06({typed:typed,equalScalar:equalScalar}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed}),complexErr="Complex number not supported in function nthRoot. Use nthRoots instead.";return typed(name$U,{number:function number(x){return nthRootNumber(x,2)},"number, number":nthRootNumber,BigNumber:function BigNumber(x){return _bigNthRoot(x,new _BigNumber(2))},Complex:function Complex(x){throw new Error(complexErr)},"Complex, number":function ComplexNumber(x,y){throw new Error(complexErr)},"BigNumber, BigNumber":_bigNthRoot,"Array | Matrix":function ArrayMatrix(x){return this(x,2)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){if(1===y.density())return algorithm06(x,y,this);throw new Error("Root must be non-zero")},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){if(1===y.density())return algorithm01(x,y,this,!1);throw new Error("Root must be non-zero")},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, number | BigNumber":function SparseMatrixNumberBigNumber(x,y){return algorithm11(x,y,this,!1)},"DenseMatrix, number | BigNumber":function DenseMatrixNumberBigNumber(x,y){return algorithm14(x,y,this,!1)},"number | BigNumber, SparseMatrix":function numberBigNumberSparseMatrix(x,y){if(1===y.density())return algorithm11(y,x,this,!0);throw new Error("Root must be non-zero")},"number | BigNumber, DenseMatrix":function numberBigNumberDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, number | BigNumber":function ArrayNumberBigNumber(x,y){return this(matrix(x),y).valueOf()},"number | BigNumber, Array":function numberBigNumberArray(x,y){return this(x,matrix(y)).valueOf()}});function _bigNthRoot(a,root){var precision=_BigNumber.precision,Big=_BigNumber.clone({precision:precision+2}),zero=new _BigNumber(0),one=new Big(1),inv=root.isNegative();if(inv&&(root=root.neg()),root.isZero())throw new Error("Root must be non-zero");if(a.isNegative()&&!root.abs().mod(2).equals(1))throw new Error("Root must be odd when a is negative.");if(a.isZero())return inv?new Big(1/0):0;if(!a.isFinite())return inv?zero:a;var x=a.abs().pow(one.div(root));return x=a.isNeg()?x.neg():x,new _BigNumber((inv?one.div(x):x).toPrecision(precision))}})),exports_9("createNthRoot",createNthRoot),name$V="sign",createSign=factory("sign",dependencies$W=["typed","BigNumber","Fraction","complex"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber,complex=_ref.complex,_Fraction=_ref.Fraction;return typed("sign",{number:signNumber,Complex:function Complex(x){return 0===x.im?complex(signNumber(x.re)):x.sign()},BigNumber:function BigNumber(x){return new _BigNumber(x.cmp(0))},Fraction:function Fraction(x){return new _Fraction(x.s,1)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},Unit:function Unit(x){return this(x.value)}})})),exports_9("createSign",createSign),name$W="sqrt",createSqrt=factory("sqrt",dependencies$X=["config","typed","Complex"],(function(_ref){var config=_ref.config,typed=_ref.typed,Complex=_ref.Complex;return typed("sqrt",{number:_sqrtNumber,Complex:function Complex(x){return x.sqrt()},BigNumber:function BigNumber(x){return!x.isNegative()||config.predictable?x.sqrt():_sqrtNumber(x.toNumber())},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},Unit:function Unit(x){return x.pow(.5)}});function _sqrtNumber(x){return isNaN(x)?NaN:x>=0||config.predictable?Math.sqrt(x):new Complex(x,0).sqrt()}})),exports_9("createSqrt",createSqrt),createSquare=factory(name$X="square",dependencies$Y=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$X,{number:squareNumber,Complex:function Complex(x){return x.mul(x)},BigNumber:function BigNumber(x){return x.times(x)},Fraction:function Fraction(x){return x.mul(x)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},Unit:function Unit(x){return x.pow(2)}})})),exports_9("createSquare",createSquare),createSubtract=factory(name$Y="subtract",dependencies$Z=["typed","matrix","equalScalar","addScalar","unaryMinus","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,addScalar=_ref.addScalar,unaryMinus=_ref.unaryMinus,DenseMatrix=_ref.DenseMatrix,algorithm01=createAlgorithm01({typed:typed}),algorithm03=createAlgorithm03({typed:typed}),algorithm05=createAlgorithm05({typed:typed,equalScalar:equalScalar}),algorithm10=createAlgorithm10({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$Y,{"number, number":function numberNumber(x,y){return x-y},"Complex, Complex":function ComplexComplex(x,y){return x.sub(y)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.minus(y)},"Fraction, Fraction":function FractionFraction(x,y){return x.sub(y)},"Unit, Unit":function UnitUnit(x,y){if(null===x.value)throw new Error("Parameter x contains a unit with undefined value");if(null===y.value)throw new Error("Parameter y contains a unit with undefined value");if(!x.equalBase(y))throw new Error("Units do not match");var res=x.clone();return res.value=this(res.value,y.value),res.fixPrefix=!1,res},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return checkEqualDimensions(x,y),algorithm05(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return checkEqualDimensions(x,y),algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return checkEqualDimensions(x,y),algorithm01(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return checkEqualDimensions(x,y),algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm10(x,unaryMinus(y),addScalar)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm10(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createSubtract",createSubtract),name$Z="xgcd",createXgcd=factory("xgcd",dependencies$_=["typed","config","matrix","BigNumber"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,BigNumber=_ref.BigNumber;return typed("xgcd",{"number, number":function numberNumber(a,b){var res=xgcdNumber(a,b);return"Array"===config.matrix?res:matrix(res)},"BigNumber, BigNumber":_xgcdBigNumber});function _xgcdBigNumber(a,b){var t,q,r,zero=new BigNumber(0),one=new BigNumber(1),x=zero,lastx=one,y=one,lasty=zero,res;if(!a.isInt()||!b.isInt())throw new Error("Parameters in function xgcd must be integer numbers");for(;!b.isZero();)q=a.div(b).floor(),r=a.mod(b),t=x,x=lastx.minus(q.times(x)),lastx=t,t=y,y=lasty.minus(q.times(y)),lasty=t,a=b,b=r;return res=a.lt(zero)?[a.neg(),lastx.neg(),lasty.neg()]:[a,a.isZero()?0:lastx,lasty],"Array"===config.matrix?res:matrix(res)}})),exports_9("createXgcd",createXgcd),createAlgorithm09=factory(name$_="algorithm09",dependencies$$=["typed","equalScalar"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar;return function algorithm09(a,b,callback){var avalues=a._values,aindex=a._index,aptr=a._ptr,asize=a._size,adt=a._datatype,bvalues=b._values,bindex=b._index,bptr=b._ptr,bsize=b._size,bdt=b._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");var rows=asize[0],columns=asize[1],dt,eq=equalScalar,zero=0,cf=callback;"string"==typeof adt&&adt===bdt&&(dt=adt,eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt),cf=typed.find(callback,[dt,dt]));var cvalues=avalues&&bvalues?[]:void 0,cindex=[],cptr=[],x=cvalues?[]:void 0,w=[],i,j,k,k0,k1;for(j=0;j<columns;j++){cptr[j]=cindex.length;var mark=j+1;if(x)for(k0=bptr[j],k1=bptr[j+1],k=k0;k<k1;k++)w[i=bindex[k]]=mark,x[i]=bvalues[k];for(k0=aptr[j],k1=aptr[j+1],k=k0;k<k1;k++)if(i=aindex[k],x){var vb=w[i]===mark?x[i]:zero,vc=cf(avalues[k],vb);eq(vc,zero)||(cindex.push(i),cvalues.push(vc))}else cindex.push(i)}return cptr[columns]=cindex.length,a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[rows,columns],datatype:dt})}})),createDotMultiply=factory(name$$="dotMultiply",dependencies$10=["typed","matrix","equalScalar","multiplyScalar"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,multiplyScalar=_ref.multiplyScalar,algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm09=createAlgorithm09({typed:typed,equalScalar:equalScalar}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$$,{"any, any":multiplyScalar,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm09(x,y,multiplyScalar,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,multiplyScalar,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm02(x,y,multiplyScalar,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,multiplyScalar)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm11(x,y,multiplyScalar,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,multiplyScalar,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm11(y,x,multiplyScalar,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,multiplyScalar,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,multiplyScalar,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,multiplyScalar,!0).valueOf()}})})),exports_9("createDotMultiply",createDotMultiply),createBitAnd=factory(name$10="bitAnd",dependencies$11=["typed","matrix","equalScalar"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm06=createAlgorithm06({typed:typed,equalScalar:equalScalar}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$10,{"number, number":bitAndNumber,"BigNumber, BigNumber":bitAndBigNumber,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm06(x,y,this,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm02(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm11(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm11(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createBitAnd",createBitAnd),createBitNot=factory(name$11="bitNot",dependencies$12=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$11,{number:bitNotNumber,BigNumber:bitNotBigNumber,"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createBitNot",createBitNot),name$12="bitOr",createBitOr=factory("bitOr",dependencies$13=["typed","matrix","equalScalar","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,algorithm01=createAlgorithm01({typed:typed}),algorithm04=createAlgorithm04({typed:typed,equalScalar:equalScalar}),algorithm10=createAlgorithm10({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("bitOr",{"number, number":bitOrNumber,"BigNumber, BigNumber":bitOrBigNumber,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm04(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm01(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm01(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm10(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm10(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createBitOr",createBitOr),createAlgorithm07=factory(name$13="algorithm07",dependencies$14=["typed","DenseMatrix"],(function(_ref){var typed=_ref.typed,DenseMatrix=_ref.DenseMatrix;return function algorithm07(a,b,callback){var asize=a._size,adt=a._datatype,bsize=b._size,bdt=b._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");var rows=asize[0],columns=asize[1],dt,zero=0,cf=callback,i,j;"string"==typeof adt&&adt===bdt&&(dt=adt,zero=typed.convert(0,dt),cf=typed.find(callback,[dt,dt]));var cdata=[];for(i=0;i<rows;i++)cdata[i]=[];var xa=[],xb=[],wa=[],wb=[];for(j=0;j<columns;j++){var mark=j+1;for(_scatter(a,j,wa,xa,mark),_scatter(b,j,wb,xb,mark),i=0;i<rows;i++){var va=wa[i]===mark?xa[i]:zero,vb=wb[i]===mark?xb[i]:zero;cdata[i][j]=cf(va,vb)}}return new DenseMatrix({data:cdata,size:[rows,columns],datatype:dt})};function _scatter(m,j,w,x,mark){for(var values=m._values,index=m._index,ptr=m._ptr,k=ptr[j],k1=ptr[j+1];k<k1;k++){var i=index[k];w[i]=mark,x[i]=values[k]}}})),createBitXor=factory(name$14="bitXor",dependencies$15=["typed","matrix","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$14,{"number, number":bitXorNumber,"BigNumber, BigNumber":bitXor,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createBitXor",createBitXor),name$15="arg",createArg=factory("arg",dependencies$16=["typed"],(function(_ref){var typed;return(0,_ref.typed)("arg",{number:function number(x){return Math.atan2(0,x)},BigNumber:function BigNumber(x){return x.constructor.atan2(0,x)},Complex:function Complex(x){return x.arg()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createArg",createArg),name$16="conj",createConj=factory("conj",dependencies$17=["typed"],(function(_ref){var typed;return(0,_ref.typed)("conj",{number:function number(x){return x},BigNumber:function BigNumber(x){return x},Complex:function Complex(x){return x.conjugate()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createConj",createConj),name$17="im",createIm=factory("im",dependencies$18=["typed"],(function(_ref){var typed;return(0,_ref.typed)("im",{number:function number(x){return 0},BigNumber:function BigNumber(x){return x.mul(0)},Complex:function Complex(x){return x.im},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createIm",createIm),name$18="re",createRe=factory("re",dependencies$19=["typed"],(function(_ref){var typed;return(0,_ref.typed)("re",{number:function number(x){return x},BigNumber:function BigNumber(x){return x},Complex:function Complex(x){return x.re},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createRe",createRe),name$19="not",createNot=factory("not",dependencies$1a=["typed"],(function(_ref){var typed;return(0,_ref.typed)("not",{number:notNumber,Complex:function Complex(x){return 0===x.re&&0===x.im},BigNumber:function BigNumber(x){return x.isZero()||x.isNaN()},Unit:function Unit(x){return null===x.value||this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createNot",createNot),name$1a="or",createOr=factory("or",dependencies$1b=["typed","matrix","equalScalar","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm05=createAlgorithm05({typed:typed,equalScalar:equalScalar}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("or",{"number, number":orNumber,"Complex, Complex":function ComplexComplex(x,y){return 0!==x.re||0!==x.im||0!==y.re||0!==y.im},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return!x.isZero()&&!x.isNaN()||!y.isZero()&&!y.isNaN()},"Unit, Unit":function UnitUnit(x,y){return this(x.value||0,y.value||0)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm05(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createOr",createOr),name$1b="xor",createXor=factory("xor",dependencies$1c=["typed","matrix","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("xor",{"number, number":xorNumber,"Complex, Complex":function ComplexComplex(x,y){return(0!==x.re||0!==x.im)!=(0!==y.re||0!==y.im)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return(!x.isZero()&&!x.isNaN())!=(!y.isZero()&&!y.isNaN())},"Unit, Unit":function UnitUnit(x,y){return this(x.value||0,y.value||0)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createXor",createXor),createConcat=factory(name$1c="concat",dependencies$1d=["typed","matrix","isInteger"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,isInteger=_ref.isInteger;return typed(name$1c,{"...Array | Matrix | number | BigNumber":function ArrayMatrixNumberBigNumber(args){var i,len=args.length,dim=-1,prevDim,asMatrix=!1,matrices=[];for(i=0;i<len;i++){var arg=args[i];if(isMatrix(arg)&&(asMatrix=!0),isNumber(arg)||isBigNumber(arg)){if(i!==len-1)throw new Error("Dimension must be specified as last argument");if(prevDim=dim,dim=arg.valueOf(),!isInteger(dim))throw new TypeError("Integer number expected for dimension");if(dim<0||i>0&&dim>prevDim)throw new IndexError(dim,prevDim+1)}else{var m=clone(arg).valueOf(),size=arraySize(m);if(matrices[i]=m,prevDim=dim,dim=size.length-1,i>0&&dim!==prevDim)throw new DimensionError(prevDim+1,dim+1)}}if(0===matrices.length)throw new SyntaxError("At least one matrix expected");for(var res=matrices.shift();matrices.length;)res=_concat(res,matrices.shift(),dim,0);return asMatrix?matrix(res):res},"...string":function string(args){return args.join("")}})})),exports_9("createConcat",createConcat),createColumn=factory(name$1d="column",dependencies$1e=["typed","Index","matrix","range"],(function(_ref){var typed=_ref.typed,Index=_ref.Index,matrix=_ref.matrix,range=_ref.range;return typed(name$1d,{"Matrix, number":_column,"Array, number":function ArrayNumber(value,column){return _column(matrix(clone(value)),column).valueOf()}});function _column(value,column){if(2!==value.size().length)throw new Error("Only two dimensional matrix is supported");validateIndex(column,value.size()[1]);var rowRange=range(0,value.size()[0]),index=new Index(rowRange,column);return value.subset(index)}})),exports_9("createColumn",createColumn),name$1e="cross",createCross=factory("cross",dependencies$1f=["typed","matrix","subtract","multiply"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,subtract=_ref.subtract,multiply=_ref.multiply;return typed("cross",{"Matrix, Matrix":function MatrixMatrix(x,y){return matrix(_cross(x.toArray(),y.toArray()))},"Matrix, Array":function MatrixArray(x,y){return matrix(_cross(x.toArray(),y))},"Array, Matrix":function ArrayMatrix(x,y){return matrix(_cross(x,y.toArray()))},"Array, Array":_cross});function _cross(x,y){var highestDimension=Math.max(arraySize(x).length,arraySize(y).length);x=squeeze(x),y=squeeze(y);var xSize=arraySize(x),ySize=arraySize(y);if(1!==xSize.length||1!==ySize.length||3!==xSize[0]||3!==ySize[0])throw new RangeError("Vectors with length 3 expected (Size A = ["+xSize.join(", ")+"], B = ["+ySize.join(", ")+"])");var product=[subtract(multiply(x[1],y[2]),multiply(x[2],y[1])),subtract(multiply(x[2],y[0]),multiply(x[0],y[2])),subtract(multiply(x[0],y[1]),multiply(x[1],y[0]))];return highestDimension>1?[product]:product}})),exports_9("createCross",createCross),name$1f="diag",createDiag=factory("diag",dependencies$1g=["typed","matrix","DenseMatrix","SparseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,SparseMatrix=_ref.SparseMatrix;return typed("diag",{Array:function Array(x){return _diag(x,0,arraySize(x),null)},"Array, number":function ArrayNumber(x,k){return _diag(x,k,arraySize(x),null)},"Array, BigNumber":function ArrayBigNumber(x,k){return _diag(x,k.toNumber(),arraySize(x),null)},"Array, string":function ArrayString(x,format){return _diag(x,0,arraySize(x),format)},"Array, number, string":function ArrayNumberString(x,k,format){return _diag(x,k,arraySize(x),format)},"Array, BigNumber, string":function ArrayBigNumberString(x,k,format){return _diag(x,k.toNumber(),arraySize(x),format)},Matrix:function Matrix(x){return _diag(x,0,x.size(),x.storage())},"Matrix, number":function MatrixNumber(x,k){return _diag(x,k,x.size(),x.storage())},"Matrix, BigNumber":function MatrixBigNumber(x,k){return _diag(x,k.toNumber(),x.size(),x.storage())},"Matrix, string":function MatrixString(x,format){return _diag(x,0,x.size(),format)},"Matrix, number, string":function MatrixNumberString(x,k,format){return _diag(x,k,x.size(),format)},"Matrix, BigNumber, string":function MatrixBigNumberString(x,k,format){return _diag(x,k.toNumber(),x.size(),format)}});function _diag(x,k,size,format){if(!isInteger(k))throw new TypeError("Second parameter in function diag must be an integer");var kSuper=k>0?k:0,kSub=k<0?-k:0;switch(size.length){case 1:return _createDiagonalMatrix(x,k,format,size[0],kSub,kSuper);case 2:return _getDiagonal(x,k,format,size,kSub,kSuper)}throw new RangeError("Matrix for function diag must be 2 dimensional")}function _createDiagonalMatrix(x,k,format,l,kSub,kSuper){var ms=[l+kSub,l+kSuper];if(format&&"sparse"!==format&&"dense"!==format)throw new TypeError("Unknown matrix type ".concat(format,'"'));var m="sparse"===format?SparseMatrix.diagonal(ms,x,k):DenseMatrix.diagonal(ms,x,k);return null!==format?m:m.valueOf()}function _getDiagonal(x,k,format,s,kSub,kSuper){if(isMatrix(x)){var dm=x.diagonal(k);return null!==format?format!==dm.storage()?matrix(dm,format):dm:dm.valueOf()}for(var n=Math.min(s[0]-kSub,s[1]-kSuper),vector=[],i=0;i<n;i++)vector[i]=x[i+kSub][i+kSuper];return null!==format?matrix(vector):vector}})),exports_9("createDiag",createDiag),createFilter=factory(name$1g="filter",dependencies$1h=["typed"],(function(_ref){var typed;return(0,_ref.typed)("filter",{"Array, function":_filterCallback,"Matrix, function":function MatrixFunction(x,test){return x.create(_filterCallback(x.toArray(),test))},"Array, RegExp":filterRegExp,"Matrix, RegExp":function MatrixRegExp(x,test){return x.create(filterRegExp(x.toArray(),test))}})})),exports_9("createFilter",createFilter),createFlatten=factory(name$1h="flatten",dependencies$1i=["typed","matrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix;return typed(name$1h,{Array:function Array(x){return flatten(clone(x))},Matrix:function Matrix(x){var flat=flatten(clone(x.toArray()));return matrix(flat)}})})),exports_9("createFlatten",createFlatten),createForEach=factory(name$1i="forEach",dependencies$1j=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$1i,{"Array, function":_forEach,"Matrix, function":function MatrixFunction(x,callback){return x.forEach(callback)}})})),exports_9("createForEach",createForEach),createGetMatrixDataType=factory(name$1j="getMatrixDataType",dependencies$1k=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$1j,{Array:function Array(x){return getArrayDataType(x,typeOf)},Matrix:function Matrix(x){return x.getDataType()}})})),exports_9("createGetMatrixDataType",createGetMatrixDataType),createIdentity=factory(name$1k="identity",dependencies$1l=["typed","config","matrix","BigNumber","DenseMatrix","SparseMatrix"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,BigNumber=_ref.BigNumber,DenseMatrix=_ref.DenseMatrix,SparseMatrix=_ref.SparseMatrix;return typed(name$1k,{"":function _(){return"Matrix"===config.matrix?matrix([]):[]},string:function string(format){return matrix(format)},"number | BigNumber":function numberBigNumber(rows){return _identity(rows,rows,"Matrix"===config.matrix?"dense":void 0)},"number | BigNumber, string":function numberBigNumberString(rows,format){return _identity(rows,rows,format)},"number | BigNumber, number | BigNumber":function numberBigNumberNumberBigNumber(rows,cols){return _identity(rows,cols,"Matrix"===config.matrix?"dense":void 0)},"number | BigNumber, number | BigNumber, string":function numberBigNumberNumberBigNumberString(rows,cols,format){return _identity(rows,cols,format)},Array:function Array(size){return _identityVector(size)},"Array, string":function ArrayString(size,format){return _identityVector(size,format)},Matrix:function Matrix(size){return _identityVector(size.valueOf(),size.storage())},"Matrix, string":function MatrixString(size,format){return _identityVector(size.valueOf(),format)}});function _identityVector(size,format){switch(size.length){case 0:return format?matrix(format):[];case 1:return _identity(size[0],size[0],format);case 2:return _identity(size[0],size[1],format);default:throw new Error("Vector containing two values expected")}}function _identity(rows,cols,format){var Big=isBigNumber(rows)||isBigNumber(cols)?BigNumber:null;if(isBigNumber(rows)&&(rows=rows.toNumber()),isBigNumber(cols)&&(cols=cols.toNumber()),!isInteger(rows)||rows<1)throw new Error("Parameters in function identity must be positive integers");if(!isInteger(cols)||cols<1)throw new Error("Parameters in function identity must be positive integers");var one=Big?new BigNumber(1):1,defaultValue=Big?new Big(0):0,size=[rows,cols];if(format){if("sparse"===format)return SparseMatrix.diagonal(size,one,0,defaultValue);if("dense"===format)return DenseMatrix.diagonal(size,one,0,defaultValue);throw new TypeError('Unknown matrix type "'.concat(format,'"'))}for(var res=resize([],size,defaultValue),minimum=rows<cols?rows:cols,d=0;d<minimum;d++)res[d][d]=one;return res}})),exports_9("createIdentity",createIdentity),name$1l="kron",createKron=factory("kron",dependencies$1m=["typed","matrix","multiplyScalar"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,multiplyScalar=_ref.multiplyScalar;return typed("kron",{"Matrix, Matrix":function MatrixMatrix(x,y){return matrix(_kron(x.toArray(),y.toArray()))},"Matrix, Array":function MatrixArray(x,y){return matrix(_kron(x.toArray(),y))},"Array, Matrix":function ArrayMatrix(x,y){return matrix(_kron(x,y.toArray()))},"Array, Array":_kron});function _kron(a,b){if(1===arraySize(a).length&&(a=[a]),1===arraySize(b).length&&(b=[b]),arraySize(a).length>2||arraySize(b).length>2)throw new RangeError("Vectors with dimensions greater then 2 are not supported expected (Size x = "+JSON.stringify(a.length)+", y = "+JSON.stringify(b.length)+")");var t=[],r=[];return a.map((function(a){return b.map((function(b){return r=[],t.push(r),a.map((function(y){return b.map((function(x){return r.push(multiplyScalar(y,x))}))}))}))}))&&t}})),exports_9("createKron",createKron),name$1m="map",createMap=factory("map",dependencies$1n=["typed"],(function(_ref){var typed;return(0,_ref.typed)("map",{"Array, function":_map,"Matrix, function":function MatrixFunction(x,callback){return x.map(callback)}})})),exports_9("createMap",createMap),name$1n="ones",createOnes=factory("ones",dependencies$1o=["typed","config","matrix","BigNumber"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,BigNumber=_ref.BigNumber;return typed("ones",{"":function _(){return"Array"===config.matrix?_ones([]):_ones([],"default")},"...number | BigNumber | string":function numberBigNumberString(size){var last;if("string"==typeof size[size.length-1]){var format=size.pop();return _ones(size,format)}return"Array"===config.matrix?_ones(size):_ones(size,"default")},Array:_ones,Matrix:function Matrix(size){var format=size.storage();return _ones(size.valueOf(),format)},"Array | Matrix, string":function ArrayMatrixString(size,format){return _ones(size.valueOf(),format)}});function _ones(size,format){var hasBigNumbers,defaultValue=_normalize(size)?new BigNumber(1):1;if(_validate(size),format){var m=matrix(format);return size.length>0?m.resize(size,defaultValue):m}var arr=[];return size.length>0?resize(arr,size,defaultValue):arr}function _normalize(size){var hasBigNumbers=!1;return size.forEach((function(value,index,arr){isBigNumber(value)&&(hasBigNumbers=!0,arr[index]=value.toNumber())})),hasBigNumbers}function _validate(size){size.forEach((function(value){if("number"!=typeof value||!isInteger(value)||value<0)throw new Error("Parameters in function ones must be positive integers")}))}})),exports_9("createOnes",createOnes),name$1o="range",createRange=factory("range",dependencies$1p=["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,bignumber=_ref.bignumber,smaller=_ref.smaller,smallerEq=_ref.smallerEq,larger=_ref.larger,largerEq=_ref.largerEq;return typed("range",{string:_strRange,"string, boolean":_strRange,"number, number":function numberNumber(start,end){return _out(_rangeEx(start,end,1))},"number, number, number":function numberNumberNumber(start,end,step){return _out(_rangeEx(start,end,step))},"number, number, boolean":function numberNumberBoolean(start,end,includeEnd){return _out(includeEnd?_rangeInc(start,end,1):_rangeEx(start,end,1))},"number, number, number, boolean":function numberNumberNumberBoolean(start,end,step,includeEnd){return _out(includeEnd?_rangeInc(start,end,step):_rangeEx(start,end,step))},"BigNumber, BigNumber":function BigNumberBigNumber(start,end){var BigNumber;return _out(_bigRangeEx(start,end,new(0,start.constructor)(1)))},"BigNumber, BigNumber, BigNumber":function BigNumberBigNumberBigNumber(start,end,step){return _out(_bigRangeEx(start,end,step))},"BigNumber, BigNumber, boolean":function BigNumberBigNumberBoolean(start,end,includeEnd){var BigNumber=start.constructor;return _out(includeEnd?_bigRangeInc(start,end,new BigNumber(1)):_bigRangeEx(start,end,new BigNumber(1)))},"BigNumber, BigNumber, BigNumber, boolean":function BigNumberBigNumberBigNumberBoolean(start,end,step,includeEnd){return _out(includeEnd?_bigRangeInc(start,end,step):_bigRangeEx(start,end,step))}});function _out(arr){return"Matrix"===config.matrix?matrix?matrix(arr):noMatrix():arr}function _strRange(str,includeEnd){var r=_parse(str),fn;if(!r)throw new SyntaxError('String "'+str+'" is no valid range');return"BigNumber"===config.number?(void 0===bignumber&&noBignumber(),_out((fn=includeEnd?_bigRangeInc:_bigRangeEx)(bignumber(r.start),bignumber(r.end),bignumber(r.step)))):_out((fn=includeEnd?_rangeInc:_rangeEx)(r.start,r.end,r.step))}function _rangeEx(start,end,step){var array=[],x=start;if(step>0)for(;smaller(x,end);)array.push(x),x+=step;else if(step<0)for(;larger(x,end);)array.push(x),x+=step;return array}function _rangeInc(start,end,step){var array=[],x=start;if(step>0)for(;smallerEq(x,end);)array.push(x),x+=step;else if(step<0)for(;largerEq(x,end);)array.push(x),x+=step;return array}function _bigRangeEx(start,end,step){var zero=bignumber(0),array=[],x=start;if(step.gt(zero))for(;smaller(x,end);)array.push(x),x=x.plus(step);else if(step.lt(zero))for(;larger(x,end);)array.push(x),x=x.plus(step);return array}function _bigRangeInc(start,end,step){var zero=bignumber(0),array=[],x=start;if(step.gt(zero))for(;smallerEq(x,end);)array.push(x),x=x.plus(step);else if(step.lt(zero))for(;largerEq(x,end);)array.push(x),x=x.plus(step);return array}function _parse(str){var args,nums=str.split(":").map((function(arg){return Number(arg)})),invalid;if(nums.some((function(num){return isNaN(num)})))return null;switch(nums.length){case 2:return{start:nums[0],end:nums[1],step:1};case 3:return{start:nums[0],end:nums[2],step:nums[1]};default:return null}}})),exports_9("createRange",createRange),createReshape=factory(name$1p="reshape",dependencies$1q=["typed","isInteger","matrix"],(function(_ref){var typed=_ref.typed,isInteger=_ref.isInteger,matrix=_ref.matrix;return typed(name$1p,{"Matrix, Array":function MatrixArray(x,sizes){return x.reshape?x.reshape(sizes):matrix(reshape(x.valueOf(),sizes))},"Array, Array":function ArrayArray(x,sizes){return sizes.forEach((function(size){if(!isInteger(size))throw new TypeError("Invalid size for dimension: "+size)})),reshape(x,sizes)}})})),exports_9("createReshape",createReshape),ArgumentsError.prototype=new Error,ArgumentsError.prototype.constructor=Error,ArgumentsError.prototype.name="ArgumentsError",ArgumentsError.prototype.isArgumentsError=!0,createResize=factory(name$1q="resize",dependencies$1r=["config","matrix"],(function(_ref){var config=_ref.config,matrix=_ref.matrix;return function resize$1(x,size,defaultValue){if(2!==arguments.length&&3!==arguments.length)throw new ArgumentsError("resize",arguments.length,2,3);if(isMatrix(size)&&(size=size.valueOf()),isBigNumber(size[0])&&(size=size.map((function(value){return isBigNumber(value)?value.toNumber():value}))),isMatrix(x))return x.resize(size,defaultValue,!0);if("string"==typeof x)return _resizeString(x,size,defaultValue);var asMatrix=!Array.isArray(x)&&"Array"!==config.matrix;if(0===size.length){for(;Array.isArray(x);)x=x[0];return clone(x)}Array.isArray(x)||(x=[x]);var res=resize(x=clone(x),size,defaultValue);return asMatrix?matrix(res):res};function _resizeString(str,size,defaultChar){if(void 0!==defaultChar){if("string"!=typeof defaultChar||1!==defaultChar.length)throw new TypeError("Single character expected as defaultValue")}else defaultChar=" ";if(1!==size.length)throw new DimensionError(size.length,1);var len=size[0];if("number"!=typeof len||!isInteger(len))throw new TypeError("Invalid size, must contain positive integers (size: "+format$2(size)+")");if(str.length>len)return str.substring(0,len);if(str.length<len){for(var res=str,i=0,ii=len-str.length;i<ii;i++)res+=defaultChar;return res}return str}})),exports_9("createResize",createResize),name$1r="row",createRow=factory("row",dependencies$1s=["typed","Index","matrix","range"],(function(_ref){var typed=_ref.typed,Index=_ref.Index,matrix=_ref.matrix,range=_ref.range;return typed("row",{"Matrix, number":_row,"Array, number":function ArrayNumber(value,row){return _row(matrix(clone(value)),row).valueOf()}});function _row(value,row){if(2!==value.size().length)throw new Error("Only two dimensional matrix is supported");validateIndex(row,value.size()[0]);var columnRange=range(0,value.size()[1]),index=new Index(row,columnRange);return value.subset(index)}})),exports_9("createRow",createRow),name$1s="size",createSize=factory("size",dependencies$1t=["typed","config","?matrix"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix;return typed("size",{Matrix:function Matrix(x){return x.create(x.size())},Array:arraySize,string:function string(x){return"Array"===config.matrix?[x.length]:matrix([x.length])},"number | Complex | BigNumber | Unit | boolean | null":function numberComplexBigNumberUnitBooleanNull(x){return"Array"===config.matrix?[]:matrix?matrix([]):noMatrix()}})})),exports_9("createSize",createSize),createSqueeze=factory(name$1t="squeeze",dependencies$1u=["typed","matrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix;return typed(name$1t,{Array:function Array(x){return squeeze(clone(x))},Matrix:function Matrix(x){var res=squeeze(x.toArray());return Array.isArray(res)?matrix(res):res},any:function any(x){return clone(x)}})})),exports_9("createSqueeze",createSqueeze),safeNativeProperties={length:!0,name:!0},safeNativeMethods={toString:!0,valueOf:!0,toLocaleString:!0},createSubset=factory(name$1u="subset",dependencies$1v=["typed","matrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix;return typed(name$1u,{"Array, Index":function ArrayIndex(value,index){var m,subset=matrix(value).subset(index);return index.isScalar()?subset:subset.valueOf()},"Matrix, Index":function MatrixIndex(value,index){return value.subset(index)},"Object, Index":_getObjectProperty,"string, Index":_getSubstring,"Array, Index, any":function ArrayIndexAny(value,index,replacement){return matrix(clone(value)).subset(index,replacement,void 0).valueOf()},"Array, Index, any, any":function ArrayIndexAnyAny(value,index,replacement,defaultValue){return matrix(clone(value)).subset(index,replacement,defaultValue).valueOf()},"Matrix, Index, any":function MatrixIndexAny(value,index,replacement){return value.clone().subset(index,replacement)},"Matrix, Index, any, any":function MatrixIndexAnyAny(value,index,replacement,defaultValue){return value.clone().subset(index,replacement,defaultValue)},"string, Index, string":_setSubstring,"string, Index, string, string":_setSubstring,"Object, Index, any":_setObjectProperty})})),exports_9("createSubset",createSubset),createTranspose=factory(name$1v="transpose",dependencies$1w=["typed","matrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix;return typed("transpose",{Array:function Array(x){return this(matrix(x)).valueOf()},Matrix:function Matrix(x){var size=x.size(),c;switch(size.length){case 1:c=x.clone();break;case 2:var rows=size[0],columns=size[1];if(0===columns)throw new RangeError("Cannot transpose a 2D matrix with no columns (size: "+format$2(size)+")");switch(x.storage()){case"dense":c=_denseTranspose(x,rows,columns);break;case"sparse":c=_sparseTranspose(x,rows,columns)}break;default:throw new RangeError("Matrix must be a vector or two dimensional (size: "+format$2(this._size)+")")}return c},any:function any(x){return clone(x)}});function _denseTranspose(m,rows,columns){for(var data=m._data,transposed=[],transposedRow,j=0;j<columns;j++){transposedRow=transposed[j]=[];for(var i=0;i<rows;i++)transposedRow[i]=clone(data[i][j])}return m.createDenseMatrix({data:transposed,size:[columns,rows],datatype:m._datatype})}function _sparseTranspose(m,rows,columns){for(var values=m._values,index=m._index,ptr=m._ptr,cvalues=values?[]:void 0,cindex=[],cptr=[],w=[],x=0,p,l,j;x<rows;x++)w[x]=0;for(p=0,l=index.length;p<l;p++)w[index[p]]++;for(var sum=0,i=0;i<rows;i++)cptr.push(sum),sum+=w[i],w[i]=cptr[i];for(cptr.push(sum),j=0;j<columns;j++)for(var k0=ptr[j],k1=ptr[j+1],k=k0;k<k1;k++){var q=w[index[k]]++;cindex[q]=j,values&&(cvalues[q]=clone(values[k]))}return m.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[columns,rows],datatype:m._datatype})}})),exports_9("createTranspose",createTranspose),createCtranspose=factory(name$1w="ctranspose",dependencies$1x=["typed","transpose","conj"],(function(_ref){var typed=_ref.typed,transpose=_ref.transpose,conj=_ref.conj;return typed(name$1w,{any:function any(x){return conj(transpose(x))}})})),exports_9("createCtranspose",createCtranspose),name$1x="zeros",createZeros=factory("zeros",dependencies$1y=["typed","config","matrix","BigNumber"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,BigNumber=_ref.BigNumber;return typed("zeros",{"":function _(){return"Array"===config.matrix?_zeros([]):_zeros([],"default")},"...number | BigNumber | string":function numberBigNumberString(size){var last;if("string"==typeof size[size.length-1]){var format=size.pop();return _zeros(size,format)}return"Array"===config.matrix?_zeros(size):_zeros(size,"default")},Array:_zeros,Matrix:function Matrix(size){var format=size.storage();return _zeros(size.valueOf(),format)},"Array | Matrix, string":function ArrayMatrixString(size,format){return _zeros(size.valueOf(),format)}});function _zeros(size,format){var hasBigNumbers,defaultValue=_normalize(size)?new BigNumber(0):0;if(_validate(size),format){var m=matrix(format);return size.length>0?m.resize(size,defaultValue):m}var arr=[];return size.length>0?resize(arr,size,defaultValue):arr}function _normalize(size){var hasBigNumbers=!1;return size.forEach((function(value,index,arr){isBigNumber(value)&&(hasBigNumbers=!0,arr[index]=value.toNumber())})),hasBigNumbers}function _validate(size){size.forEach((function(value){if("number"!=typeof value||!isInteger(value)||value<0)throw new Error("Parameters in function zeros must be positive integers")}))}})),exports_9("createZeros",createZeros),name$1y="erf",createErf=factory("erf",dependencies$1z=["typed"],(function(_ref){var typed;return(0,_ref.typed)("name",{number:function number(x){var y=Math.abs(x);return y>=MAX_NUM?sign(x):y<=THRESH?sign(x)*erf1(y):y<=4?sign(x)*(1-erfc2(y)):sign(x)*(1-erfc3(y))},"Array | Matrix":function ArrayMatrix(n){return deepMap(n,this)}});function erf1(y){var ysq=y*y,xnum=P[0][4]*ysq,xden=ysq,i;for(i=0;i<3;i+=1)xnum=(xnum+P[0][i])*ysq,xden=(xden+Q[0][i])*ysq;return y*(xnum+P[0][3])/(xden+Q[0][3])}function erfc2(y){var xnum=P[1][8]*y,xden=y,i;for(i=0;i<7;i+=1)xnum=(xnum+P[1][i])*y,xden=(xden+Q[1][i])*y;var result=(xnum+P[1][7])/(xden+Q[1][7]),ysq=parseInt(16*y)/16,del=(y-ysq)*(y+ysq);return Math.exp(-ysq*ysq)*Math.exp(-del)*result}function erfc3(y){var ysq=1/(y*y),xnum=P[2][5]*ysq,xden=ysq,i;for(i=0;i<4;i+=1)xnum=(xnum+P[2][i])*ysq,xden=(xden+Q[2][i])*ysq;var result=ysq*(xnum+P[2][4])/(xden+Q[2][4]);result=(SQRPI-result)/y;var del=(y-(ysq=parseInt(16*y)/16))*(y+ysq);return Math.exp(-ysq*ysq)*Math.exp(-del)*result}})),exports_9("createErf",createErf),THRESH=.46875,SQRPI=.5641895835477563,P=[[3.1611237438705655,113.86415415105016,377.485237685302,3209.3775891384694,.18577770618460315],[.5641884969886701,8.883149794388377,66.11919063714163,298.6351381974001,881.952221241769,1712.0476126340707,2051.0783778260716,1230.3393547979972,2.1531153547440383e-8],[.30532663496123236,.36034489994980445,.12578172611122926,.016083785148742275,.0006587491615298378,.016315387137302097]],Q=[[23.601290952344122,244.02463793444417,1282.6165260773723,2844.236833439171],[15.744926110709835,117.6939508913125,537.1811018620099,1621.3895745666903,3290.7992357334597,4362.619090143247,3439.3676741437216,1230.3393548037495],[2.568520192289822,1.8729528499234604,.5279051029514285,.06051834131244132,.0023352049762686918]],MAX_NUM=Math.pow(2,53),name$1z="mode",createMode=factory("mode",dependencies$1A=["typed","isNaN","isNumeric"],(function(_ref){var typed=_ref.typed,isNaN=_ref.isNaN,isNumeric=_ref.isNumeric;return typed("mode",{"Array | Matrix":_mode,"...":function _(args){return _mode(args)}});function _mode(values){var num;if(0===(values=flatten(values.valueOf())).length)throw new Error("Cannot calculate mode of an empty array");for(var count={},mode=[],max=0,i=0;i<values.length;i++){var value=values[i];if(isNumeric(value)&&isNaN(value))throw new Error("Cannot calculate mode of an array containing NaN values");value in count||(count[value]=0),count[value]++,count[value]===max?mode.push(value):count[value]>max&&(max=count[value],mode=[value])}return mode}})),exports_9("createMode",createMode),name$1A="prod",createProd=factory("prod",dependencies$1B=["typed","config","multiplyScalar","numeric"],(function(_ref){var typed=_ref.typed,config=_ref.config,multiplyScalar=_ref.multiplyScalar,numeric=_ref.numeric;return typed("prod",{"Array | Matrix":_prod,"Array | Matrix, number | BigNumber":function ArrayMatrixNumberBigNumber(array,dim){throw new Error("prod(A, dim) is not yet supported")},"...":function _(args){return _prod(args)}});function _prod(array){var prod;if(deepForEach(array,(function(value){try{prod=void 0===prod?value:multiplyScalar(prod,value)}catch(err){throw improveErrorMessage(err,"prod",value)}})),"string"==typeof prod&&(prod=numeric(prod,config.number)),void 0===prod)throw new Error("Cannot calculate prod of an empty array");return prod}})),exports_9("createProd",createProd),createFormat=factory(name$1B="format",dependencies$1C=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$1B,{any:format$2,"any, Object | function | number":format$2})})),exports_9("createFormat",createFormat),name$1C="print",createPrint=factory("print",dependencies$1D=["typed"],(function(_ref){var typed;return(0,_ref.typed)("print",{"string, Object | Array":_print,"string, Object | Array, number | Object":_print})})),exports_9("createPrint",createPrint),name$1D="to",createTo=factory("to",dependencies$1E=["typed","matrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("to",{"Unit, Unit | string":function UnitUnitString(x,unit){return x.to(unit)},"Matrix, Matrix":function MatrixMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"Matrix, any":function MatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, Matrix":function anyMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createTo",createTo),createIsPrime=factory(name$1E="isPrime",dependencies$1F=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$1E,{number:function number(x){if(0*x!=0)return!1;if(x<=3)return x>1;if(x%2==0||x%3==0)return!1;for(var i=5;i*i<=x;i+=6)if(x%i==0||x%(i+2)==0)return!1;return!0},BigNumber:function BigNumber(n){if(0*n.toNumber()!=0)return!1;if(n.lte(3))return n.gt(1);if(n.mod(2).eq(0)||n.mod(3).eq(0))return!1;for(var i=5;n.gte(i*i);i+=6)if(n.mod(i).eq(0)||n.mod(i+2).eq(0))return!1;return!0},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createIsPrime",createIsPrime),createNumeric=factory(name$1F="numeric",dependencies$1G=["number","?bignumber","?fraction"],(function(_ref){var _number=_ref.number,bignumber=_ref.bignumber,fraction=_ref.fraction,validInputTypes={string:!0,number:!0,BigNumber:!0,Fraction:!0},validOutputTypes={number:function number(x){return _number(x)},BigNumber:bignumber?function(x){return bignumber(x)}:noBignumber,Fraction:fraction?function(x){return fraction(x)}:noFraction};return function numeric(value,outputType){var inputType=typeOf(value);if(!(inputType in validInputTypes))throw new TypeError("Cannot convert "+value+' of type "'+inputType+'"; valid input types are '+Object.keys(validInputTypes).join(", "));if(!(outputType in validOutputTypes))throw new TypeError("Cannot convert "+value+' to type "'+outputType+'"; valid output types are '+Object.keys(validOutputTypes).join(", "));return outputType===inputType?value:validOutputTypes[outputType](value)}})),exports_9("createNumeric",createNumeric),createDivideScalar=factory(name$1G="divideScalar",dependencies$1H=["typed","numeric"],(function(_ref){var typed=_ref.typed,numeric=_ref.numeric;return typed(name$1G,{"number, number":function numberNumber(x,y){return x/y},"Complex, Complex":function ComplexComplex(x,y){return x.div(y)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.div(y)},"Fraction, Fraction":function FractionFraction(x,y){return x.div(y)},"Unit, number | Fraction | BigNumber":function UnitNumberFractionBigNumber(x,y){var res=x.clone(),one=numeric(1,typeOf(y));return res.value=this(null===res.value?res._normalize(one):res.value,y),res},"number | Fraction | BigNumber, Unit":function numberFractionBigNumberUnit(x,y){var res=y.clone();res=res.pow(-1);var one=numeric(1,typeOf(x));return res.value=this(x,null===y.value?y._normalize(one):y.value),res},"Unit, Unit":function UnitUnit(x,y){return x.divide(y)}})})),exports_9("createDivideScalar",createDivideScalar),name$1H="pow",createPow=factory("pow",dependencies$1I=["typed","config","identity","multiply","matrix","fraction","number","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,identity=_ref.identity,multiply=_ref.multiply,matrix=_ref.matrix,number=_ref.number,fraction=_ref.fraction,Complex=_ref.Complex;return typed("pow",{"number, number":_pow,"Complex, Complex":function ComplexComplex(x,y){return x.pow(y)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return y.isInteger()||x>=0||config.predictable?x.pow(y):new Complex(x.toNumber(),0).pow(y.toNumber(),0)},"Fraction, Fraction":function FractionFraction(x,y){if(1!==y.d){if(config.predictable)throw new Error("Function pow does not support non-integer exponents for fractions.");return _pow(x.valueOf(),y.valueOf())}return x.pow(y)},"Array, number":_powArray,"Array, BigNumber":function ArrayBigNumber(x,y){return _powArray(x,y.toNumber())},"Matrix, number":_powMatrix,"Matrix, BigNumber":function MatrixBigNumber(x,y){return _powMatrix(x,y.toNumber())},"Unit, number | BigNumber":function UnitNumberBigNumber(x,y){return x.pow(y)}});function _pow(x,y){if(config.predictable&&!isInteger(y)&&x<0)try{var yFrac=fraction(y),yNum=number(yFrac);if((y===yNum||Math.abs((y-yNum)/y)<1e-14)&&yFrac.d%2==1)return(yFrac.n%2==0?1:-1)*Math.pow(-x,y)}catch(ex){}return config.predictable&&(x<-1&&y===1/0||x>-1&&x<0&&y===-1/0)?NaN:isInteger(y)||x>=0||config.predictable?powNumber(x,y):x*x<1&&y===1/0||x*x>1&&y===-1/0?0:new Complex(x,0).pow(y,0)}function _powArray(x,y){if(!isInteger(y)||y<0)throw new TypeError("For A^b, b must be a positive integer (value is "+y+")");var s=arraySize(x);if(2!==s.length)throw new Error("For A^b, A must be 2 dimensional (A has "+s.length+" dimensions)");if(s[0]!==s[1])throw new Error("For A^b, A must be square (size is "+s[0]+"x"+s[1]+")");for(var res=identity(s[0]).valueOf(),px=x;y>=1;)1==(1&y)&&(res=multiply(px,res)),y>>=1,px=multiply(px,px);return res}function _powMatrix(x,y){return matrix(_powArray(x.valueOf(),y))}})),exports_9("createPow",createPow),NO_INT="Number of decimals in function round must be an integer",name$1I="round",createRound=factory("round",dependencies$1J=["typed","matrix","equalScalar","zeros","BigNumber","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,zeros=_ref.zeros,BigNumber=_ref.BigNumber,DenseMatrix=_ref.DenseMatrix,algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm14=createAlgorithm14({typed:typed});return typed("round",_objectSpread(_objectSpread({},roundNumberSignatures),{},{Complex:function Complex(x){return x.round()},"Complex, number":function ComplexNumber(x,n){if(n%1)throw new TypeError(NO_INT);return x.round(n)},"Complex, BigNumber":function ComplexBigNumber(x,n){if(!n.isInteger())throw new TypeError(NO_INT);var _n=n.toNumber();return x.round(_n)},"number, BigNumber":function numberBigNumber(x,n){if(!n.isInteger())throw new TypeError(NO_INT);return new BigNumber(x).toDecimalPlaces(n.toNumber())},BigNumber:function BigNumber(x){return x.toDecimalPlaces(0)},"BigNumber, BigNumber":function BigNumberBigNumber(x,n){if(!n.isInteger())throw new TypeError(NO_INT);return x.toDecimalPlaces(n.toNumber())},Fraction:function Fraction(x){return x.round()},"Fraction, number":function FractionNumber(x,n){if(n%1)throw new TypeError(NO_INT);return x.round(n)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},"SparseMatrix, number | BigNumber":function SparseMatrixNumberBigNumber(x,y){return algorithm11(x,y,this,!1)},"DenseMatrix, number | BigNumber":function DenseMatrixNumberBigNumber(x,y){return algorithm14(x,y,this,!1)},"number | Complex | BigNumber, SparseMatrix":function numberComplexBigNumberSparseMatrix(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm12(y,x,this,!0)},"number | Complex | BigNumber, DenseMatrix":function numberComplexBigNumberDenseMatrix(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm14(y,x,this,!0)},"Array, number | BigNumber":function ArrayNumberBigNumber(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"number | Complex | BigNumber, Array":function numberComplexBigNumberArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}}))})),exports_9("createRound",createRound),roundNumberSignatures={number:roundNumber,"number, number":function numberNumber(x,n){if(!isInteger(n))throw new TypeError(NO_INT);if(n<0||n>15)throw new Error("Number of decimals in function round must be in te range of 0-15");return roundNumber(x,n)}},name$1J="log",createLog=factory("log",dependencies$1K=["config","typed","divideScalar","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,divideScalar=_ref.divideScalar,Complex=_ref.Complex;return typed("log",{number:function number(x){return x>=0||config.predictable?logNumber(x):new Complex(x,0).log()},Complex:function Complex(x){return x.log()},BigNumber:function BigNumber(x){return!x.isNegative()||config.predictable?x.ln():new Complex(x.toNumber(),0).log()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},"any, any":function anyAny(x,base){return divideScalar(this(x),this(base))}})})),exports_9("createLog",createLog),name$1K="log1p",createLog1p=factory("log1p",dependencies$1L=["typed","config","divideScalar","log","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,divideScalar=_ref.divideScalar,log=_ref.log,Complex=_ref.Complex;return typed("log1p",{number:function number(x){return x>=-1||config.predictable?log1p(x):_log1pComplex(new Complex(x,0))},Complex:_log1pComplex,BigNumber:function BigNumber(x){var y=x.plus(1);return!y.isNegative()||config.predictable?y.ln():_log1pComplex(new Complex(x.toNumber(),0))},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)},"any, any":function anyAny(x,base){return divideScalar(this(x),log(base))}});function _log1pComplex(x){var xRe1p=x.re+1;return new Complex(Math.log(Math.sqrt(xRe1p*xRe1p+x.im*x.im)),Math.atan2(x.im,xRe1p))}})),exports_9("createLog1p",createLog1p),createNthRoots=factory(name$1L="nthRoots",dependencies$1M=["config","typed","divideScalar","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,divideScalar=_ref.divideScalar,Complex=_ref.Complex,_calculateExactResult=[function realPos(val){return new Complex(val,0)},function imagPos(val){return new Complex(0,val)},function realNeg(val){return new Complex(-val,0)},function imagNeg(val){return new Complex(0,-val)}];function _nthComplexRoots(a,root){if(root<0)throw new Error("Root must be greater than zero");if(0===root)throw new Error("Root must be non-zero");if(root%1!=0)throw new Error("Root must be an integer");if(0===a||0===a.abs())return[new Complex(0,0)];var aIsNumeric="number"==typeof a,offset;(aIsNumeric||0===a.re||0===a.im)&&(offset=aIsNumeric?2*+(a<0):0===a.im?2*+(a.re<0):2*+(a.im<0)+1);for(var arg=a.arg(),abs=a.abs(),roots=[],r=Math.pow(abs,1/root),k=0;k<root;k++){var halfPiFactor=(offset+4*k)/root;halfPiFactor!==Math.round(halfPiFactor)?roots.push(new Complex({r:r,phi:(arg+2*Math.PI*k)/root})):roots.push(_calculateExactResult[halfPiFactor%4](r))}return roots}return typed(name$1L,{Complex:function Complex(x){return _nthComplexRoots(x,2)},"Complex, number":_nthComplexRoots})})),exports_9("createNthRoots",createNthRoots),createDotPow=factory(name$1M="dotPow",dependencies$1N=["typed","equalScalar","matrix","pow","DenseMatrix"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar,matrix=_ref.matrix,pow=_ref.pow,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1M,{"any, any":pow,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,pow,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,pow,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,pow,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,pow)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm11(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createDotPow",createDotPow),createDotDivide=factory(name$1N="dotDivide",dependencies$1O=["typed","matrix","equalScalar","divideScalar","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,divideScalar=_ref.divideScalar,DenseMatrix=_ref.DenseMatrix,algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1N,{"any, any":divideScalar,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,divideScalar,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,divideScalar,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,divideScalar,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,divideScalar)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm11(x,y,divideScalar,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,divideScalar,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,divideScalar,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,divideScalar,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,divideScalar,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,divideScalar,!0).valueOf()}})})),exports_9("createDotDivide",createDotDivide),createLsolve=factory(name$1O="lsolve",dependencies$1P=["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,subtract=_ref.subtract,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,solveValidation=createSolveValidation({DenseMatrix:DenseMatrix});return typed(name$1O,{"SparseMatrix, Array | Matrix":function SparseMatrixArrayMatrix(m,b){return _sparseForwardSubstitution(m,b)},"DenseMatrix, Array | Matrix":function DenseMatrixArrayMatrix(m,b){return _denseForwardSubstitution(m,b)},"Array, Array | Matrix":function ArrayArrayMatrix(a,b){var m,r;return _denseForwardSubstitution(matrix(a),b).valueOf()}});function _denseForwardSubstitution(m,b){for(var bdata=(b=solveValidation(m,b,!0))._data,rows=m._size[0],columns=m._size[1],x=[],data=m._data,j=0;j<columns;j++){var bj=bdata[j][0]||0,xj=void 0;if(equalScalar(bj,0))xj=0;else{var vjj=data[j][j];if(equalScalar(vjj,0))throw new Error("Linear system cannot be solved since matrix is singular");xj=divideScalar(bj,vjj);for(var i=j+1;i<rows;i++)bdata[i]=[subtract(bdata[i][0]||0,multiplyScalar(xj,data[i][j]))]}x[j]=[xj]}return new DenseMatrix({data:x,size:[rows,1]})}function _sparseForwardSubstitution(m,b){for(var bdata=(b=solveValidation(m,b,!0))._data,rows=m._size[0],columns=m._size[1],values=m._values,index=m._index,ptr=m._ptr,i,k,x=[],j=0;j<columns;j++){var bj=bdata[j][0]||0;if(equalScalar(bj,0))x[j]=[0];else{var vjj=0,jvalues=[],jindex=[],l=ptr[j+1];for(k=ptr[j];k<l;k++)(i=index[k])===j?vjj=values[k]:i>j&&(jvalues.push(values[k]),jindex.push(i));if(equalScalar(vjj,0))throw new Error("Linear system cannot be solved since matrix is singular");var xj=divideScalar(bj,vjj);for(k=0,l=jindex.length;k<l;k++)bdata[i=jindex[k]]=[subtract(bdata[i][0]||0,multiplyScalar(xj,jvalues[k]))];x[j]=[xj]}}return new DenseMatrix({data:x,size:[rows,1]})}})),exports_9("createLsolve",createLsolve),createUsolve=factory(name$1P="usolve",dependencies$1Q=["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,subtract=_ref.subtract,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,solveValidation=createSolveValidation({DenseMatrix:DenseMatrix});return typed(name$1P,{"SparseMatrix, Array | Matrix":function SparseMatrixArrayMatrix(m,b){return _sparseBackwardSubstitution(m,b)},"DenseMatrix, Array | Matrix":function DenseMatrixArrayMatrix(m,b){return _denseBackwardSubstitution(m,b)},"Array, Array | Matrix":function ArrayArrayMatrix(a,b){var m,r;return _denseBackwardSubstitution(matrix(a),b).valueOf()}});function _denseBackwardSubstitution(m,b){for(var bdata=(b=solveValidation(m,b,!0))._data,rows=m._size[0],columns=m._size[1],x=[],data=m._data,j=columns-1;j>=0;j--){var bj=bdata[j][0]||0,xj=void 0;if(equalScalar(bj,0))xj=0;else{var vjj=data[j][j];if(equalScalar(vjj,0))throw new Error("Linear system cannot be solved since matrix is singular");xj=divideScalar(bj,vjj);for(var i=j-1;i>=0;i--)bdata[i]=[subtract(bdata[i][0]||0,multiplyScalar(xj,data[i][j]))]}x[j]=[xj]}return new DenseMatrix({data:x,size:[rows,1]})}function _sparseBackwardSubstitution(m,b){for(var bdata=(b=solveValidation(m,b,!0))._data,rows=m._size[0],columns=m._size[1],values=m._values,index=m._index,ptr=m._ptr,i,k,x=[],j=columns-1;j>=0;j--){var bj=bdata[j][0]||0;if(equalScalar(bj,0))x[j]=[0];else{var vjj=0,jvalues=[],jindex=[],f=ptr[j],l=ptr[j+1];for(k=l-1;k>=f;k--)(i=index[k])===j?vjj=values[k]:i<j&&(jvalues.push(values[k]),jindex.push(i));if(equalScalar(vjj,0))throw new Error("Linear system cannot be solved since matrix is singular");var xj=divideScalar(bj,vjj);for(k=0,l=jindex.length;k<l;k++)bdata[i=jindex[k]]=[subtract(bdata[i][0],multiplyScalar(xj,jvalues[k]))];x[j]=[xj]}}return new DenseMatrix({data:x,size:[rows,1]})}})),exports_9("createUsolve",createUsolve),createAlgorithm08=factory(name$1Q="algorithm08",dependencies$1R=["typed","equalScalar"],(function(_ref){var typed=_ref.typed,equalScalar=_ref.equalScalar;return function algorithm08(a,b,callback){var avalues=a._values,aindex=a._index,aptr=a._ptr,asize=a._size,adt=a._datatype,bvalues=b._values,bindex=b._index,bptr=b._ptr,bsize=b._size,bdt=b._datatype;if(asize.length!==bsize.length)throw new DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError("Dimension mismatch. Matrix A ("+asize+") must match Matrix B ("+bsize+")");if(!avalues||!bvalues)throw new Error("Cannot perform operation on Pattern Sparse Matrices");var rows=asize[0],columns=asize[1],dt,eq=equalScalar,zero=0,cf=callback;"string"==typeof adt&&adt===bdt&&(dt=adt,eq=typed.find(equalScalar,[dt,dt]),zero=typed.convert(0,dt),cf=typed.find(callback,[dt,dt]));for(var cvalues=[],cindex=[],cptr=[],x=[],w=[],k,k0,k1,i,j=0;j<columns;j++){cptr[j]=cindex.length;var mark=j+1;for(k0=aptr[j],k1=aptr[j+1],k=k0;k<k1;k++)w[i=aindex[k]]=mark,x[i]=avalues[k],cindex.push(i);for(k0=bptr[j],k1=bptr[j+1],k=k0;k<k1;k++)w[i=bindex[k]]===mark&&(x[i]=cf(x[i],bvalues[k]));for(k=cptr[j];k<cindex.length;){var v=x[i=cindex[k]];eq(v,zero)?cindex.splice(k,1):(cvalues.push(v),k++)}}return cptr[columns]=cindex.length,a.createSparseMatrix({values:cvalues,index:cindex,ptr:cptr,size:[rows,columns],datatype:dt})}})),createLeftShift=factory(name$1R="leftShift",dependencies$1S=["typed","matrix","equalScalar","zeros","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,zeros=_ref.zeros,DenseMatrix=_ref.DenseMatrix,algorithm01=createAlgorithm01({typed:typed}),algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm08=createAlgorithm08({typed:typed,equalScalar:equalScalar}),algorithm10=createAlgorithm10({typed:typed,DenseMatrix:DenseMatrix}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1R,{"number, number":leftShiftNumber,"BigNumber, BigNumber":leftShiftBigNumber,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm08(x,y,this,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm01(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, number | BigNumber":function SparseMatrixNumberBigNumber(x,y){return equalScalar(y,0)?x.clone():algorithm11(x,y,this,!1)},"DenseMatrix, number | BigNumber":function DenseMatrixNumberBigNumber(x,y){return equalScalar(y,0)?x.clone():algorithm14(x,y,this,!1)},"number | BigNumber, SparseMatrix":function numberBigNumberSparseMatrix(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm10(y,x,this,!0)},"number | BigNumber, DenseMatrix":function numberBigNumberDenseMatrix(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm14(y,x,this,!0)},"Array, number | BigNumber":function ArrayNumberBigNumber(x,y){return this(matrix(x),y).valueOf()},"number | BigNumber, Array":function numberBigNumberArray(x,y){return this(x,matrix(y)).valueOf()}})})),exports_9("createLeftShift",createLeftShift),createRightArithShift=factory(name$1S="rightArithShift",dependencies$1T=["typed","matrix","equalScalar","zeros","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,zeros=_ref.zeros,DenseMatrix=_ref.DenseMatrix,algorithm01=createAlgorithm01({typed:typed}),algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm08=createAlgorithm08({typed:typed,equalScalar:equalScalar}),algorithm10=createAlgorithm10({typed:typed,DenseMatrix:DenseMatrix}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1S,{"number, number":rightArithShiftNumber,"BigNumber, BigNumber":rightArithShiftBigNumber,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm08(x,y,this,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm01(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, number | BigNumber":function SparseMatrixNumberBigNumber(x,y){return equalScalar(y,0)?x.clone():algorithm11(x,y,this,!1)},"DenseMatrix, number | BigNumber":function DenseMatrixNumberBigNumber(x,y){return equalScalar(y,0)?x.clone():algorithm14(x,y,this,!1)},"number | BigNumber, SparseMatrix":function numberBigNumberSparseMatrix(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm10(y,x,this,!0)},"number | BigNumber, DenseMatrix":function numberBigNumberDenseMatrix(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm14(y,x,this,!0)},"Array, number | BigNumber":function ArrayNumberBigNumber(x,y){return this(matrix(x),y).valueOf()},"number | BigNumber, Array":function numberBigNumberArray(x,y){return this(x,matrix(y)).valueOf()}})})),exports_9("createRightArithShift",createRightArithShift),createRightLogShift=factory(name$1T="rightLogShift",dependencies$1U=["typed","matrix","equalScalar","zeros","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,zeros=_ref.zeros,DenseMatrix=_ref.DenseMatrix,algorithm01=createAlgorithm01({typed:typed}),algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm08=createAlgorithm08({typed:typed,equalScalar:equalScalar}),algorithm10=createAlgorithm10({typed:typed,DenseMatrix:DenseMatrix}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1T,{"number, number":rightLogShiftNumber,"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm08(x,y,this,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm01(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, number | BigNumber":function SparseMatrixNumberBigNumber(x,y){return equalScalar(y,0)?x.clone():algorithm11(x,y,this,!1)},"DenseMatrix, number | BigNumber":function DenseMatrixNumberBigNumber(x,y){return equalScalar(y,0)?x.clone():algorithm14(x,y,this,!1)},"number | BigNumber, SparseMatrix":function numberBigNumberSparseMatrix(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm10(y,x,this,!0)},"number | BigNumber, DenseMatrix":function numberBigNumberDenseMatrix(x,y){return equalScalar(x,0)?zeros(y.size(),y.storage()):algorithm14(y,x,this,!0)},"Array, number | BigNumber":function ArrayNumberBigNumber(x,y){return this(matrix(x),y).valueOf()},"number | BigNumber, Array":function numberBigNumberArray(x,y){return this(x,matrix(y)).valueOf()}})})),exports_9("createRightLogShift",createRightLogShift),name$1U="and",createAnd=factory("and",dependencies$1V=["typed","matrix","equalScalar","zeros","not"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,zeros=_ref.zeros,not=_ref.not,algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm06=createAlgorithm06({typed:typed,equalScalar:equalScalar}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("and",{"number, number":andNumber,"Complex, Complex":function ComplexComplex(x,y){return!(0===x.re&&0===x.im||0===y.re&&0===y.im)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return!(x.isZero()||y.isZero()||x.isNaN()||y.isNaN())},"Unit, Unit":function UnitUnit(x,y){return this(x.value||0,y.value||0)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm06(x,y,this,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm02(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return not(y)?zeros(x.size(),x.storage()):algorithm11(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return not(y)?zeros(x.size(),x.storage()):algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return not(x)?zeros(x.size(),x.storage()):algorithm11(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return not(x)?zeros(x.size(),x.storage()):algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return this(matrix(x),y).valueOf()},"any, Array":function anyArray(x,y){return this(x,matrix(y)).valueOf()}})})),exports_9("createAnd",createAnd),createCompare=factory(name$1V="compare",dependencies$1W=["typed","config","matrix","equalScalar","BigNumber","Fraction","DenseMatrix"],(function(_ref){var typed=_ref.typed,config=_ref.config,equalScalar=_ref.equalScalar,matrix=_ref.matrix,BigNumber=_ref.BigNumber,Fraction=_ref.Fraction,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm05=createAlgorithm05({typed:typed,equalScalar:equalScalar}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1V,{"boolean, boolean":function booleanBoolean(x,y){return x===y?0:x>y?1:-1},"number, number":function numberNumber(x,y){return nearlyEqual(x,y,config.epsilon)?0:x>y?1:-1},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return nearlyEqual$1(x,y,config.epsilon)?new BigNumber(0):new BigNumber(x.cmp(y))},"Fraction, Fraction":function FractionFraction(x,y){return new Fraction(x.compare(y))},"Complex, Complex":function ComplexComplex(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function UnitUnit(x,y){if(!x.equalBase(y))throw new Error("Cannot compare units with different base");return this(x.value,y.value)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm05(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createCompare",createCompare),createCompareNatural=factory(name$1W="compareNatural",dependencies$1X=["typed","compare"],(function(_ref){var typed=_ref.typed,compare=_ref.compare,compareBooleans=compare.signatures["boolean,boolean"];return typed(name$1W,{"any, any":function anyAny(x,y){var typeX=typeOf(x),typeY=typeOf(y),c;if(!("number"!==typeX&&"BigNumber"!==typeX&&"Fraction"!==typeX||"number"!==typeY&&"BigNumber"!==typeY&&"Fraction"!==typeY))return"0"!==(c=compare(x,y)).toString()?c>0?1:-1:javascript_natural_sort_js_1.default(typeX,typeY);if("Array"===typeX||"Matrix"===typeX||"Array"===typeY||"Matrix"===typeY)return 0!==(c=compareMatricesAndArrays(this,x,y))?c:javascript_natural_sort_js_1.default(typeX,typeY);if(typeX!==typeY)return javascript_natural_sort_js_1.default(typeX,typeY);if("Complex"===typeX)return compareComplexNumbers(x,y);if("Unit"===typeX)return x.equalBase(y)?this(x.value,y.value):compareArrays(this,x.formatUnits(),y.formatUnits());if("boolean"===typeX)return compareBooleans(x,y);if("string"===typeX)return javascript_natural_sort_js_1.default(x,y);if("Object"===typeX)return compareObjects(this,x,y);if("null"===typeX)return 0;if("undefined"===typeX)return 0;throw new TypeError('Unsupported type of value "'+typeX+'"')}});function compareMatricesAndArrays(compareNatural,x,y){return isSparseMatrix(x)&&isSparseMatrix(y)?compareArrays(compareNatural,x.toJSON().values,y.toJSON().values):isSparseMatrix(x)?compareMatricesAndArrays(compareNatural,x.toArray(),y):isSparseMatrix(y)?compareMatricesAndArrays(compareNatural,x,y.toArray()):isDenseMatrix(x)?compareMatricesAndArrays(compareNatural,x.toJSON().data,y):isDenseMatrix(y)?compareMatricesAndArrays(compareNatural,x,y.toJSON().data):Array.isArray(x)?Array.isArray(y)?compareArrays(compareNatural,x,y):compareMatricesAndArrays(compareNatural,x,[y]):compareMatricesAndArrays(compareNatural,[x],y)}function compareArrays(compareNatural,x,y){for(var i=0,ii=Math.min(x.length,y.length);i<ii;i++){var v=compareNatural(x[i],y[i]);if(0!==v)return v}return x.length>y.length?1:x.length<y.length?-1:0}function compareObjects(compareNatural,x,y){var keysX=Object.keys(x),keysY=Object.keys(y);keysX.sort(javascript_natural_sort_js_1.default),keysY.sort(javascript_natural_sort_js_1.default);var c=compareArrays(compareNatural,keysX,keysY);if(0!==c)return c;for(var i=0;i<keysX.length;i++){var v=compareNatural(x[keysX[i]],y[keysY[i]]);if(0!==v)return v}return 0}})),exports_9("createCompareNatural",createCompareNatural),createCompareText=factory(name$1X="compareText",dependencies$1Y=["typed","matrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1X,{"any, any":compareText,"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,compareText)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,compareText,!1)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,compareText,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,compareText,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,compareText,!0).valueOf()}})})),exports_9("createCompareText",createCompareText),name$1Y="equal",createEqual=factory("equal",dependencies$1Z=["typed","matrix","equalScalar","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("equal",{"any, any":function anyAny(x,y){return null===x?null===y:null===y?null===x:void 0===x?void 0===y:void 0===y?void 0===x:equalScalar(x,y)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,equalScalar)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,equalScalar,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,equalScalar,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,equalScalar)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,equalScalar,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,equalScalar,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,equalScalar,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,equalScalar,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,equalScalar,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,equalScalar,!0).valueOf()}})})),exports_9("createEqual",createEqual),createEqualNumber=factory("equal",["typed","equalScalar"],(function(_ref2){var typed=_ref2.typed,equalScalar=_ref2.equalScalar;return typed("equal",{"any, any":function anyAny(x,y){return null===x?null===y:null===y?null===x:void 0===x?void 0===y:void 0===y?void 0===x:equalScalar(x,y)}})})),createEqualText=factory(name$1Z="equalText",dependencies$1_=["typed","compareText","isZero"],(function(_ref){var typed=_ref.typed,compareText=_ref.compareText,isZero=_ref.isZero;return typed(name$1Z,{"any, any":function anyAny(x,y){return isZero(compareText(x,y))}})})),exports_9("createEqualText",createEqualText),createSmaller=factory(name$1_="smaller",dependencies$1$=["typed","config","matrix","DenseMatrix"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1_,{"boolean, boolean":function booleanBoolean(x,y){return x<y},"number, number":function numberNumber(x,y){return x<y&&!nearlyEqual(x,y,config.epsilon)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.lt(y)&&!nearlyEqual$1(x,y,config.epsilon)},"Fraction, Fraction":function FractionFraction(x,y){return-1===x.compare(y)},"Complex, Complex":function ComplexComplex(x,y){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function UnitUnit(x,y){if(!x.equalBase(y))throw new Error("Cannot compare units with different base");return this(x.value,y.value)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createSmaller",createSmaller),createSmallerEq=factory(name$1$="smallerEq",dependencies$20=["typed","config","matrix","DenseMatrix"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$1$,{"boolean, boolean":function booleanBoolean(x,y){return x<=y},"number, number":function numberNumber(x,y){return x<=y||nearlyEqual(x,y,config.epsilon)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.lte(y)||nearlyEqual$1(x,y,config.epsilon)},"Fraction, Fraction":function FractionFraction(x,y){return 1!==x.compare(y)},"Complex, Complex":function ComplexComplex(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function UnitUnit(x,y){if(!x.equalBase(y))throw new Error("Cannot compare units with different base");return this(x.value,y.value)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createSmallerEq",createSmallerEq),createLarger=factory(name$20="larger",dependencies$21=["typed","config","matrix","DenseMatrix"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$20,{"boolean, boolean":function booleanBoolean(x,y){return x>y},"number, number":function numberNumber(x,y){return x>y&&!nearlyEqual(x,y,config.epsilon)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.gt(y)&&!nearlyEqual$1(x,y,config.epsilon)},"Fraction, Fraction":function FractionFraction(x,y){return 1===x.compare(y)},"Complex, Complex":function ComplexComplex(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function UnitUnit(x,y){if(!x.equalBase(y))throw new Error("Cannot compare units with different base");return this(x.value,y.value)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createLarger",createLarger),createLargerEq=factory(name$21="largerEq",dependencies$22=["typed","config","matrix","DenseMatrix"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed(name$21,{"boolean, boolean":function booleanBoolean(x,y){return x>=y},"number, number":function numberNumber(x,y){return x>=y||nearlyEqual(x,y,config.epsilon)},"BigNumber, BigNumber":function BigNumberBigNumber(x,y){return x.gte(y)||nearlyEqual$1(x,y,config.epsilon)},"Fraction, Fraction":function FractionFraction(x,y){return-1!==x.compare(y)},"Complex, Complex":function ComplexComplex(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function UnitUnit(x,y){if(!x.equalBase(y))throw new Error("Cannot compare units with different base");return this(x.value,y.value)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,this)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,this,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,this,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,this,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createLargerEq",createLargerEq),createDeepEqual=factory(name$22="deepEqual",dependencies$23=["typed","equal"],(function(_ref){var typed=_ref.typed,equal=_ref.equal;return typed(name$22,{"any, any":function anyAny(x,y){return _deepEqual(x.valueOf(),y.valueOf())}});function _deepEqual(x,y){if(Array.isArray(x)){if(Array.isArray(y)){var len=x.length;if(len!==y.length)return!1;for(var i=0;i<len;i++)if(!_deepEqual(x[i],y[i]))return!1;return!0}return!1}return!Array.isArray(y)&&equal(x,y)}})),exports_9("createDeepEqual",createDeepEqual),createUnequal=factory(name$23="unequal",dependencies$24=["typed","config","equalScalar","matrix","DenseMatrix"],(function(_ref){var typed=_ref.typed,config=_ref.config,equalScalar=_ref.equalScalar,matrix=_ref.matrix,DenseMatrix=_ref.DenseMatrix,algorithm03=createAlgorithm03({typed:typed}),algorithm07=createAlgorithm07({typed:typed,DenseMatrix:DenseMatrix}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("unequal",{"any, any":function anyAny(x,y){return null===x?null!==y:null===y?null!==x:void 0===x?void 0!==y:void 0===y?void 0!==x:_unequal(x,y)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm07(x,y,_unequal)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm03(y,x,_unequal,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,_unequal,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,_unequal)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm12(x,y,_unequal,!1)},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,_unequal,!1)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm12(y,x,_unequal,!0)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,_unequal,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,_unequal,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,_unequal,!0).valueOf()}});function _unequal(x,y){return!equalScalar(x,y)}})),exports_9("createUnequal",createUnequal),createUnequalNumber=factory(name$23,["typed","equalScalar"],(function(_ref2){var typed=_ref2.typed,equalScalar=_ref2.equalScalar;return typed(name$23,{"any, any":function anyAny(x,y){return null===x?null!==y:null===y?null!==x:void 0===x?void 0!==y:void 0===y?void 0!==x:!equalScalar(x,y)}})})),createPartitionSelect=factory(name$24="partitionSelect",dependencies$25=["typed","isNumeric","isNaN","compare"],(function(_ref){var typed=_ref.typed,isNumeric=_ref.isNumeric,isNaN=_ref.isNaN,compare=_ref.compare,asc=compare,desc=function desc(a,b){return-compare(a,b)};return typed(name$24,{"Array | Matrix, number":function ArrayMatrixNumber(x,k){return _partitionSelect(x,k,asc)},"Array | Matrix, number, string":function ArrayMatrixNumberString(x,k,compare){if("asc"===compare)return _partitionSelect(x,k,asc);if("desc"===compare)return _partitionSelect(x,k,desc);throw new Error('Compare string must be "asc" or "desc"')},"Array | Matrix, number, function":_partitionSelect});function _partitionSelect(x,k,compare){if(!isInteger(k)||k<0)throw new Error("k must be a non-negative integer");if(isMatrix(x)){var size;if(x.size().length>1)throw new Error("Only one dimensional matrices supported");return quickSelect(x.valueOf(),k,compare)}if(Array.isArray(x))return quickSelect(x,k,compare)}function quickSelect(arr,k,compare){if(k>=arr.length)throw new Error("k out of bounds");for(var i=0;i<arr.length;i++)if(isNumeric(arr[i])&&isNaN(arr[i]))return arr[i];for(var from=0,to=arr.length-1;from<to;){for(var r=from,w=to,pivot=arr[Math.floor(Math.random()*(to-from+1))+from];r<w;)if(compare(arr[r],pivot)>=0){var tmp=arr[w];arr[w]=arr[r],arr[r]=tmp,--w}else++r;compare(arr[r],pivot)>0&&--r,k<=r?to=r:from=r+1}return arr[k]}})),exports_9("createPartitionSelect",createPartitionSelect),name$25="sort",createSort=factory("sort",dependencies$26=["typed","matrix","compare","compareNatural"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,compare=_ref.compare,compareNatural=_ref.compareNatural,compareAsc=compare,compareDesc=function compareDesc(a,b){return-compare(a,b)};return typed("sort",{Array:function Array(x){return _arrayIsVector(x),x.sort(compareAsc)},Matrix:function Matrix(x){return _matrixIsVector(x),matrix(x.toArray().sort(compareAsc),x.storage())},"Array, function":function ArrayFunction(x,_comparator){return _arrayIsVector(x),x.sort(_comparator)},"Matrix, function":function MatrixFunction(x,_comparator){return _matrixIsVector(x),matrix(x.toArray().sort(_comparator),x.storage())},"Array, string":function ArrayString(x,order){return _arrayIsVector(x),x.sort(_comparator(order))},"Matrix, string":function MatrixString(x,order){return _matrixIsVector(x),matrix(x.toArray().sort(_comparator(order)),x.storage())}});function _comparator(order){if("asc"===order)return compareAsc;if("desc"===order)return compareDesc;if("natural"===order)return compareNatural;throw new Error('String "asc", "desc", or "natural" expected')}function _arrayIsVector(array){if(1!==arraySize(array).length)throw new Error("One dimensional array expected")}function _matrixIsVector(matrix){if(1!==matrix.size().length)throw new Error("One dimensional matrix expected")}})),exports_9("createSort",createSort),name$26="max",createMax=factory("max",dependencies$27=["typed","config","numeric","larger"],(function(_ref){var typed=_ref.typed,config=_ref.config,numeric=_ref.numeric,larger=_ref.larger;return typed("max",{"Array | Matrix":_max,"Array | Matrix, number | BigNumber":function ArrayMatrixNumberBigNumber(array,dim){return reduce(array,dim.valueOf(),_largest)},"...":function _(args){if(containsCollections(args))throw new TypeError("Scalar values expected in function max");return _max(args)}});function _largest(x,y){try{return larger(x,y)?x:y}catch(err){throw improveErrorMessage(err,"max",y)}}function _max(array){var res;if(deepForEach(array,(function(value){try{isNaN(value)&&"number"==typeof value?res=NaN:(void 0===res||larger(value,res))&&(res=value)}catch(err){throw improveErrorMessage(err,"max",value)}})),void 0===res)throw new Error("Cannot calculate max of an empty array");return"string"==typeof res&&(res=numeric(res,config.number)),res}})),exports_9("createMax",createMax),name$27="min",createMin=factory("min",dependencies$28=["typed","config","numeric","smaller"],(function(_ref){var typed=_ref.typed,config=_ref.config,numeric=_ref.numeric,smaller=_ref.smaller;return typed("min",{"Array | Matrix":_min,"Array | Matrix, number | BigNumber":function ArrayMatrixNumberBigNumber(array,dim){return reduce(array,dim.valueOf(),_smallest)},"...":function _(args){if(containsCollections(args))throw new TypeError("Scalar values expected in function min");return _min(args)}});function _smallest(x,y){try{return smaller(x,y)?x:y}catch(err){throw improveErrorMessage(err,"min",y)}}function _min(array){var min;if(deepForEach(array,(function(value){try{isNaN(value)&&"number"==typeof value?min=NaN:(void 0===min||smaller(value,min))&&(min=value)}catch(err){throw improveErrorMessage(err,"min",value)}})),void 0===min)throw new Error("Cannot calculate min of an empty array");return"string"==typeof min&&(min=numeric(min,config.number)),min}})),exports_9("createMin",createMin),createImmutableDenseMatrixClass=factory(name$28="ImmutableDenseMatrix",dependencies$29=["smaller","DenseMatrix"],(function(_ref){var smaller=_ref.smaller,DenseMatrix=_ref.DenseMatrix;function ImmutableDenseMatrix(data,datatype){if(!(this instanceof ImmutableDenseMatrix))throw new SyntaxError("Constructor must be called with the new operator");if(datatype&&!isString(datatype))throw new Error("Invalid datatype: "+datatype);if(isMatrix(data)||isArray(data)){var matrix=new DenseMatrix(data,datatype);this._data=matrix._data,this._size=matrix._size,this._datatype=matrix._datatype,this._min=null,this._max=null}else if(data&&isArray(data.data)&&isArray(data.size))this._data=data.data,this._size=data.size,this._datatype=data.datatype,this._min=void 0!==data.min?data.min:null,this._max=void 0!==data.max?data.max:null;else{if(data)throw new TypeError("Unsupported type of data ("+typeOf(data)+")");this._data=[],this._size=[0],this._datatype=datatype,this._min=null,this._max=null}}return ImmutableDenseMatrix.prototype=new DenseMatrix,ImmutableDenseMatrix.prototype.type="ImmutableDenseMatrix",ImmutableDenseMatrix.prototype.isImmutableDenseMatrix=!0,ImmutableDenseMatrix.prototype.subset=function(index){switch(arguments.length){case 1:var m=DenseMatrix.prototype.subset.call(this,index);return isMatrix(m)?new ImmutableDenseMatrix({data:m._data,size:m._size,datatype:m._datatype}):m;case 2:case 3:throw new Error("Cannot invoke set subset on an Immutable Matrix instance");default:throw new SyntaxError("Wrong number of arguments")}},ImmutableDenseMatrix.prototype.set=function(){throw new Error("Cannot invoke set on an Immutable Matrix instance")},ImmutableDenseMatrix.prototype.resize=function(){throw new Error("Cannot invoke resize on an Immutable Matrix instance")},ImmutableDenseMatrix.prototype.reshape=function(){throw new Error("Cannot invoke reshape on an Immutable Matrix instance")},ImmutableDenseMatrix.prototype.clone=function(){return new ImmutableDenseMatrix({data:clone(this._data),size:clone(this._size),datatype:this._datatype})},ImmutableDenseMatrix.prototype.toJSON=function(){return{mathjs:"ImmutableDenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},ImmutableDenseMatrix.fromJSON=function(json){return new ImmutableDenseMatrix(json)},ImmutableDenseMatrix.prototype.swapRows=function(){throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")},ImmutableDenseMatrix.prototype.min=function(){if(null===this._min){var m=null;this.forEach((function(v){(null===m||smaller(v,m))&&(m=v)})),this._min=null!==m?m:void 0}return this._min},ImmutableDenseMatrix.prototype.max=function(){if(null===this._max){var m=null;this.forEach((function(v){(null===m||smaller(m,v))&&(m=v)})),this._max=null!==m?m:void 0}return this._max},ImmutableDenseMatrix}),{isClass:!0}),exports_9("createImmutableDenseMatrixClass",createImmutableDenseMatrixClass),name$29="Index",createIndexClass=factory("Index",dependencies$2a=["ImmutableDenseMatrix"],(function(_ref){var ImmutableDenseMatrix=_ref.ImmutableDenseMatrix;function Index(ranges){if(!(this instanceof Index))throw new SyntaxError("Constructor must be called with the new operator");this._dimensions=[],this._isScalar=!0;for(var i=0,ii=arguments.length;i<ii;i++){var arg=arguments[i];if(isRange(arg))this._dimensions.push(arg),this._isScalar=!1;else if(Array.isArray(arg)||isMatrix(arg)){var m=_createImmutableMatrix(arg.valueOf());this._dimensions.push(m);var size=m.size();1===size.length&&1===size[0]||(this._isScalar=!1)}else if("number"==typeof arg)this._dimensions.push(_createImmutableMatrix([arg]));else{if("string"!=typeof arg)throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");this._dimensions.push(arg)}}}function _createImmutableMatrix(arg){for(var i=0,l=arg.length;i<l;i++)if("number"!=typeof arg[i]||!isInteger(arg[i]))throw new TypeError("Index parameters must be positive integer numbers");return new ImmutableDenseMatrix(arg)}return Index.prototype.type="Index",Index.prototype.isIndex=!0,Index.prototype.clone=function(){var index=new Index;return index._dimensions=clone(this._dimensions),index._isScalar=this._isScalar,index},Index.create=function(ranges){var index=new Index;return Index.apply(index,ranges),index},Index.prototype.size=function(){for(var size=[],i=0,ii=this._dimensions.length;i<ii;i++){var d=this._dimensions[i];size[i]="string"==typeof d?1:d.size()[0]}return size},Index.prototype.max=function(){for(var values=[],i=0,ii=this._dimensions.length;i<ii;i++){var range=this._dimensions[i];values[i]="string"==typeof range?range:range.max()}return values},Index.prototype.min=function(){for(var values=[],i=0,ii=this._dimensions.length;i<ii;i++){var range=this._dimensions[i];values[i]="string"==typeof range?range:range.min()}return values},Index.prototype.forEach=function(callback){for(var i=0,ii=this._dimensions.length;i<ii;i++)callback(this._dimensions[i],i,this)},Index.prototype.dimension=function(dim){return this._dimensions[dim]||null},Index.prototype.isObjectProperty=function(){return 1===this._dimensions.length&&"string"==typeof this._dimensions[0]},Index.prototype.getObjectProperty=function(){return this.isObjectProperty()?this._dimensions[0]:null},Index.prototype.isScalar=function(){return this._isScalar},Index.prototype.toArray=function(){for(var array=[],i=0,ii=this._dimensions.length;i<ii;i++){var dimension=this._dimensions[i];array.push("string"==typeof dimension?dimension:dimension.toArray())}return array},Index.prototype.valueOf=Index.prototype.toArray,Index.prototype.toString=function(){for(var strings=[],i=0,ii=this._dimensions.length;i<ii;i++){var dimension=this._dimensions[i];"string"==typeof dimension?strings.push(JSON.stringify(dimension)):strings.push(dimension.toString())}return"["+strings.join(", ")+"]"},Index.prototype.toJSON=function(){return{mathjs:"Index",dimensions:this._dimensions}},Index.fromJSON=function(json){return Index.create(json.dimensions)},Index}),{isClass:!0}),exports_9("createIndexClass",createIndexClass),createFibonacciHeapClass=factory(name$2a="FibonacciHeap",dependencies$2b=["smaller","larger"],(function(_ref){var smaller=_ref.smaller,larger=_ref.larger,oneOverLogPhi=1/Math.log((1+Math.sqrt(5))/2);function FibonacciHeap(){if(!(this instanceof FibonacciHeap))throw new SyntaxError("Constructor must be called with the new operator");this._minimum=null,this._size=0}function _decreaseKey(minimum,node,key){node.key=key;var parent=node.parent;return parent&&smaller(node.key,parent.key)&&(_cut(minimum,node,parent),_cascadingCut(minimum,parent)),smaller(node.key,minimum.key)&&(minimum=node),minimum}function _cut(minimum,node,parent){node.left.right=node.right,node.right.left=node.left,parent.degree--,parent.child===node&&(parent.child=node.right),0===parent.degree&&(parent.child=null),node.left=minimum,node.right=minimum.right,minimum.right=node,node.right.left=node,node.parent=null,node.mark=!1}function _cascadingCut(minimum,node){var parent=node.parent;parent&&(node.mark?(_cut(minimum,node,parent),_cascadingCut(parent)):node.mark=!0)}FibonacciHeap.prototype.type="FibonacciHeap",FibonacciHeap.prototype.isFibonacciHeap=!0,FibonacciHeap.prototype.insert=function(key,value){var node={key:key,value:value,degree:0};if(this._minimum){var minimum=this._minimum;node.left=minimum,node.right=minimum.right,minimum.right=node,node.right.left=node,smaller(key,minimum.key)&&(this._minimum=node)}else node.left=node,node.right=node,this._minimum=node;return this._size++,node},FibonacciHeap.prototype.size=function(){return this._size},FibonacciHeap.prototype.clear=function(){this._minimum=null,this._size=0},FibonacciHeap.prototype.isEmpty=function(){return 0===this._size},FibonacciHeap.prototype.extractMinimum=function(){var node=this._minimum;if(null===node)return node;for(var minimum=this._minimum,numberOfChildren=node.degree,x=node.child;numberOfChildren>0;){var tempRight=x.right;x.left.right=x.right,x.right.left=x.left,x.left=minimum,x.right=minimum.right,minimum.right=x,x.right.left=x,x.parent=null,x=tempRight,numberOfChildren--}return node.left.right=node.right,node.right.left=node.left,minimum=node===node.right?null:_findMinimumNode(minimum=node.right,this._size),this._size--,this._minimum=minimum,node},FibonacciHeap.prototype.remove=function(node){this._minimum=_decreaseKey(this._minimum,node,-1),this.extractMinimum()};var _linkNodes=function _linkNodes(node,parent){node.left.right=node.right,node.right.left=node.left,node.parent=parent,parent.child?(node.left=parent.child,node.right=parent.child.right,parent.child.right=node,node.right.left=node):(parent.child=node,node.right=node,node.left=node),parent.degree++,node.mark=!1};function _findMinimumNode(minimum,size){var arraySize=Math.floor(Math.log(size)*oneOverLogPhi)+1,array=new Array(arraySize),numRoots=0,x=minimum,y;if(x)for(numRoots++,x=x.right;x!==minimum;)numRoots++,x=x.right;for(;numRoots>0;){for(var d=x.degree,next=x.right;y=array[d];){if(larger(x.key,y.key)){var temp=y;y=x,x=temp}_linkNodes(y,x),array[d]=null,d++}array[d]=x,x=next,numRoots--}minimum=null;for(var i=0;i<arraySize;i++)(y=array[i])&&(minimum?(y.left.right=y.right,y.right.left=y.left,y.left=minimum,y.right=minimum.right,minimum.right=y,y.right.left=y,smaller(y.key,minimum.key)&&(minimum=y)):minimum=y);return minimum}return FibonacciHeap}),{isClass:!0}),exports_9("createFibonacciHeapClass",createFibonacciHeapClass),name$2b="Spa",createSpaClass=factory("Spa",dependencies$2c=["addScalar","equalScalar","FibonacciHeap"],(function(_ref){var addScalar=_ref.addScalar,equalScalar=_ref.equalScalar,FibonacciHeap=_ref.FibonacciHeap;function Spa(){if(!(this instanceof Spa))throw new SyntaxError("Constructor must be called with the new operator");this._values=[],this._heap=new FibonacciHeap}return Spa.prototype.type="Spa",Spa.prototype.isSpa=!0,Spa.prototype.set=function(i,v){if(this._values[i])this._values[i].value=v;else{var node=this._heap.insert(i,v);this._values[i]=node}},Spa.prototype.get=function(i){var node=this._values[i];return node?node.value:0},Spa.prototype.accumulate=function(i,v){var node=this._values[i];node?node.value=addScalar(node.value,v):(node=this._heap.insert(i,v),this._values[i]=node)},Spa.prototype.forEach=function(from,to,callback){var heap=this._heap,values=this._values,nodes=[],node=heap.extractMinimum();for(node&&nodes.push(node);node&&node.key<=to;)node.key>=from&&(equalScalar(node.value,0)||callback(node.key,node.value,this)),(node=heap.extractMinimum())&&nodes.push(node);for(var i=0;i<nodes.length;i++){var n=nodes[i];values[(node=heap.insert(n.key,n.value)).key]=node}},Spa.prototype.swap=function(i,j){var nodei=this._values[i],nodej=this._values[j];if(!nodei&&nodej)nodei=this._heap.insert(i,nodej.value),this._heap.remove(nodej),this._values[i]=nodei,this._values[j]=void 0;else if(nodei&&!nodej)nodej=this._heap.insert(j,nodei.value),this._heap.remove(nodei),this._values[j]=nodej,this._values[i]=void 0;else if(nodei&&nodej){var v=nodei.value;nodei.value=nodej.value,nodej.value=v}},Spa}),{isClass:!0}),exports_9("createSpaClass",createSpaClass),createBigNumberE=memoize((function(BigNumber){return new BigNumber(1).exp()}),hasher),createBigNumberPhi=memoize((function(BigNumber){return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2)}),hasher),createBigNumberPi=memoize((function(BigNumber){return BigNumber.acos(-1)}),hasher),createBigNumberTau=memoize((function(BigNumber){return createBigNumberPi(BigNumber).times(2)}),hasher),name$2c="Unit",createUnitClass=factory("Unit",dependencies$2d=["?on","config","addScalar","subtract","multiplyScalar","divideScalar","pow","abs","fix","round","equal","isNumeric","format","number","Complex","BigNumber","Fraction"],(function(_ref){var on=_ref.on,config=_ref.config,addScalar=_ref.addScalar,subtract=_ref.subtract,multiplyScalar=_ref.multiplyScalar,divideScalar=_ref.divideScalar,pow=_ref.pow,abs=_ref.abs,fix=_ref.fix,round=_ref.round,equal=_ref.equal,isNumeric=_ref.isNumeric,format=_ref.format,number=_ref.number,Complex=_ref.Complex,_BigNumber=_ref.BigNumber,_Fraction=_ref.Fraction,toNumber=number,text,index,c;function Unit(value,name){if(!(this instanceof Unit))throw new Error("Constructor must be called with the new operator");if(null!=value&&!isNumeric(value)&&!isComplex(value))throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");if(void 0!==name&&("string"!=typeof name||""===name))throw new TypeError("Second parameter in Unit constructor must be a string");if(void 0!==name){var u=Unit.parse(name);this.units=u.units,this.dimensions=u.dimensions}else{this.units=[{unit:UNIT_NONE,prefix:PREFIXES.NONE,power:0}],this.dimensions=[];for(var i=0;i<BASE_DIMENSIONS.length;i++)this.dimensions[i]=0}this.value=null!=value?this._normalize(value):null,this.fixPrefix=!1,this.skipAutomaticSimplification=!0}function skipWhitespace(){for(;" "===c||"\t"===c;)next()}function isDigitDot(c){return c>="0"&&c<="9"||"."===c}function isDigit(c){return c>="0"&&c<="9"}function next(){index++,c=text.charAt(index)}function revert(oldIndex){index=oldIndex,c=text.charAt(index)}function parseNumber(){var number="",oldIndex=index;if("+"===c?next():"-"===c&&(number+=c,next()),!isDigitDot(c))return revert(oldIndex),null;if("."===c){if(number+=c,next(),!isDigit(c))return revert(oldIndex),null}else{for(;isDigit(c);)number+=c,next();"."===c&&(number+=c,next())}for(;isDigit(c);)number+=c,next();if("E"===c||"e"===c){var tentativeNumber="",tentativeIndex=index;if(tentativeNumber+=c,next(),"+"!==c&&"-"!==c||(tentativeNumber+=c,next()),!isDigit(c))return revert(tentativeIndex),number;for(number+=tentativeNumber;isDigit(c);)number+=c,next()}return number}function parseUnit(){for(var unitName="",code=text.charCodeAt(index);code>=48&&code<=57||code>=65&&code<=90||code>=97&&code<=122;)unitName+=c,next(),code=text.charCodeAt(index);return((code=unitName.charCodeAt(0))>=65&&code<=90||code>=97&&code<=122)&&unitName||null}function parseCharacter(toFind){return c===toFind?(next(),toFind):null}function _findUnit(str){if(hasOwnProperty(UNITS,str)){var unit=UNITS[str],prefix;return{unit:unit,prefix:unit.prefixes[""]}}for(var _name in UNITS)if(hasOwnProperty(UNITS,_name)&&endsWith(str,_name)){var _unit=UNITS[_name],prefixLen=str.length-_name.length,prefixName=str.substring(0,prefixLen),_prefix=hasOwnProperty(_unit.prefixes,prefixName)?_unit.prefixes[prefixName]:void 0;if(void 0!==_prefix)return{unit:_unit,prefix:_prefix}}return null}function getNumericIfUnitless(unit){return unit.equalBase(BASE_UNITS.NONE)&&null!==unit.value&&!config.predictable?unit.value:unit}Unit.prototype.type="Unit",Unit.prototype.isUnit=!0,Unit.parse=function(str,options){if(options=options||{},index=-1,c="","string"!=typeof(text=str))throw new TypeError("Invalid argument in Unit.parse, string expected");var unit=new Unit;unit.units=[];var powerMultiplierCurrent=1,expectingUnit=!1;next(),skipWhitespace();var valueStr=parseNumber(),value=null;if(valueStr){if("BigNumber"===config.number)value=new _BigNumber(valueStr);else if("Fraction"===config.number)try{value=new _Fraction(valueStr)}catch(err){value=parseFloat(valueStr)}else value=parseFloat(valueStr);skipWhitespace(),parseCharacter("*")?(powerMultiplierCurrent=1,expectingUnit=!0):parseCharacter("/")&&(powerMultiplierCurrent=-1,expectingUnit=!0)}for(var powerMultiplierStack=[],powerMultiplierStackProduct=1;;){for(skipWhitespace();"("===c;)powerMultiplierStack.push(powerMultiplierCurrent),powerMultiplierStackProduct*=powerMultiplierCurrent,powerMultiplierCurrent=1,next(),skipWhitespace();var uStr=void 0;if(!c)break;var oldC=c;if(null===(uStr=parseUnit()))throw new SyntaxError('Unexpected "'+oldC+'" in "'+text+'" at index '+index.toString());var res=_findUnit(uStr);if(null===res)throw new SyntaxError('Unit "'+uStr+'" not found.');var power=powerMultiplierCurrent*powerMultiplierStackProduct;if(skipWhitespace(),parseCharacter("^")){skipWhitespace();var p=parseNumber();if(null===p)throw new SyntaxError('In "'+str+'", "^" must be followed by a floating-point number');power*=p}unit.units.push({unit:res.unit,prefix:res.prefix,power:power});for(var i=0;i<BASE_DIMENSIONS.length;i++)unit.dimensions[i]+=(res.unit.dimensions[i]||0)*power;for(skipWhitespace();")"===c;){if(0===powerMultiplierStack.length)throw new SyntaxError('Unmatched ")" in "'+text+'" at index '+index.toString());powerMultiplierStackProduct/=powerMultiplierStack.pop(),next(),skipWhitespace()}if(expectingUnit=!1,parseCharacter("*")?(powerMultiplierCurrent=1,expectingUnit=!0):parseCharacter("/")?(powerMultiplierCurrent=-1,expectingUnit=!0):powerMultiplierCurrent=1,res.unit.base){var baseDim=res.unit.base.key;UNIT_SYSTEMS.auto[baseDim]={unit:res.unit,prefix:res.prefix}}}if(skipWhitespace(),c)throw new SyntaxError('Could not parse: "'+str+'"');if(expectingUnit)throw new SyntaxError('Trailing characters: "'+str+'"');if(0!==powerMultiplierStack.length)throw new SyntaxError('Unmatched "(" in "'+text+'"');if(0===unit.units.length&&!options.allowNoUnits)throw new SyntaxError('"'+str+'" contains no units');return unit.value=void 0!==value?unit._normalize(value):null,unit},Unit.prototype.clone=function(){var unit=new Unit;unit.fixPrefix=this.fixPrefix,unit.skipAutomaticSimplification=this.skipAutomaticSimplification,unit.value=clone(this.value),unit.dimensions=this.dimensions.slice(0),unit.units=[];for(var i=0;i<this.units.length;i++)for(var p in unit.units[i]={},this.units[i])hasOwnProperty(this.units[i],p)&&(unit.units[i][p]=this.units[i][p]);return unit},Unit.prototype._isDerived=function(){return 0!==this.units.length&&(this.units.length>1||Math.abs(this.units[0].power-1)>1e-15)},Unit.prototype._normalize=function(value){var unitValue,unitOffset,unitPower,unitPrefixValue,convert;if(null==value||0===this.units.length)return value;if(this._isDerived()){var res=value;convert=Unit._getNumberConverter(typeOf(value));for(var i=0;i<this.units.length;i++)unitValue=convert(this.units[i].unit.value),unitPrefixValue=convert(this.units[i].prefix.value),unitPower=convert(this.units[i].power),res=multiplyScalar(res,pow(multiplyScalar(unitValue,unitPrefixValue),unitPower));return res}return unitValue=(convert=Unit._getNumberConverter(typeOf(value)))(this.units[0].unit.value),unitOffset=convert(this.units[0].unit.offset),unitPrefixValue=convert(this.units[0].prefix.value),multiplyScalar(addScalar(value,unitOffset),multiplyScalar(unitValue,unitPrefixValue))},Unit.prototype._denormalize=function(value,prefixValue){var unitValue,unitOffset,unitPower,unitPrefixValue,convert;if(null==value||0===this.units.length)return value;if(this._isDerived()){var res=value;convert=Unit._getNumberConverter(typeOf(value));for(var i=0;i<this.units.length;i++)unitValue=convert(this.units[i].unit.value),unitPrefixValue=convert(this.units[i].prefix.value),unitPower=convert(this.units[i].power),res=divideScalar(res,pow(multiplyScalar(unitValue,unitPrefixValue),unitPower));return res}return unitValue=(convert=Unit._getNumberConverter(typeOf(value)))(this.units[0].unit.value),unitPrefixValue=convert(this.units[0].prefix.value),unitOffset=convert(this.units[0].unit.offset),subtract(divideScalar(divideScalar(value,unitValue),null==prefixValue?unitPrefixValue:prefixValue),unitOffset)},Unit.isValuelessUnit=function(name){return null!==_findUnit(name)},Unit.prototype.hasBase=function(base){if("string"==typeof base&&(base=BASE_UNITS[base]),!base)return!1;for(var i=0;i<BASE_DIMENSIONS.length;i++)if(Math.abs((this.dimensions[i]||0)-(base.dimensions[i]||0))>1e-12)return!1;return!0},Unit.prototype.equalBase=function(other){for(var i=0;i<BASE_DIMENSIONS.length;i++)if(Math.abs((this.dimensions[i]||0)-(other.dimensions[i]||0))>1e-12)return!1;return!0},Unit.prototype.equals=function(other){return this.equalBase(other)&&equal(this.value,other.value)},Unit.prototype.multiply=function(other){for(var res=this.clone(),i=0;i<BASE_DIMENSIONS.length;i++)res.dimensions[i]=(this.dimensions[i]||0)+(other.dimensions[i]||0);for(var _i=0;_i<other.units.length;_i++){var inverted=_objectSpread$1({},other.units[_i]);res.units.push(inverted)}if(null!==this.value||null!==other.value){var valThis=null===this.value?this._normalize(1):this.value,valOther=null===other.value?other._normalize(1):other.value;res.value=multiplyScalar(valThis,valOther)}else res.value=null;return res.skipAutomaticSimplification=!1,getNumericIfUnitless(res)},Unit.prototype.divide=function(other){for(var res=this.clone(),i=0;i<BASE_DIMENSIONS.length;i++)res.dimensions[i]=(this.dimensions[i]||0)-(other.dimensions[i]||0);for(var _i2=0;_i2<other.units.length;_i2++){var inverted=_objectSpread$1(_objectSpread$1({},other.units[_i2]),{},{power:-other.units[_i2].power});res.units.push(inverted)}if(null!==this.value||null!==other.value){var valThis=null===this.value?this._normalize(1):this.value,valOther=null===other.value?other._normalize(1):other.value;res.value=divideScalar(valThis,valOther)}else res.value=null;return res.skipAutomaticSimplification=!1,getNumericIfUnitless(res)},Unit.prototype.pow=function(p){for(var res=this.clone(),i=0;i<BASE_DIMENSIONS.length;i++)res.dimensions[i]=(this.dimensions[i]||0)*p;for(var _i3=0;_i3<res.units.length;_i3++)res.units[_i3].power*=p;return null!==res.value?res.value=pow(res.value,p):res.value=null,res.skipAutomaticSimplification=!1,getNumericIfUnitless(res)},Unit.prototype.abs=function(){var ret=this.clone();for(var i in ret.value=null!==ret.value?abs(ret.value):null,ret.units)"VA"!==ret.units[i].unit.name&&"VAR"!==ret.units[i].unit.name||(ret.units[i].unit=UNITS.W);return ret},Unit.prototype.to=function(valuelessUnit){var other,value=null===this.value?this._normalize(1):this.value;if("string"==typeof valuelessUnit){if(other=Unit.parse(valuelessUnit),!this.equalBase(other))throw new Error("Units do not match ('".concat(other.toString(),"' != '").concat(this.toString(),"')"));if(null!==other.value)throw new Error("Cannot convert to a unit with a value");return other.value=clone(value),other.fixPrefix=!0,other.skipAutomaticSimplification=!0,other}if(isUnit(valuelessUnit)){if(!this.equalBase(valuelessUnit))throw new Error("Units do not match ('".concat(valuelessUnit.toString(),"' != '").concat(this.toString(),"')"));if(null!==valuelessUnit.value)throw new Error("Cannot convert to a unit with a value");return(other=valuelessUnit.clone()).value=clone(value),other.fixPrefix=!0,other.skipAutomaticSimplification=!0,other}throw new Error("String or Unit expected as parameter")},Unit.prototype.toNumber=function(valuelessUnit){return toNumber(this.toNumeric(valuelessUnit))},Unit.prototype.toNumeric=function(valuelessUnit){var other;return(other=valuelessUnit?this.to(valuelessUnit):this.clone())._isDerived()||0===other.units.length?other._denormalize(other.value):other._denormalize(other.value,other.units[0].prefix.value)},Unit.prototype.toString=function(){return this.format()},Unit.prototype.toJSON=function(){return{mathjs:"Unit",value:this._denormalize(this.value),unit:this.formatUnits(),fixPrefix:this.fixPrefix}},Unit.fromJSON=function(json){var unit=new Unit(json.value,json.unit);return unit.fixPrefix=json.fixPrefix||!1,unit},Unit.prototype.valueOf=Unit.prototype.toString,Unit.prototype.simplify=function(){var ret=this.clone(),proposedUnitList=[],matchingBase,matchingUnit;for(var key in currentUnitSystem)if(hasOwnProperty(currentUnitSystem,key)&&ret.hasBase(BASE_UNITS[key])){matchingBase=key;break}if("NONE"===matchingBase)ret.units=[];else if(matchingBase&&hasOwnProperty(currentUnitSystem,matchingBase)&&(matchingUnit=currentUnitSystem[matchingBase]),matchingUnit)ret.units=[{unit:matchingUnit.unit,prefix:matchingUnit.prefix,power:1}];else{for(var missingBaseDim=!1,i=0;i<BASE_DIMENSIONS.length;i++){var baseDim=BASE_DIMENSIONS[i];Math.abs(ret.dimensions[i]||0)>1e-12&&(hasOwnProperty(currentUnitSystem,baseDim)?proposedUnitList.push({unit:currentUnitSystem[baseDim].unit,prefix:currentUnitSystem[baseDim].prefix,power:ret.dimensions[i]||0}):missingBaseDim=!0)}proposedUnitList.length<ret.units.length&&!missingBaseDim&&(ret.units=proposedUnitList)}return ret},Unit.prototype.toSI=function(){for(var ret=this.clone(),proposedUnitList=[],i=0;i<BASE_DIMENSIONS.length;i++){var baseDim=BASE_DIMENSIONS[i];if(Math.abs(ret.dimensions[i]||0)>1e-12){if(!hasOwnProperty(UNIT_SYSTEMS.si,baseDim))throw new Error("Cannot express custom unit "+baseDim+" in SI units");proposedUnitList.push({unit:UNIT_SYSTEMS.si[baseDim].unit,prefix:UNIT_SYSTEMS.si[baseDim].prefix,power:ret.dimensions[i]||0})}}return ret.units=proposedUnitList,ret.fixPrefix=!0,ret.skipAutomaticSimplification=!0,ret},Unit.prototype.formatUnits=function(){for(var strNum="",strDen="",nNum=0,nDen=0,i=0;i<this.units.length;i++)this.units[i].power>0?(nNum++,strNum+=" "+this.units[i].prefix.name+this.units[i].unit.name,Math.abs(this.units[i].power-1)>1e-15&&(strNum+="^"+this.units[i].power)):this.units[i].power<0&&nDen++;if(nDen>0)for(var _i4=0;_i4<this.units.length;_i4++)this.units[_i4].power<0&&(nNum>0?(strDen+=" "+this.units[_i4].prefix.name+this.units[_i4].unit.name,Math.abs(this.units[_i4].power+1)>1e-15&&(strDen+="^"+-this.units[_i4].power)):(strDen+=" "+this.units[_i4].prefix.name+this.units[_i4].unit.name,strDen+="^"+this.units[_i4].power));strNum=strNum.substr(1),strDen=strDen.substr(1),nNum>1&&nDen>0&&(strNum="("+strNum+")"),nDen>1&&nNum>0&&(strDen="("+strDen+")");var str=strNum;return nNum>0&&nDen>0&&(str+=" / "),str+=strDen},Unit.prototype.format=function(options){var simp=this.skipAutomaticSimplification||null===this.value?this.clone():this.simplify(),isImaginary=!1;for(var i in void 0!==simp.value&&null!==simp.value&&isComplex(simp.value)&&(isImaginary=Math.abs(simp.value.re)<1e-14),simp.units)hasOwnProperty(simp.units,i)&&simp.units[i].unit&&("VA"===simp.units[i].unit.name&&isImaginary?simp.units[i].unit=UNITS.VAR:"VAR"!==simp.units[i].unit.name||isImaginary||(simp.units[i].unit=UNITS.VA));1!==simp.units.length||simp.fixPrefix||Math.abs(simp.units[0].power-Math.round(simp.units[0].power))<1e-14&&(simp.units[0].prefix=simp._bestPrefix());var value=simp._denormalize(simp.value),str=null!==simp.value?format(value,options||{}):"",unitStr=simp.formatUnits();return simp.value&&isComplex(simp.value)&&(str="("+str+")"),unitStr.length>0&&str.length>0&&(str+=" "),str+=unitStr},Unit.prototype._bestPrefix=function(){if(1!==this.units.length)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");if(Math.abs(this.units[0].power-Math.round(this.units[0].power))>=1e-14)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");var absValue=null!==this.value?abs(this.value):0,absUnitValue=abs(this.units[0].unit.value),bestPrefix=this.units[0].prefix;if(0===absValue)return bestPrefix;var power=this.units[0].power,bestDiff=Math.log(absValue/Math.pow(bestPrefix.value*absUnitValue,power))/Math.LN10-1.2;if(bestDiff>-2.200001&&bestDiff<1.800001)return bestPrefix;bestDiff=Math.abs(bestDiff);var prefixes=this.units[0].unit.prefixes;for(var p in prefixes)if(hasOwnProperty(prefixes,p)){var prefix=prefixes[p];if(prefix.scientific){var diff=Math.abs(Math.log(absValue/Math.pow(prefix.value*absUnitValue,power))/Math.LN10-1.2);(diff<bestDiff||diff===bestDiff&&prefix.name.length<bestPrefix.name.length)&&(bestPrefix=prefix,bestDiff=diff)}}return bestPrefix},Unit.prototype.splitUnit=function(parts){for(var x=this.clone(),ret=[],i=0;i<parts.length&&(x=x.to(parts[i]),i!==parts.length-1);i++){var xNumeric=x.toNumeric(),xRounded=round(xNumeric),xFixed=void 0,isNearlyEqual,y=new Unit(xFixed=equal(xRounded,xNumeric)?xRounded:fix(x.toNumeric()),parts[i].toString());ret.push(y),x=subtract(x,y)}for(var testSum=0,_i5=0;_i5<ret.length;_i5++)testSum=addScalar(testSum,ret[_i5].value);return equal(testSum,this.value)&&(x.value=0),ret.push(x),ret};var PREFIXES={NONE:{"":{name:"",value:1,scientific:!0}},SHORT:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:10,scientific:!1},h:{name:"h",value:100,scientific:!1},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},d:{name:"d",value:.1,scientific:!1},c:{name:"c",value:.01,scientific:!1},m:{name:"m",value:.001,scientific:!0},u:{name:"u",value:1e-6,scientific:!0},n:{name:"n",value:1e-9,scientific:!0},p:{name:"p",value:1e-12,scientific:!0},f:{name:"f",value:1e-15,scientific:!0},a:{name:"a",value:1e-18,scientific:!0},z:{name:"z",value:1e-21,scientific:!0},y:{name:"y",value:1e-24,scientific:!0}},LONG:{"":{name:"",value:1,scientific:!0},deca:{name:"deca",value:10,scientific:!1},hecto:{name:"hecto",value:100,scientific:!1},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},deci:{name:"deci",value:.1,scientific:!1},centi:{name:"centi",value:.01,scientific:!1},milli:{name:"milli",value:.001,scientific:!0},micro:{name:"micro",value:1e-6,scientific:!0},nano:{name:"nano",value:1e-9,scientific:!0},pico:{name:"pico",value:1e-12,scientific:!0},femto:{name:"femto",value:1e-15,scientific:!0},atto:{name:"atto",value:1e-18,scientific:!0},zepto:{name:"zepto",value:1e-21,scientific:!0},yocto:{name:"yocto",value:1e-24,scientific:!0}},SQUARED:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:100,scientific:!1},h:{name:"h",value:1e4,scientific:!1},k:{name:"k",value:1e6,scientific:!0},M:{name:"M",value:1e12,scientific:!0},G:{name:"G",value:1e18,scientific:!0},T:{name:"T",value:1e24,scientific:!0},P:{name:"P",value:1e30,scientific:!0},E:{name:"E",value:1e36,scientific:!0},Z:{name:"Z",value:1e42,scientific:!0},Y:{name:"Y",value:1e48,scientific:!0},d:{name:"d",value:.01,scientific:!1},c:{name:"c",value:1e-4,scientific:!1},m:{name:"m",value:1e-6,scientific:!0},u:{name:"u",value:1e-12,scientific:!0},n:{name:"n",value:1e-18,scientific:!0},p:{name:"p",value:1e-24,scientific:!0},f:{name:"f",value:1e-30,scientific:!0},a:{name:"a",value:1e-36,scientific:!0},z:{name:"z",value:1e-42,scientific:!0},y:{name:"y",value:1e-48,scientific:!0}},CUBIC:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:1e3,scientific:!1},h:{name:"h",value:1e6,scientific:!1},k:{name:"k",value:1e9,scientific:!0},M:{name:"M",value:1e18,scientific:!0},G:{name:"G",value:1e27,scientific:!0},T:{name:"T",value:1e36,scientific:!0},P:{name:"P",value:1e45,scientific:!0},E:{name:"E",value:1e54,scientific:!0},Z:{name:"Z",value:1e63,scientific:!0},Y:{name:"Y",value:1e72,scientific:!0},d:{name:"d",value:.001,scientific:!1},c:{name:"c",value:1e-6,scientific:!1},m:{name:"m",value:1e-9,scientific:!0},u:{name:"u",value:1e-18,scientific:!0},n:{name:"n",value:1e-27,scientific:!0},p:{name:"p",value:1e-36,scientific:!0},f:{name:"f",value:1e-45,scientific:!0},a:{name:"a",value:1e-54,scientific:!0},z:{name:"z",value:1e-63,scientific:!0},y:{name:"y",value:1e-72,scientific:!0}},BINARY_SHORT_SI:{"":{name:"",value:1,scientific:!0},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0}},BINARY_SHORT_IEC:{"":{name:"",value:1,scientific:!0},Ki:{name:"Ki",value:1024,scientific:!0},Mi:{name:"Mi",value:Math.pow(1024,2),scientific:!0},Gi:{name:"Gi",value:Math.pow(1024,3),scientific:!0},Ti:{name:"Ti",value:Math.pow(1024,4),scientific:!0},Pi:{name:"Pi",value:Math.pow(1024,5),scientific:!0},Ei:{name:"Ei",value:Math.pow(1024,6),scientific:!0},Zi:{name:"Zi",value:Math.pow(1024,7),scientific:!0},Yi:{name:"Yi",value:Math.pow(1024,8),scientific:!0}},BINARY_LONG_SI:{"":{name:"",value:1,scientific:!0},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0}},BINARY_LONG_IEC:{"":{name:"",value:1,scientific:!0},kibi:{name:"kibi",value:1024,scientific:!0},mebi:{name:"mebi",value:Math.pow(1024,2),scientific:!0},gibi:{name:"gibi",value:Math.pow(1024,3),scientific:!0},tebi:{name:"tebi",value:Math.pow(1024,4),scientific:!0},pebi:{name:"pebi",value:Math.pow(1024,5),scientific:!0},exi:{name:"exi",value:Math.pow(1024,6),scientific:!0},zebi:{name:"zebi",value:Math.pow(1024,7),scientific:!0},yobi:{name:"yobi",value:Math.pow(1024,8),scientific:!0}},BTU:{"":{name:"",value:1,scientific:!0},MM:{name:"MM",value:1e6,scientific:!0}}};PREFIXES.SHORTLONG=_extends$1({},PREFIXES.SHORT,PREFIXES.LONG),PREFIXES.BINARY_SHORT=_extends$1({},PREFIXES.BINARY_SHORT_SI,PREFIXES.BINARY_SHORT_IEC),PREFIXES.BINARY_LONG=_extends$1({},PREFIXES.BINARY_LONG_SI,PREFIXES.BINARY_LONG_IEC);var BASE_DIMENSIONS=["MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","ANGLE","BIT"],BASE_UNITS={NONE:{dimensions:[0,0,0,0,0,0,0,0,0]},MASS:{dimensions:[1,0,0,0,0,0,0,0,0]},LENGTH:{dimensions:[0,1,0,0,0,0,0,0,0]},TIME:{dimensions:[0,0,1,0,0,0,0,0,0]},CURRENT:{dimensions:[0,0,0,1,0,0,0,0,0]},TEMPERATURE:{dimensions:[0,0,0,0,1,0,0,0,0]},LUMINOUS_INTENSITY:{dimensions:[0,0,0,0,0,1,0,0,0]},AMOUNT_OF_SUBSTANCE:{dimensions:[0,0,0,0,0,0,1,0,0]},FORCE:{dimensions:[1,1,-2,0,0,0,0,0,0]},SURFACE:{dimensions:[0,2,0,0,0,0,0,0,0]},VOLUME:{dimensions:[0,3,0,0,0,0,0,0,0]},ENERGY:{dimensions:[1,2,-2,0,0,0,0,0,0]},POWER:{dimensions:[1,2,-3,0,0,0,0,0,0]},PRESSURE:{dimensions:[1,-1,-2,0,0,0,0,0,0]},ELECTRIC_CHARGE:{dimensions:[0,0,1,1,0,0,0,0,0]},ELECTRIC_CAPACITANCE:{dimensions:[-1,-2,4,2,0,0,0,0,0]},ELECTRIC_POTENTIAL:{dimensions:[1,2,-3,-1,0,0,0,0,0]},ELECTRIC_RESISTANCE:{dimensions:[1,2,-3,-2,0,0,0,0,0]},ELECTRIC_INDUCTANCE:{dimensions:[1,2,-2,-2,0,0,0,0,0]},ELECTRIC_CONDUCTANCE:{dimensions:[-1,-2,3,2,0,0,0,0,0]},MAGNETIC_FLUX:{dimensions:[1,2,-2,-1,0,0,0,0,0]},MAGNETIC_FLUX_DENSITY:{dimensions:[1,0,-2,-1,0,0,0,0,0]},FREQUENCY:{dimensions:[0,0,-1,0,0,0,0,0,0]},ANGLE:{dimensions:[0,0,0,0,0,0,0,1,0]},BIT:{dimensions:[0,0,0,0,0,0,0,0,1]}};for(var key in BASE_UNITS)hasOwnProperty(BASE_UNITS,key)&&(BASE_UNITS[key].key=key);var BASE_UNIT_NONE,UNIT_NONE={name:"",base:{},value:1,offset:0,dimensions:BASE_DIMENSIONS.map((function(x){return 0}))},UNITS={meter:{name:"meter",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.LONG,value:1,offset:0},inch:{name:"inch",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:.0254,offset:0},foot:{name:"foot",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:.3048,offset:0},yard:{name:"yard",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:.9144,offset:0},mile:{name:"mile",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:1609.344,offset:0},link:{name:"link",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:.201168,offset:0},rod:{name:"rod",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:5.0292,offset:0},chain:{name:"chain",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:20.1168,offset:0},angstrom:{name:"angstrom",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:1e-10,offset:0},m:{name:"m",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.SHORT,value:1,offset:0},in:{name:"in",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:.0254,offset:0},ft:{name:"ft",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:.3048,offset:0},yd:{name:"yd",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:.9144,offset:0},mi:{name:"mi",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:1609.344,offset:0},li:{name:"li",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:.201168,offset:0},rd:{name:"rd",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:5.02921,offset:0},ch:{name:"ch",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:20.1168,offset:0},mil:{name:"mil",base:BASE_UNITS.LENGTH,prefixes:PREFIXES.NONE,value:254e-7,offset:0},m2:{name:"m2",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.SQUARED,value:1,offset:0},sqin:{name:"sqin",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:64516e-8,offset:0},sqft:{name:"sqft",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:.09290304,offset:0},sqyd:{name:"sqyd",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:.83612736,offset:0},sqmi:{name:"sqmi",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:2589988.110336,offset:0},sqrd:{name:"sqrd",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:25.29295,offset:0},sqch:{name:"sqch",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:404.6873,offset:0},sqmil:{name:"sqmil",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:6.4516e-10,offset:0},acre:{name:"acre",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:4046.86,offset:0},hectare:{name:"hectare",base:BASE_UNITS.SURFACE,prefixes:PREFIXES.NONE,value:1e4,offset:0},m3:{name:"m3",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.CUBIC,value:1,offset:0},L:{name:"L",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.SHORT,value:.001,offset:0},l:{name:"l",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.SHORT,value:.001,offset:0},litre:{name:"litre",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.LONG,value:.001,offset:0},cuin:{name:"cuin",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:16387064e-12,offset:0},cuft:{name:"cuft",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.028316846592,offset:0},cuyd:{name:"cuyd",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.764554857984,offset:0},teaspoon:{name:"teaspoon",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:5e-6,offset:0},tablespoon:{name:"tablespoon",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:15e-6,offset:0},drop:{name:"drop",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:5e-8,offset:0},gtt:{name:"gtt",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:5e-8,offset:0},minim:{name:"minim",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:6.161152e-8,offset:0},fluiddram:{name:"fluiddram",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:36966911e-13,offset:0},fluidounce:{name:"fluidounce",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:2957353e-11,offset:0},gill:{name:"gill",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.0001182941,offset:0},cc:{name:"cc",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:1e-6,offset:0},cup:{name:"cup",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.0002365882,offset:0},pint:{name:"pint",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.0004731765,offset:0},quart:{name:"quart",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.0009463529,offset:0},gallon:{name:"gallon",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.003785412,offset:0},beerbarrel:{name:"beerbarrel",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.1173478,offset:0},oilbarrel:{name:"oilbarrel",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.1589873,offset:0},hogshead:{name:"hogshead",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.238481,offset:0},fldr:{name:"fldr",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:36966911e-13,offset:0},floz:{name:"floz",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:2957353e-11,offset:0},gi:{name:"gi",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.0001182941,offset:0},cp:{name:"cp",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.0002365882,offset:0},pt:{name:"pt",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.0004731765,offset:0},qt:{name:"qt",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.0009463529,offset:0},gal:{name:"gal",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.003785412,offset:0},bbl:{name:"bbl",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.1173478,offset:0},obl:{name:"obl",base:BASE_UNITS.VOLUME,prefixes:PREFIXES.NONE,value:.1589873,offset:0},g:{name:"g",base:BASE_UNITS.MASS,prefixes:PREFIXES.SHORT,value:.001,offset:0},gram:{name:"gram",base:BASE_UNITS.MASS,prefixes:PREFIXES.LONG,value:.001,offset:0},ton:{name:"ton",base:BASE_UNITS.MASS,prefixes:PREFIXES.SHORT,value:907.18474,offset:0},t:{name:"t",base:BASE_UNITS.MASS,prefixes:PREFIXES.SHORT,value:1e3,offset:0},tonne:{name:"tonne",base:BASE_UNITS.MASS,prefixes:PREFIXES.LONG,value:1e3,offset:0},grain:{name:"grain",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:6479891e-11,offset:0},dram:{name:"dram",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:.0017718451953125,offset:0},ounce:{name:"ounce",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:.028349523125,offset:0},poundmass:{name:"poundmass",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:.45359237,offset:0},hundredweight:{name:"hundredweight",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:45.359237,offset:0},stick:{name:"stick",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:.115,offset:0},stone:{name:"stone",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:6.35029318,offset:0},gr:{name:"gr",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:6479891e-11,offset:0},dr:{name:"dr",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:.0017718451953125,offset:0},oz:{name:"oz",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:.028349523125,offset:0},lbm:{name:"lbm",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:.45359237,offset:0},cwt:{name:"cwt",base:BASE_UNITS.MASS,prefixes:PREFIXES.NONE,value:45.359237,offset:0},s:{name:"s",base:BASE_UNITS.TIME,prefixes:PREFIXES.SHORT,value:1,offset:0},min:{name:"min",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:60,offset:0},h:{name:"h",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:3600,offset:0},second:{name:"second",base:BASE_UNITS.TIME,prefixes:PREFIXES.LONG,value:1,offset:0},sec:{name:"sec",base:BASE_UNITS.TIME,prefixes:PREFIXES.LONG,value:1,offset:0},minute:{name:"minute",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:60,offset:0},hour:{name:"hour",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:3600,offset:0},day:{name:"day",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:86400,offset:0},week:{name:"week",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:604800,offset:0},month:{name:"month",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:2629800,offset:0},year:{name:"year",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:31557600,offset:0},decade:{name:"decade",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:315576e3,offset:0},century:{name:"century",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:315576e4,offset:0},millennium:{name:"millennium",base:BASE_UNITS.TIME,prefixes:PREFIXES.NONE,value:315576e5,offset:0},hertz:{name:"Hertz",base:BASE_UNITS.FREQUENCY,prefixes:PREFIXES.LONG,value:1,offset:0,reciprocal:!0},Hz:{name:"Hz",base:BASE_UNITS.FREQUENCY,prefixes:PREFIXES.SHORT,value:1,offset:0,reciprocal:!0},rad:{name:"rad",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.SHORT,value:1,offset:0},radian:{name:"radian",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.LONG,value:1,offset:0},deg:{name:"deg",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.SHORT,value:null,offset:0},degree:{name:"degree",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.LONG,value:null,offset:0},grad:{name:"grad",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.SHORT,value:null,offset:0},gradian:{name:"gradian",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.LONG,value:null,offset:0},cycle:{name:"cycle",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.NONE,value:null,offset:0},arcsec:{name:"arcsec",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.NONE,value:null,offset:0},arcmin:{name:"arcmin",base:BASE_UNITS.ANGLE,prefixes:PREFIXES.NONE,value:null,offset:0},A:{name:"A",base:BASE_UNITS.CURRENT,prefixes:PREFIXES.SHORT,value:1,offset:0},ampere:{name:"ampere",base:BASE_UNITS.CURRENT,prefixes:PREFIXES.LONG,value:1,offset:0},K:{name:"K",base:BASE_UNITS.TEMPERATURE,prefixes:PREFIXES.NONE,value:1,offset:0},degC:{name:"degC",base:BASE_UNITS.TEMPERATURE,prefixes:PREFIXES.NONE,value:1,offset:273.15},degF:{name:"degF",base:BASE_UNITS.TEMPERATURE,prefixes:PREFIXES.NONE,value:1/1.8,offset:459.67},degR:{name:"degR",base:BASE_UNITS.TEMPERATURE,prefixes:PREFIXES.NONE,value:1/1.8,offset:0},kelvin:{name:"kelvin",base:BASE_UNITS.TEMPERATURE,prefixes:PREFIXES.NONE,value:1,offset:0},celsius:{name:"celsius",base:BASE_UNITS.TEMPERATURE,prefixes:PREFIXES.NONE,value:1,offset:273.15},fahrenheit:{name:"fahrenheit",base:BASE_UNITS.TEMPERATURE,prefixes:PREFIXES.NONE,value:1/1.8,offset:459.67},rankine:{name:"rankine",base:BASE_UNITS.TEMPERATURE,prefixes:PREFIXES.NONE,value:1/1.8,offset:0},mol:{name:"mol",base:BASE_UNITS.AMOUNT_OF_SUBSTANCE,prefixes:PREFIXES.SHORT,value:1,offset:0},mole:{name:"mole",base:BASE_UNITS.AMOUNT_OF_SUBSTANCE,prefixes:PREFIXES.LONG,value:1,offset:0},cd:{name:"cd",base:BASE_UNITS.LUMINOUS_INTENSITY,prefixes:PREFIXES.SHORT,value:1,offset:0},candela:{name:"candela",base:BASE_UNITS.LUMINOUS_INTENSITY,prefixes:PREFIXES.LONG,value:1,offset:0},N:{name:"N",base:BASE_UNITS.FORCE,prefixes:PREFIXES.SHORT,value:1,offset:0},newton:{name:"newton",base:BASE_UNITS.FORCE,prefixes:PREFIXES.LONG,value:1,offset:0},dyn:{name:"dyn",base:BASE_UNITS.FORCE,prefixes:PREFIXES.SHORT,value:1e-5,offset:0},dyne:{name:"dyne",base:BASE_UNITS.FORCE,prefixes:PREFIXES.LONG,value:1e-5,offset:0},lbf:{name:"lbf",base:BASE_UNITS.FORCE,prefixes:PREFIXES.NONE,value:4.4482216152605,offset:0},poundforce:{name:"poundforce",base:BASE_UNITS.FORCE,prefixes:PREFIXES.NONE,value:4.4482216152605,offset:0},kip:{name:"kip",base:BASE_UNITS.FORCE,prefixes:PREFIXES.LONG,value:4448.2216,offset:0},J:{name:"J",base:BASE_UNITS.ENERGY,prefixes:PREFIXES.SHORT,value:1,offset:0},joule:{name:"joule",base:BASE_UNITS.ENERGY,prefixes:PREFIXES.SHORT,value:1,offset:0},erg:{name:"erg",base:BASE_UNITS.ENERGY,prefixes:PREFIXES.NONE,value:1e-7,offset:0},Wh:{name:"Wh",base:BASE_UNITS.ENERGY,prefixes:PREFIXES.SHORT,value:3600,offset:0},BTU:{name:"BTU",base:BASE_UNITS.ENERGY,prefixes:PREFIXES.BTU,value:1055.05585262,offset:0},eV:{name:"eV",base:BASE_UNITS.ENERGY,prefixes:PREFIXES.SHORT,value:1602176565e-28,offset:0},electronvolt:{name:"electronvolt",base:BASE_UNITS.ENERGY,prefixes:PREFIXES.LONG,value:1602176565e-28,offset:0},W:{name:"W",base:BASE_UNITS.POWER,prefixes:PREFIXES.SHORT,value:1,offset:0},watt:{name:"watt",base:BASE_UNITS.POWER,prefixes:PREFIXES.LONG,value:1,offset:0},hp:{name:"hp",base:BASE_UNITS.POWER,prefixes:PREFIXES.NONE,value:745.6998715386,offset:0},VAR:{name:"VAR",base:BASE_UNITS.POWER,prefixes:PREFIXES.SHORT,value:Complex.I,offset:0},VA:{name:"VA",base:BASE_UNITS.POWER,prefixes:PREFIXES.SHORT,value:1,offset:0},Pa:{name:"Pa",base:BASE_UNITS.PRESSURE,prefixes:PREFIXES.SHORT,value:1,offset:0},psi:{name:"psi",base:BASE_UNITS.PRESSURE,prefixes:PREFIXES.NONE,value:6894.75729276459,offset:0},atm:{name:"atm",base:BASE_UNITS.PRESSURE,prefixes:PREFIXES.NONE,value:101325,offset:0},bar:{name:"bar",base:BASE_UNITS.PRESSURE,prefixes:PREFIXES.SHORTLONG,value:1e5,offset:0},torr:{name:"torr",base:BASE_UNITS.PRESSURE,prefixes:PREFIXES.NONE,value:133.322,offset:0},mmHg:{name:"mmHg",base:BASE_UNITS.PRESSURE,prefixes:PREFIXES.NONE,value:133.322,offset:0},mmH2O:{name:"mmH2O",base:BASE_UNITS.PRESSURE,prefixes:PREFIXES.NONE,value:9.80665,offset:0},cmH2O:{name:"cmH2O",base:BASE_UNITS.PRESSURE,prefixes:PREFIXES.NONE,value:98.0665,offset:0},coulomb:{name:"coulomb",base:BASE_UNITS.ELECTRIC_CHARGE,prefixes:PREFIXES.LONG,value:1,offset:0},C:{name:"C",base:BASE_UNITS.ELECTRIC_CHARGE,prefixes:PREFIXES.SHORT,value:1,offset:0},farad:{name:"farad",base:BASE_UNITS.ELECTRIC_CAPACITANCE,prefixes:PREFIXES.LONG,value:1,offset:0},F:{name:"F",base:BASE_UNITS.ELECTRIC_CAPACITANCE,prefixes:PREFIXES.SHORT,value:1,offset:0},volt:{name:"volt",base:BASE_UNITS.ELECTRIC_POTENTIAL,prefixes:PREFIXES.LONG,value:1,offset:0},V:{name:"V",base:BASE_UNITS.ELECTRIC_POTENTIAL,prefixes:PREFIXES.SHORT,value:1,offset:0},ohm:{name:"ohm",base:BASE_UNITS.ELECTRIC_RESISTANCE,prefixes:PREFIXES.SHORTLONG,value:1,offset:0},henry:{name:"henry",base:BASE_UNITS.ELECTRIC_INDUCTANCE,prefixes:PREFIXES.LONG,value:1,offset:0},H:{name:"H",base:BASE_UNITS.ELECTRIC_INDUCTANCE,prefixes:PREFIXES.SHORT,value:1,offset:0},siemens:{name:"siemens",base:BASE_UNITS.ELECTRIC_CONDUCTANCE,prefixes:PREFIXES.LONG,value:1,offset:0},S:{name:"S",base:BASE_UNITS.ELECTRIC_CONDUCTANCE,prefixes:PREFIXES.SHORT,value:1,offset:0},weber:{name:"weber",base:BASE_UNITS.MAGNETIC_FLUX,prefixes:PREFIXES.LONG,value:1,offset:0},Wb:{name:"Wb",base:BASE_UNITS.MAGNETIC_FLUX,prefixes:PREFIXES.SHORT,value:1,offset:0},tesla:{name:"tesla",base:BASE_UNITS.MAGNETIC_FLUX_DENSITY,prefixes:PREFIXES.LONG,value:1,offset:0},T:{name:"T",base:BASE_UNITS.MAGNETIC_FLUX_DENSITY,prefixes:PREFIXES.SHORT,value:1,offset:0},b:{name:"b",base:BASE_UNITS.BIT,prefixes:PREFIXES.BINARY_SHORT,value:1,offset:0},bits:{name:"bits",base:BASE_UNITS.BIT,prefixes:PREFIXES.BINARY_LONG,value:1,offset:0},B:{name:"B",base:BASE_UNITS.BIT,prefixes:PREFIXES.BINARY_SHORT,value:8,offset:0},bytes:{name:"bytes",base:BASE_UNITS.BIT,prefixes:PREFIXES.BINARY_LONG,value:8,offset:0}},ALIASES={meters:"meter",inches:"inch",feet:"foot",yards:"yard",miles:"mile",links:"link",rods:"rod",chains:"chain",angstroms:"angstrom",lt:"l",litres:"litre",liter:"litre",liters:"litre",teaspoons:"teaspoon",tablespoons:"tablespoon",minims:"minim",fluiddrams:"fluiddram",fluidounces:"fluidounce",gills:"gill",cups:"cup",pints:"pint",quarts:"quart",gallons:"gallon",beerbarrels:"beerbarrel",oilbarrels:"oilbarrel",hogsheads:"hogshead",gtts:"gtt",grams:"gram",tons:"ton",tonnes:"tonne",grains:"grain",drams:"dram",ounces:"ounce",poundmasses:"poundmass",hundredweights:"hundredweight",sticks:"stick",lb:"lbm",lbs:"lbm",kips:"kip",acres:"acre",hectares:"hectare",sqfeet:"sqft",sqyard:"sqyd",sqmile:"sqmi",sqmiles:"sqmi",mmhg:"mmHg",mmh2o:"mmH2O",cmh2o:"cmH2O",seconds:"second",secs:"second",minutes:"minute",mins:"minute",hours:"hour",hr:"hour",hrs:"hour",days:"day",weeks:"week",months:"month",years:"year",decades:"decade",centuries:"century",millennia:"millennium",hertz:"hertz",radians:"radian",degrees:"degree",gradians:"gradian",cycles:"cycle",arcsecond:"arcsec",arcseconds:"arcsec",arcminute:"arcmin",arcminutes:"arcmin",BTUs:"BTU",watts:"watt",joules:"joule",amperes:"ampere",coulombs:"coulomb",volts:"volt",ohms:"ohm",farads:"farad",webers:"weber",teslas:"tesla",electronvolts:"electronvolt",moles:"mole",bit:"bits",byte:"bytes"};function calculateAngleValues(config){if("BigNumber"===config.number){var pi=createBigNumberPi(_BigNumber);UNITS.rad.value=new _BigNumber(1),UNITS.deg.value=pi.div(180),UNITS.grad.value=pi.div(200),UNITS.cycle.value=pi.times(2),UNITS.arcsec.value=pi.div(648e3),UNITS.arcmin.value=pi.div(10800)}else UNITS.rad.value=1,UNITS.deg.value=Math.PI/180,UNITS.grad.value=Math.PI/200,UNITS.cycle.value=2*Math.PI,UNITS.arcsec.value=Math.PI/648e3,UNITS.arcmin.value=Math.PI/10800;UNITS.radian.value=UNITS.rad.value,UNITS.degree.value=UNITS.deg.value,UNITS.gradian.value=UNITS.grad.value}calculateAngleValues(config),on&&on("config",(function(curr,prev){curr.number!==prev.number&&calculateAngleValues(curr)}));var UNIT_SYSTEMS={si:{NONE:{unit:UNIT_NONE,prefix:PREFIXES.NONE[""]},LENGTH:{unit:UNITS.m,prefix:PREFIXES.SHORT[""]},MASS:{unit:UNITS.g,prefix:PREFIXES.SHORT.k},TIME:{unit:UNITS.s,prefix:PREFIXES.SHORT[""]},CURRENT:{unit:UNITS.A,prefix:PREFIXES.SHORT[""]},TEMPERATURE:{unit:UNITS.K,prefix:PREFIXES.SHORT[""]},LUMINOUS_INTENSITY:{unit:UNITS.cd,prefix:PREFIXES.SHORT[""]},AMOUNT_OF_SUBSTANCE:{unit:UNITS.mol,prefix:PREFIXES.SHORT[""]},ANGLE:{unit:UNITS.rad,prefix:PREFIXES.SHORT[""]},BIT:{unit:UNITS.bits,prefix:PREFIXES.SHORT[""]},FORCE:{unit:UNITS.N,prefix:PREFIXES.SHORT[""]},ENERGY:{unit:UNITS.J,prefix:PREFIXES.SHORT[""]},POWER:{unit:UNITS.W,prefix:PREFIXES.SHORT[""]},PRESSURE:{unit:UNITS.Pa,prefix:PREFIXES.SHORT[""]},ELECTRIC_CHARGE:{unit:UNITS.C,prefix:PREFIXES.SHORT[""]},ELECTRIC_CAPACITANCE:{unit:UNITS.F,prefix:PREFIXES.SHORT[""]},ELECTRIC_POTENTIAL:{unit:UNITS.V,prefix:PREFIXES.SHORT[""]},ELECTRIC_RESISTANCE:{unit:UNITS.ohm,prefix:PREFIXES.SHORT[""]},ELECTRIC_INDUCTANCE:{unit:UNITS.H,prefix:PREFIXES.SHORT[""]},ELECTRIC_CONDUCTANCE:{unit:UNITS.S,prefix:PREFIXES.SHORT[""]},MAGNETIC_FLUX:{unit:UNITS.Wb,prefix:PREFIXES.SHORT[""]},MAGNETIC_FLUX_DENSITY:{unit:UNITS.T,prefix:PREFIXES.SHORT[""]},FREQUENCY:{unit:UNITS.Hz,prefix:PREFIXES.SHORT[""]}}};UNIT_SYSTEMS.cgs=JSON.parse(JSON.stringify(UNIT_SYSTEMS.si)),UNIT_SYSTEMS.cgs.LENGTH={unit:UNITS.m,prefix:PREFIXES.SHORT.c},UNIT_SYSTEMS.cgs.MASS={unit:UNITS.g,prefix:PREFIXES.SHORT[""]},UNIT_SYSTEMS.cgs.FORCE={unit:UNITS.dyn,prefix:PREFIXES.SHORT[""]},UNIT_SYSTEMS.cgs.ENERGY={unit:UNITS.erg,prefix:PREFIXES.NONE[""]},UNIT_SYSTEMS.us=JSON.parse(JSON.stringify(UNIT_SYSTEMS.si)),UNIT_SYSTEMS.us.LENGTH={unit:UNITS.ft,prefix:PREFIXES.NONE[""]},UNIT_SYSTEMS.us.MASS={unit:UNITS.lbm,prefix:PREFIXES.NONE[""]},UNIT_SYSTEMS.us.TEMPERATURE={unit:UNITS.degF,prefix:PREFIXES.NONE[""]},UNIT_SYSTEMS.us.FORCE={unit:UNITS.lbf,prefix:PREFIXES.NONE[""]},UNIT_SYSTEMS.us.ENERGY={unit:UNITS.BTU,prefix:PREFIXES.BTU[""]},UNIT_SYSTEMS.us.POWER={unit:UNITS.hp,prefix:PREFIXES.NONE[""]},UNIT_SYSTEMS.us.PRESSURE={unit:UNITS.psi,prefix:PREFIXES.NONE[""]},UNIT_SYSTEMS.auto=JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));var currentUnitSystem=UNIT_SYSTEMS.auto;for(var _key2 in Unit.setUnitSystem=function(name){if(!hasOwnProperty(UNIT_SYSTEMS,name))throw new Error("Unit system "+name+" does not exist. Choices are: "+Object.keys(UNIT_SYSTEMS).join(", "));currentUnitSystem=UNIT_SYSTEMS[name]},Unit.getUnitSystem=function(){for(var _key in UNIT_SYSTEMS)if(hasOwnProperty(UNIT_SYSTEMS,_key)&&UNIT_SYSTEMS[_key]===currentUnitSystem)return _key},Unit.typeConverters={BigNumber:function BigNumber(x){return new _BigNumber(x+"")},Fraction:function Fraction(x){return new _Fraction(x)},Complex:function Complex(x){return x},number:function number(x){return x}},Unit._getNumberConverter=function(type){if(!Unit.typeConverters[type])throw new TypeError('Unsupported type "'+type+'"');return Unit.typeConverters[type]},UNITS)if(hasOwnProperty(UNITS,_key2)){var unit=UNITS[_key2];unit.dimensions=unit.base.dimensions}for(var _name2 in ALIASES)if(hasOwnProperty(ALIASES,_name2)){var _unit2=UNITS[ALIASES[_name2]],alias={};for(var _key3 in _unit2)hasOwnProperty(_unit2,_key3)&&(alias[_key3]=_unit2[_key3]);alias.name=_name2,UNITS[_name2]=alias}function assertUnitNameIsValid(name){for(var i=0;i<name.length;i++){var _c=name.charAt(i),isValidAlpha=function isValidAlpha(p){return/^[a-zA-Z]$/.test(p)},_isDigit=function _isDigit(c){return c>="0"&&c<="9"};if(0===i&&!isValidAlpha(_c))throw new Error('Invalid unit name (must begin with alpha character): "'+name+'"');if(i>0&&!isValidAlpha(_c)&&!_isDigit(_c))throw new Error('Invalid unit name (only alphanumeric characters are allowed): "'+name+'"')}}return Unit.createUnit=function(obj,options){if("object"!==_typeof$6(obj))throw new TypeError("createUnit expects first parameter to be of type 'Object'");if(options&&options.override)for(var _key4 in obj)if(hasOwnProperty(obj,_key4)&&Unit.deleteUnit(_key4),obj[_key4].aliases)for(var i=0;i<obj[_key4].aliases.length;i++)Unit.deleteUnit(obj[_key4].aliases[i]);var lastUnit;for(var _key5 in obj)hasOwnProperty(obj,_key5)&&(lastUnit=Unit.createUnitSingle(_key5,obj[_key5]));return lastUnit},Unit.createUnitSingle=function(name,obj,options){if(null==obj&&(obj={}),"string"!=typeof name)throw new TypeError("createUnitSingle expects first parameter to be of type 'string'");if(hasOwnProperty(UNITS,name))throw new Error('Cannot create unit "'+name+'": a unit with that name already exists');assertUnitNameIsValid(name);var defUnit=null,aliases=[],offset=0,definition,prefixes,baseName;if(obj&&"Unit"===obj.type)defUnit=obj.clone();else if("string"==typeof obj)""!==obj&&(definition=obj);else{if("object"!==_typeof$6(obj))throw new TypeError('Cannot create unit "'+name+'" from "'+obj.toString()+'": expecting "string" or "Unit" or "Object"');definition=obj.definition,prefixes=obj.prefixes,offset=obj.offset,baseName=obj.baseName,obj.aliases&&(aliases=obj.aliases.valueOf())}if(aliases)for(var i=0;i<aliases.length;i++)if(hasOwnProperty(UNITS,aliases[i]))throw new Error('Cannot create alias "'+aliases[i]+'": a unit with that name already exists');if(definition&&"string"==typeof definition&&!defUnit)try{defUnit=Unit.parse(definition,{allowNoUnits:!0})}catch(ex){throw ex.message='Could not create unit "'+name+'" from "'+definition+'": '+ex.message,ex}else definition&&"Unit"===definition.type&&(defUnit=definition.clone());aliases=aliases||[],offset=offset||0,prefixes=prefixes&&prefixes.toUpperCase&&PREFIXES[prefixes.toUpperCase()]||PREFIXES.NONE;var newUnit={};if(defUnit){newUnit={name:name,value:defUnit.value,dimensions:defUnit.dimensions.slice(0),prefixes:prefixes,offset:offset};var anyMatch=!1;for(var _i7 in BASE_UNITS)if(hasOwnProperty(BASE_UNITS,_i7)){for(var match=!0,j=0;j<BASE_DIMENSIONS.length;j++)if(Math.abs((newUnit.dimensions[j]||0)-(BASE_UNITS[_i7].dimensions[j]||0))>1e-12){match=!1;break}if(match){anyMatch=!0,newUnit.base=BASE_UNITS[_i7];break}}if(!anyMatch){baseName=baseName||name+"_STUFF";var _newBaseUnit={dimensions:defUnit.dimensions.slice(0)};_newBaseUnit.key=baseName,BASE_UNITS[baseName]=_newBaseUnit,currentUnitSystem[baseName]={unit:newUnit,prefix:PREFIXES.NONE[""]},newUnit.base=BASE_UNITS[baseName]}}else{if(baseName=baseName||name+"_STUFF",BASE_DIMENSIONS.indexOf(baseName)>=0)throw new Error('Cannot create new base unit "'+name+'": a base unit with that name already exists (and cannot be overridden)');for(var b in BASE_DIMENSIONS.push(baseName),BASE_UNITS)hasOwnProperty(BASE_UNITS,b)&&(BASE_UNITS[b].dimensions[BASE_DIMENSIONS.length-1]=0);for(var newBaseUnit={dimensions:[]},_i6=0;_i6<BASE_DIMENSIONS.length;_i6++)newBaseUnit.dimensions[_i6]=0;newBaseUnit.dimensions[BASE_DIMENSIONS.length-1]=1,newBaseUnit.key=baseName,BASE_UNITS[baseName]=newBaseUnit,newUnit={name:name,value:1,dimensions:BASE_UNITS[baseName].dimensions.slice(0),prefixes:prefixes,offset:offset,base:BASE_UNITS[baseName]},currentUnitSystem[baseName]={unit:newUnit,prefix:PREFIXES.NONE[""]}}Unit.UNITS[name]=newUnit;for(var _i8=0;_i8<aliases.length;_i8++){var aliasName=aliases[_i8],_alias={};for(var _key6 in newUnit)hasOwnProperty(newUnit,_key6)&&(_alias[_key6]=newUnit[_key6]);_alias.name=aliasName,Unit.UNITS[aliasName]=_alias}return new Unit(null,name)},Unit.deleteUnit=function(name){delete Unit.UNITS[name]},Unit.PREFIXES=PREFIXES,Unit.BASE_DIMENSIONS=BASE_DIMENSIONS,Unit.BASE_UNITS=BASE_UNITS,Unit.UNIT_SYSTEMS=UNIT_SYSTEMS,Unit.UNITS=UNITS,Unit}),{isClass:!0}),exports_9("createUnitClass",createUnitClass),name$2d="unit",createUnitFunction=factory("unit",dependencies$2e=["typed","Unit"],(function(_ref){var typed=_ref.typed,Unit=_ref.Unit;return typed("unit",{Unit:function Unit(x){return x.clone()},string:function string(x){return Unit.isValuelessUnit(x)?new Unit(null,x):Unit.parse(x,{allowNoUnits:!0})},"number | BigNumber | Fraction | Complex, string":function numberBigNumberFractionComplexString(value,unit){return new Unit(value,unit)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createUnitFunction",createUnitFunction),createSparse=factory(name$2e="sparse",dependencies$2f=["typed","SparseMatrix"],(function(_ref){var typed=_ref.typed,SparseMatrix=_ref.SparseMatrix;return typed(name$2e,{"":function _(){return new SparseMatrix([])},string:function string(datatype){return new SparseMatrix([],datatype)},"Array | Matrix":function ArrayMatrix(data){return new SparseMatrix(data)},"Array | Matrix, string":function ArrayMatrixString(data,datatype){return new SparseMatrix(data,datatype)}})})),exports_9("createSparse",createSparse),createCreateUnit=factory(name$2f="createUnit",dependencies$2g=["typed","Unit"],(function(_ref){var typed=_ref.typed,Unit=_ref.Unit;return typed(name$2f,{"Object, Object":function ObjectObject(obj,options){return Unit.createUnit(obj,options)},Object:function Object(obj){return Unit.createUnit(obj,{})},"string, Unit | string | Object, Object":function stringUnitStringObjectObject(name,def,options){var obj={};return obj[name]=def,Unit.createUnit(obj,options)},"string, Unit | string | Object":function stringUnitStringObject(name,def){var obj={};return obj[name]=def,Unit.createUnit(obj,{})},string:function string(name){var obj={};return obj[name]={},Unit.createUnit(obj,{})}})})),exports_9("createCreateUnit",createCreateUnit),name$2g="acos",createAcos=factory("acos",dependencies$2h=["typed","config","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex;return typed("acos",{number:function number(x){return x>=-1&&x<=1||config.predictable?Math.acos(x):new Complex(x,0).acos()},Complex:function Complex(x){return x.acos()},BigNumber:function BigNumber(x){return x.acos()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAcos",createAcos),name$2h="acosh",createAcosh=factory("acosh",dependencies$2i=["typed","config","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex;return typed("acosh",{number:function number(x){return x>=1||config.predictable?acoshNumber(x):x<=-1?new Complex(Math.log(Math.sqrt(x*x-1)-x),Math.PI):new Complex(x,0).acosh()},Complex:function Complex(x){return x.acosh()},BigNumber:function BigNumber(x){return x.acosh()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAcosh",createAcosh),name$2i="acot",createAcot=factory("acot",dependencies$2j=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber;return typed("acot",{number:acotNumber,Complex:function Complex(x){return x.acot()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x).atan()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAcot",createAcot),name$2j="acoth",createAcoth=factory("acoth",dependencies$2k=["typed","config","Complex","BigNumber"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex,_BigNumber=_ref.BigNumber;return typed("acoth",{number:function number(x){return x>=1||x<=-1||config.predictable?acothNumber(x):new Complex(x,0).acoth()},Complex:function Complex(x){return x.acoth()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x).atanh()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAcoth",createAcoth),name$2k="acsc",createAcsc=factory("acsc",dependencies$2l=["typed","config","Complex","BigNumber"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex,_BigNumber=_ref.BigNumber;return typed("acsc",{number:function number(x){return x<=-1||x>=1||config.predictable?acscNumber(x):new Complex(x,0).acsc()},Complex:function Complex(x){return x.acsc()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x).asin()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAcsc",createAcsc),name$2l="acsch",createAcsch=factory("acsch",dependencies$2m=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber;return typed("acsch",{number:acschNumber,Complex:function Complex(x){return x.acsch()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x).asinh()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAcsch",createAcsch),name$2m="asec",createAsec=factory("asec",dependencies$2n=["typed","config","Complex","BigNumber"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex,_BigNumber=_ref.BigNumber;return typed("asec",{number:function number(x){return x<=-1||x>=1||config.predictable?asecNumber(x):new Complex(x,0).asec()},Complex:function Complex(x){return x.asec()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x).acos()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAsec",createAsec),name$2n="asech",createAsech=factory("asech",dependencies$2o=["typed","config","Complex","BigNumber"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex,_BigNumber=_ref.BigNumber;return typed("asech",{number:function number(x){if(x<=1&&x>=-1||config.predictable){var xInv=1/x;if(xInv>0||config.predictable)return asechNumber(x);var ret=Math.sqrt(xInv*xInv-1);return new Complex(Math.log(ret-xInv),Math.PI)}return new Complex(x,0).asech()},Complex:function Complex(x){return x.asech()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x).acosh()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAsech",createAsech),name$2o="asin",createAsin=factory("asin",dependencies$2p=["typed","config","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex;return typed("asin",{number:function number(x){return x>=-1&&x<=1||config.predictable?Math.asin(x):new Complex(x,0).asin()},Complex:function Complex(x){return x.asin()},BigNumber:function BigNumber(x){return x.asin()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAsin",createAsin),name$2p="asinh",createAsinh=factory("asinh",dependencies$2q=["typed"],(function(_ref){var typed;return(0,_ref.typed)("asinh",{number:asinhNumber,Complex:function Complex(x){return x.asinh()},BigNumber:function BigNumber(x){return x.asinh()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAsinh",createAsinh),name$2q="atan",createAtan=factory("atan",dependencies$2r=["typed"],(function(_ref){var typed;return(0,_ref.typed)("atan",{number:function number(x){return Math.atan(x)},Complex:function Complex(x){return x.atan()},BigNumber:function BigNumber(x){return x.atan()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAtan",createAtan),name$2r="atan2",createAtan2=factory("atan2",dependencies$2s=["typed","matrix","equalScalar","BigNumber","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar,BigNumber=_ref.BigNumber,DenseMatrix=_ref.DenseMatrix,algorithm02=createAlgorithm02({typed:typed,equalScalar:equalScalar}),algorithm03=createAlgorithm03({typed:typed}),algorithm09=createAlgorithm09({typed:typed,equalScalar:equalScalar}),algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm12=createAlgorithm12({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("atan2",{"number, number":Math.atan2,"BigNumber, BigNumber":function BigNumberBigNumber(y,x){return BigNumber.atan2(y,x)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm09(x,y,this,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm02(y,x,this,!0)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm03(x,y,this,!1)},"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,this)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"SparseMatrix, number | BigNumber":function SparseMatrixNumberBigNumber(x,y){return algorithm11(x,y,this,!1)},"DenseMatrix, number | BigNumber":function DenseMatrixNumberBigNumber(x,y){return algorithm14(x,y,this,!1)},"number | BigNumber, SparseMatrix":function numberBigNumberSparseMatrix(x,y){return algorithm12(y,x,this,!0)},"number | BigNumber, DenseMatrix":function numberBigNumberDenseMatrix(x,y){return algorithm14(y,x,this,!0)},"Array, number | BigNumber":function ArrayNumberBigNumber(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},"number | BigNumber, Array":function numberBigNumberArray(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})})),exports_9("createAtan2",createAtan2),name$2s="atanh",createAtanh=factory("atanh",dependencies$2t=["typed","config","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex;return typed("atanh",{number:function number(x){return x<=1&&x>=-1||config.predictable?atanhNumber(x):new Complex(x,0).atanh()},Complex:function Complex(x){return x.atanh()},BigNumber:function BigNumber(x){return x.atanh()},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createAtanh",createAtanh),name$2t="cos",createCos=factory("cos",dependencies$2u=["typed"],(function(_ref){var typed;return(0,_ref.typed)("cos",{number:Math.cos,Complex:function Complex(x){return x.cos()},BigNumber:function BigNumber(x){return x.cos()},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cos is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createCos",createCos),name$2u="cosh",createCosh=factory("cosh",dependencies$2v=["typed"],(function(_ref){var typed;return(0,_ref.typed)("cosh",{number:cosh,Complex:function Complex(x){return x.cosh()},BigNumber:function BigNumber(x){return x.cosh()},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cosh is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createCosh",createCosh),name$2v="cot",createCot=factory("cot",dependencies$2w=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber;return typed("cot",{number:cotNumber,Complex:function Complex(x){return x.cot()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x.tan())},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cot is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createCot",createCot),name$2w="coth",createCoth=factory("coth",dependencies$2x=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber;return typed("coth",{number:cothNumber,Complex:function Complex(x){return x.coth()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x.tanh())},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function coth is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createCoth",createCoth),name$2x="csc",createCsc=factory("csc",dependencies$2y=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber;return typed("csc",{number:cscNumber,Complex:function Complex(x){return x.csc()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x.sin())},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function csc is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createCsc",createCsc),name$2y="csch",createCsch=factory("csch",dependencies$2z=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber;return typed("csch",{number:cschNumber,Complex:function Complex(x){return x.csch()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x.sinh())},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function csch is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createCsch",createCsch),name$2z="sec",createSec=factory("sec",dependencies$2A=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber;return typed("sec",{number:secNumber,Complex:function Complex(x){return x.sec()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x.cos())},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sec is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createSec",createSec),name$2A="sech",createSech=factory("sech",dependencies$2B=["typed","BigNumber"],(function(_ref){var typed=_ref.typed,_BigNumber=_ref.BigNumber;return typed("sech",{number:sechNumber,Complex:function Complex(x){return x.sech()},BigNumber:function BigNumber(x){return new _BigNumber(1).div(x.cosh())},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sech is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createSech",createSech),name$2B="sin",createSin=factory("sin",dependencies$2C=["typed"],(function(_ref){var typed;return(0,_ref.typed)("sin",{number:Math.sin,Complex:function Complex(x){return x.sin()},BigNumber:function BigNumber(x){return x.sin()},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sin is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createSin",createSin),name$2C="sinh",createSinh=factory("sinh",dependencies$2D=["typed"],(function(_ref){var typed;return(0,_ref.typed)("sinh",{number:sinhNumber,Complex:function Complex(x){return x.sinh()},BigNumber:function BigNumber(x){return x.sinh()},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sinh is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createSinh",createSinh),name$2D="tan",createTan=factory("tan",dependencies$2E=["typed"],(function(_ref){var typed;return(0,_ref.typed)("tan",{number:Math.tan,Complex:function Complex(x){return x.tan()},BigNumber:function BigNumber(x){return x.tan()},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function tan is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createTan",createTan),name$2E="tanh",createTanh=factory("tanh",dependencies$2F=["typed"],(function(_ref){var typed;return(0,_ref.typed)("tanh",{number:tanh,Complex:function Complex(x){return x.tanh()},BigNumber:function BigNumber(x){return x.tanh()},Unit:function Unit(x){if(!x.hasBase(x.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function tanh is no angle");return this(x.value)},"Array | Matrix":function ArrayMatrix(x){return deepMap(x,this)}})})),exports_9("createTanh",createTanh),createSetCartesian=factory(name$2F="setCartesian",dependencies$2G=["typed","size","subset","compareNatural","Index","DenseMatrix"],(function(_ref){var typed=_ref.typed,size=_ref.size,subset=_ref.subset,compareNatural=_ref.compareNatural,Index=_ref.Index,DenseMatrix=_ref.DenseMatrix;return typed(name$2F,{"Array | Matrix, Array | Matrix":function ArrayMatrixArrayMatrix(a1,a2){var result=[];if(0!==subset(size(a1),new Index(0))&&0!==subset(size(a2),new Index(0))){var b1=flatten(Array.isArray(a1)?a1:a1.toArray()).sort(compareNatural),b2=flatten(Array.isArray(a2)?a2:a2.toArray()).sort(compareNatural);result=[];for(var i=0;i<b1.length;i++)for(var j=0;j<b2.length;j++)result.push([b1[i],b2[j]])}return Array.isArray(a1)&&Array.isArray(a2)?result:new DenseMatrix(result)}})})),exports_9("createSetCartesian",createSetCartesian),createSetDifference=factory(name$2G="setDifference",dependencies$2H=["typed","size","subset","compareNatural","Index","DenseMatrix"],(function(_ref){var typed=_ref.typed,size=_ref.size,subset=_ref.subset,compareNatural=_ref.compareNatural,Index=_ref.Index,DenseMatrix=_ref.DenseMatrix;return typed(name$2G,{"Array | Matrix, Array | Matrix":function ArrayMatrixArrayMatrix(a1,a2){var result;if(0===subset(size(a1),new Index(0)))result=[];else{if(0===subset(size(a2),new Index(0)))return flatten(a1.toArray());var b1=identify(flatten(Array.isArray(a1)?a1:a1.toArray()).sort(compareNatural)),b2=identify(flatten(Array.isArray(a2)?a2:a2.toArray()).sort(compareNatural)),inb2;result=[];for(var i=0;i<b1.length;i++){inb2=!1;for(var j=0;j<b2.length;j++)if(0===compareNatural(b1[i].value,b2[j].value)&&b1[i].identifier===b2[j].identifier){inb2=!0;break}inb2||result.push(b1[i])}}return Array.isArray(a1)&&Array.isArray(a2)?generalize(result):new DenseMatrix(generalize(result))}})})),exports_9("createSetDifference",createSetDifference),createSetDistinct=factory(name$2H="setDistinct",dependencies$2I=["typed","size","subset","compareNatural","Index","DenseMatrix"],(function(_ref){var typed=_ref.typed,size=_ref.size,subset=_ref.subset,compareNatural=_ref.compareNatural,Index=_ref.Index,DenseMatrix=_ref.DenseMatrix;return typed(name$2H,{"Array | Matrix":function ArrayMatrix(a){var result;if(0===subset(size(a),new Index(0)))result=[];else{var b=flatten(Array.isArray(a)?a:a.toArray()).sort(compareNatural);(result=[]).push(b[0]);for(var i=1;i<b.length;i++)0!==compareNatural(b[i],b[i-1])&&result.push(b[i])}return Array.isArray(a)?result:new DenseMatrix(result)}})})),exports_9("createSetDistinct",createSetDistinct),createSetIntersect=factory(name$2I="setIntersect",dependencies$2J=["typed","size","subset","compareNatural","Index","DenseMatrix"],(function(_ref){var typed=_ref.typed,size=_ref.size,subset=_ref.subset,compareNatural=_ref.compareNatural,Index=_ref.Index,DenseMatrix=_ref.DenseMatrix;return typed(name$2I,{"Array | Matrix, Array | Matrix":function ArrayMatrixArrayMatrix(a1,a2){var result;if(0===subset(size(a1),new Index(0))||0===subset(size(a2),new Index(0)))result=[];else{var b1=identify(flatten(Array.isArray(a1)?a1:a1.toArray()).sort(compareNatural)),b2=identify(flatten(Array.isArray(a2)?a2:a2.toArray()).sort(compareNatural));result=[];for(var i=0;i<b1.length;i++)for(var j=0;j<b2.length;j++)if(0===compareNatural(b1[i].value,b2[j].value)&&b1[i].identifier===b2[j].identifier){result.push(b1[i]);break}}return Array.isArray(a1)&&Array.isArray(a2)?generalize(result):new DenseMatrix(generalize(result))}})})),exports_9("createSetIntersect",createSetIntersect),createSetIsSubset=factory(name$2J="setIsSubset",dependencies$2K=["typed","size","subset","compareNatural","Index"],(function(_ref){var typed=_ref.typed,size=_ref.size,subset=_ref.subset,compareNatural=_ref.compareNatural,Index=_ref.Index;return typed(name$2J,{"Array | Matrix, Array | Matrix":function ArrayMatrixArrayMatrix(a1,a2){if(0===subset(size(a1),new Index(0)))return!0;if(0===subset(size(a2),new Index(0)))return!1;for(var b1=identify(flatten(Array.isArray(a1)?a1:a1.toArray()).sort(compareNatural)),b2=identify(flatten(Array.isArray(a2)?a2:a2.toArray()).sort(compareNatural)),inb2,i=0;i<b1.length;i++){inb2=!1;for(var j=0;j<b2.length;j++)if(0===compareNatural(b1[i].value,b2[j].value)&&b1[i].identifier===b2[j].identifier){inb2=!0;break}if(!1===inb2)return!1}return!0}})})),exports_9("createSetIsSubset",createSetIsSubset),createSetMultiplicity=factory(name$2K="setMultiplicity",dependencies$2L=["typed","size","subset","compareNatural","Index"],(function(_ref){var typed=_ref.typed,size=_ref.size,subset=_ref.subset,compareNatural=_ref.compareNatural,Index=_ref.Index;return typed(name$2K,{"number | BigNumber | Fraction | Complex, Array | Matrix":function numberBigNumberFractionComplexArrayMatrix(e,a){if(0===subset(size(a),new Index(0)))return 0;for(var b=flatten(Array.isArray(a)?a:a.toArray()),count=0,i=0;i<b.length;i++)0===compareNatural(b[i],e)&&count++;return count}})})),exports_9("createSetMultiplicity",createSetMultiplicity),createSetPowerset=factory(name$2L="setPowerset",dependencies$2M=["typed","size","subset","compareNatural","Index"],(function(_ref){var typed=_ref.typed,size=_ref.size,subset=_ref.subset,compareNatural=_ref.compareNatural,Index=_ref.Index;return typed(name$2L,{"Array | Matrix":function ArrayMatrix(a){if(0===subset(size(a),new Index(0)))return[];for(var b=flatten(Array.isArray(a)?a:a.toArray()).sort(compareNatural),result=[],number=0;number.toString(2).length<=b.length;)result.push(_subset(b,number.toString(2).split("").reverse())),number++;return _sort(result)}});function _subset(array,bitarray){for(var result=[],i=0;i<bitarray.length;i++)"1"===bitarray[i]&&result.push(array[i]);return result}function _sort(array){for(var temp=[],i=array.length-1;i>0;i--)for(var j=0;j<i;j++)array[j].length>array[j+1].length&&(temp=array[j],array[j]=array[j+1],array[j+1]=temp);return array}})),exports_9("createSetPowerset",createSetPowerset),createSetSize=factory(name$2M="setSize",dependencies$2N=["typed","compareNatural"],(function(_ref){var typed=_ref.typed,compareNatural=_ref.compareNatural;return typed(name$2M,{"Array | Matrix":function ArrayMatrix(a){return Array.isArray(a)?flatten(a).length:flatten(a.toArray()).length},"Array | Matrix, boolean":function ArrayMatrixBoolean(a,unique){if(!1===unique||0===a.length)return Array.isArray(a)?flatten(a).length:flatten(a.toArray()).length;for(var b=flatten(Array.isArray(a)?a:a.toArray()).sort(compareNatural),count=1,i=1;i<b.length;i++)0!==compareNatural(b[i],b[i-1])&&count++;return count}})})),exports_9("createSetSize",createSetSize),createSetSymDifference=factory(name$2N="setSymDifference",dependencies$2O=["typed","size","concat","subset","setDifference","Index"],(function(_ref){var typed=_ref.typed,size=_ref.size,concat=_ref.concat,subset=_ref.subset,setDifference=_ref.setDifference,Index=_ref.Index;return typed(name$2N,{"Array | Matrix, Array | Matrix":function ArrayMatrixArrayMatrix(a1,a2){if(0===subset(size(a1),new Index(0)))return flatten(a2);if(0===subset(size(a2),new Index(0)))return flatten(a1);var b1=flatten(a1),b2=flatten(a2);return concat(setDifference(b1,b2),setDifference(b2,b1))}})})),exports_9("createSetSymDifference",createSetSymDifference),createSetUnion=factory(name$2O="setUnion",dependencies$2P=["typed","size","concat","subset","setIntersect","setSymDifference","Index"],(function(_ref){var typed=_ref.typed,size=_ref.size,concat=_ref.concat,subset=_ref.subset,setIntersect=_ref.setIntersect,setSymDifference=_ref.setSymDifference,Index=_ref.Index;return typed(name$2O,{"Array | Matrix, Array | Matrix":function ArrayMatrixArrayMatrix(a1,a2){if(0===subset(size(a1),new Index(0)))return flatten(a2);if(0===subset(size(a2),new Index(0)))return flatten(a1);var b1=flatten(a1),b2=flatten(a2);return concat(setSymDifference(b1,b2),setIntersect(b1,b2))}})})),exports_9("createSetUnion",createSetUnion),name$2P="add",createAdd=factory("add",dependencies$2Q=["typed","matrix","addScalar","equalScalar","DenseMatrix","SparseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,addScalar=_ref.addScalar,equalScalar=_ref.equalScalar,DenseMatrix=_ref.DenseMatrix,SparseMatrix=_ref.SparseMatrix,algorithm01=createAlgorithm01({typed:typed}),algorithm04=createAlgorithm04({typed:typed,equalScalar:equalScalar}),algorithm10=createAlgorithm10({typed:typed,DenseMatrix:DenseMatrix}),algorithm13=createAlgorithm13({typed:typed}),algorithm14=createAlgorithm14({typed:typed});return typed("add",extend({"DenseMatrix, DenseMatrix":function DenseMatrixDenseMatrix(x,y){return algorithm13(x,y,addScalar)},"DenseMatrix, SparseMatrix":function DenseMatrixSparseMatrix(x,y){return algorithm01(x,y,addScalar,!1)},"SparseMatrix, DenseMatrix":function SparseMatrixDenseMatrix(x,y){return algorithm01(y,x,addScalar,!0)},"SparseMatrix, SparseMatrix":function SparseMatrixSparseMatrix(x,y){return algorithm04(x,y,addScalar)},"Array, Array":function ArrayArray(x,y){return this(matrix(x),matrix(y)).valueOf()},"Array, Matrix":function ArrayMatrix(x,y){return this(matrix(x),y)},"Matrix, Array":function MatrixArray(x,y){return this(x,matrix(y))},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,addScalar,!1)},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm10(x,y,addScalar,!1)},"any, DenseMatrix":function anyDenseMatrix(x,y){return algorithm14(y,x,addScalar,!0)},"any, SparseMatrix":function anySparseMatrix(x,y){return algorithm10(y,x,addScalar,!0)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,addScalar,!1).valueOf()},"any, Array":function anyArray(x,y){return algorithm14(matrix(y),x,addScalar,!0).valueOf()},"any, any":addScalar,"any, any, ...any":function anyAnyAny(x,y,rest){for(var result=this(x,y),i=0;i<rest.length;i++)result=this(result,rest[i]);return result}},addScalar.signatures))})),exports_9("createAdd",createAdd),name$2Q="hypot",createHypot=factory("hypot",dependencies$2R=["typed","abs","addScalar","divideScalar","multiplyScalar","sqrt","smaller","isPositive"],(function(_ref){var typed=_ref.typed,abs=_ref.abs,addScalar=_ref.addScalar,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,sqrt=_ref.sqrt,smaller=_ref.smaller,isPositive=_ref.isPositive;return typed("hypot",{"... number | BigNumber":_hypot,Array:function Array(x){return this.apply(this,flatten(x))},Matrix:function Matrix(x){return this.apply(this,flatten(x.toArray()))}});function _hypot(args){for(var result=0,largest=0,i=0;i<args.length;i++){var value=abs(args[i]);smaller(largest,value)?(result=multiplyScalar(result,multiplyScalar(divideScalar(largest,value),divideScalar(largest,value))),result=addScalar(result,1),largest=value):result=addScalar(result,isPositive(value)?multiplyScalar(divideScalar(value,largest),divideScalar(value,largest)):value)}return multiplyScalar(largest,sqrt(result))}})),exports_9("createHypot",createHypot),name$2R="norm",createNorm=factory("norm",dependencies$2S=["typed","abs","add","pow","conj","sqrt","multiply","equalScalar","larger","smaller","matrix"],(function(_ref){var typed=_ref.typed,abs=_ref.abs,add=_ref.add,pow=_ref.pow,conj=_ref.conj,sqrt=_ref.sqrt,multiply=_ref.multiply,equalScalar=_ref.equalScalar,larger=_ref.larger,smaller=_ref.smaller,matrix=_ref.matrix;return typed("norm",{number:Math.abs,Complex:function Complex(x){return x.abs()},BigNumber:function BigNumber(x){return x.abs()},boolean:function boolean(x){return Math.abs(x)},Array:function Array(x){return _norm(matrix(x),2)},Matrix:function Matrix(x){return _norm(x,2)},"number | Complex | BigNumber | boolean, number | BigNumber | string":function numberComplexBigNumberBooleanNumberBigNumberString(x){return this(x)},"Array, number | BigNumber | string":function ArrayNumberBigNumberString(x,p){return _norm(matrix(x),p)},"Matrix, number | BigNumber | string":function MatrixNumberBigNumberString(x,p){return _norm(x,p)}});function _norm(x,p){var sizeX=x.size();if(1===sizeX.length){if(p===Number.POSITIVE_INFINITY||"inf"===p){var pinf=0;return x.forEach((function(value){var v=abs(value);larger(v,pinf)&&(pinf=v)}),!0),pinf}var ninf;if(p===Number.NEGATIVE_INFINITY||"-inf"===p)return x.forEach((function(value){var v=abs(value);ninf&&!smaller(v,ninf)||(ninf=v)}),!0),ninf||0;if("fro"===p)return _norm(x,2);if("number"==typeof p&&!isNaN(p)){if(!equalScalar(p,0)){var n=0;return x.forEach((function(value){n=add(pow(abs(value),p),n)}),!0),pow(n,1/p)}return Number.POSITIVE_INFINITY}throw new Error("Unsupported parameter value")}if(2===sizeX.length){if(1===p){var c=[],maxc=0;return x.forEach((function(value,index){var j=index[1],cj=add(c[j]||0,abs(value));larger(cj,maxc)&&(maxc=cj),c[j]=cj}),!0),maxc}if(p===Number.POSITIVE_INFINITY||"inf"===p){var r=[],maxr=0;return x.forEach((function(value,index){var i=index[0],ri=add(r[i]||0,abs(value));larger(ri,maxr)&&(maxr=ri),r[i]=ri}),!0),maxr}if("fro"===p){var fro=0;return x.forEach((function(value,index){fro=add(fro,multiply(value,conj(value)))})),abs(sqrt(fro))}if(2===p)throw new Error("Unsupported parameter value, missing implementation of matrix singular value decomposition");throw new Error("Unsupported parameter value")}}})),exports_9("createNorm",createNorm),name$2S="dot",createDot=factory("dot",dependencies$2T=["typed","addScalar","multiplyScalar","conj","size"],(function(_ref){var typed=_ref.typed,addScalar=_ref.addScalar,multiplyScalar=_ref.multiplyScalar,conj=_ref.conj,size=_ref.size;return typed("dot",{"Array | DenseMatrix, Array | DenseMatrix":_denseDot,"SparseMatrix, SparseMatrix":_sparseDot});function _validateDim(x,y){var xSize=_size(x),ySize=_size(y),xLen,yLen;if(1===xSize.length)xLen=xSize[0];else{if(2!==xSize.length||1!==xSize[1])throw new RangeError("Expected a column vector, instead got a matrix of size ("+xSize.join(", ")+")");xLen=xSize[0]}if(1===ySize.length)yLen=ySize[0];else{if(2!==ySize.length||1!==ySize[1])throw new RangeError("Expected a column vector, instead got a matrix of size ("+ySize.join(", ")+")");yLen=ySize[0]}if(xLen!==yLen)throw new RangeError("Vectors must have equal length ("+xLen+" != "+yLen+")");if(0===xLen)throw new RangeError("Cannot calculate the dot product of empty vectors");return xLen}function _denseDot(a,b){var N=_validateDim(a,b),adata=isMatrix(a)?a._data:a,adt=isMatrix(a)?a._datatype:void 0,bdata=isMatrix(b)?b._data:b,bdt=isMatrix(b)?b._datatype:void 0,aIsColumn=2===_size(a).length,bIsColumn=2===_size(b).length,add=addScalar,mul=multiplyScalar;if(adt&&bdt&&adt===bdt&&"string"==typeof adt){var dt=adt;add=typed.find(addScalar,[dt,dt]),mul=typed.find(multiplyScalar,[dt,dt])}if(!aIsColumn&&!bIsColumn){for(var c=mul(conj(adata[0]),bdata[0]),i=1;i<N;i++)c=add(c,mul(conj(adata[i]),bdata[i]));return c}if(!aIsColumn&&bIsColumn){for(var _c=mul(conj(adata[0]),bdata[0][0]),_i=1;_i<N;_i++)_c=add(_c,mul(conj(adata[_i]),bdata[_i][0]));return _c}if(aIsColumn&&!bIsColumn){for(var _c2=mul(conj(adata[0][0]),bdata[0]),_i2=1;_i2<N;_i2++)_c2=add(_c2,mul(conj(adata[_i2][0]),bdata[_i2]));return _c2}if(aIsColumn&&bIsColumn){for(var _c3=mul(conj(adata[0][0]),bdata[0][0]),_i3=1;_i3<N;_i3++)_c3=add(_c3,mul(conj(adata[_i3][0]),bdata[_i3][0]));return _c3}}function _sparseDot(x,y){_validateDim(x,y);for(var xindex=x._index,xvalues=x._values,yindex=y._index,yvalues=y._values,c=0,add=addScalar,mul=multiplyScalar,i=0,j=0;i<xindex.length&&j<yindex.length;){var I=xindex[i],J=yindex[j];I<J?i++:I>J?j++:I===J&&(c=add(c,mul(xvalues[i],yvalues[j])),i++,j++)}return c}function _size(x){return isMatrix(x)?x.size():size(x)}})),exports_9("createDot",createDot),name$2T="trace",createTrace=factory("trace",dependencies$2U=["typed","matrix","add"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,add=_ref.add;return typed("trace",{Array:function _arrayTrace(x){return _denseTrace(matrix(x))},SparseMatrix:_sparseTrace,DenseMatrix:_denseTrace,any:clone});function _denseTrace(m){var size=m._size,data=m._data;switch(size.length){case 1:if(1===size[0])return clone(data[0]);throw new RangeError("Matrix must be square (size: "+format$2(size)+")");case 2:var rows=size[0],cols;if(rows===size[1]){for(var sum=0,i=0;i<rows;i++)sum=add(sum,data[i][i]);return sum}throw new RangeError("Matrix must be square (size: "+format$2(size)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+format$2(size)+")")}}function _sparseTrace(m){var values=m._values,index=m._index,ptr=m._ptr,size=m._size,rows=size[0],columns=size[1];if(rows===columns){var sum=0;if(values.length>0)for(var j=0;j<columns;j++)for(var k0=ptr[j],k1=ptr[j+1],k=k0;k<k1;k++){var i=index[k];if(i===j){sum=add(sum,values[k]);break}if(i>j)break}return sum}throw new RangeError("Matrix must be square (size: "+format$2(size)+")")}})),exports_9("createTrace",createTrace),name$2U="index",createIndex=factory("index",dependencies$2V=["typed","Index"],(function(_ref){var typed=_ref.typed,Index=_ref.Index;return typed("index",{"...number | string | BigNumber | Range | Array | Matrix":function numberStringBigNumberRangeArrayMatrix(args){var ranges=args.map((function(arg){return isBigNumber(arg)?arg.toNumber():Array.isArray(arg)||isMatrix(arg)?arg.map((function(elem){return isBigNumber(elem)?elem.toNumber():elem})):arg})),res=new Index;return Index.apply(res,ranges),res}})})),exports_9("createIndex",createIndex),keywords={end:!0},name$2V="Node",createNode=factory("Node",dependencies$2W=["mathWithTransform"],(function(_ref){var mathWithTransform=_ref.mathWithTransform;function Node(){if(!(this instanceof Node))throw new SyntaxError("Constructor must be called with the new operator")}function _validateScope(scope){for(var symbol in scope)if(hasOwnProperty(scope,symbol)&&symbol in keywords)throw new Error('Scope contains an illegal symbol, "'+symbol+'" is a reserved keyword')}return Node.prototype.evaluate=function(scope){return this.compile().evaluate(scope)},Node.prototype.type="Node",Node.prototype.isNode=!0,Node.prototype.comment="",Node.prototype.compile=function(){var expr=this._compile(mathWithTransform,{}),args={},context=null;function evaluate(scope){var s=scope||{};return _validateScope(s),expr(s,args,null)}return{evaluate:evaluate}},Node.prototype._compile=function(math,argNames){throw new Error("Method _compile should be implemented by type "+this.type)},Node.prototype.forEach=function(callback){throw new Error("Cannot run forEach on a Node interface")},Node.prototype.map=function(callback){throw new Error("Cannot run map on a Node interface")},Node.prototype._ifNode=function(node){if(!isNode(node))throw new TypeError("Callback function must return a Node");return node},Node.prototype.traverse=function(callback){function _traverse(node,callback){node.forEach((function(child,path,parent){callback(child,path,parent),_traverse(child,callback)}))}callback(this,null,null),_traverse(this,callback)},Node.prototype.transform=function(callback){function _transform(child,path,parent){var replacement=callback(child,path,parent);return replacement!==child?replacement:child.map(_transform)}return _transform(this,null,null)},Node.prototype.filter=function(callback){var nodes=[];return this.traverse((function(node,path,parent){callback(node,path,parent)&&nodes.push(node)})),nodes},Node.prototype.clone=function(){throw new Error("Cannot clone a Node interface")},Node.prototype.cloneDeep=function(){return this.map((function(node){return node.cloneDeep()}))},Node.prototype.equals=function(other){return!!other&&deepStrictEqual(this,other)},Node.prototype.toString=function(options){var customString;if(options&&"object"===_typeof$7(options))switch(_typeof$7(options.handler)){case"object":case"undefined":break;case"function":customString=options.handler(this,options);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==customString?customString:this._toString(options)},Node.prototype.toJSON=function(){throw new Error("Cannot serialize object: toJSON not implemented by "+this.type)},Node.prototype.toHTML=function(options){var customString;if(options&&"object"===_typeof$7(options))switch(_typeof$7(options.handler)){case"object":case"undefined":break;case"function":customString=options.handler(this,options);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==customString?customString:this.toHTML(options)},Node.prototype._toString=function(){throw new Error("_toString not implemented for "+this.type)},Node.prototype.toTex=function(options){var customTex;if(options&&"object"===_typeof$7(options))switch(_typeof$7(options.handler)){case"object":case"undefined":break;case"function":customTex=options.handler(this,options);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==customTex?customTex:this._toTex(options)},Node.prototype._toTex=function(options){throw new Error("_toTex not implemented for "+this.type)},Node.prototype.getIdentifier=function(){return this.type},Node.prototype.getContent=function(){return this},Node}),{isClass:!0,isNode:!0}),exports_9("createNode",createNode),createAccessorNode=factory(name$2W="AccessorNode",dependencies$2X=["subset","Node"],(function(_ref){var subset=_ref.subset,Node=_ref.Node,access=accessFactory({subset:subset});function AccessorNode(object,index){if(!(this instanceof AccessorNode))throw new SyntaxError("Constructor must be called with the new operator");if(!isNode(object))throw new TypeError('Node expected for parameter "object"');if(!isIndexNode(index))throw new TypeError('IndexNode expected for parameter "index"');this.object=object||null,this.index=index,Object.defineProperty(this,"name",{get:function(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}.bind(this),set:function set(){throw new Error("Cannot assign a new name, name is read-only")}})}function needParenthesis(node){return!(isAccessorNode(node)||isArrayNode(node)||isConstantNode(node)||isFunctionNode(node)||isObjectNode(node)||isParenthesisNode(node)||isSymbolNode(node))}return AccessorNode.prototype=new Node,AccessorNode.prototype.type="AccessorNode",AccessorNode.prototype.isAccessorNode=!0,AccessorNode.prototype._compile=function(math,argNames){var evalObject=this.object._compile(math,argNames),evalIndex=this.index._compile(math,argNames);if(this.index.isObjectProperty()){var prop=this.index.getObjectProperty();return function evalAccessorNode(scope,args,context){return getSafeProperty(evalObject(scope,args,context),prop)}}return function evalAccessorNode(scope,args,context){var object=evalObject(scope,args,context),index=evalIndex(scope,args,object);return access(object,index)}},AccessorNode.prototype.forEach=function(callback){callback(this.object,"object",this),callback(this.index,"index",this)},AccessorNode.prototype.map=function(callback){return new AccessorNode(this._ifNode(callback(this.object,"object",this)),this._ifNode(callback(this.index,"index",this)))},AccessorNode.prototype.clone=function(){return new AccessorNode(this.object,this.index)},AccessorNode.prototype._toString=function(options){var object=this.object.toString(options);return needParenthesis(this.object)&&(object="("+object+")"),object+this.index.toString(options)},AccessorNode.prototype.toHTML=function(options){var object=this.object.toHTML(options);return needParenthesis(this.object)&&(object='<span class="math-parenthesis math-round-parenthesis">(</span>'+object+'<span class="math-parenthesis math-round-parenthesis">)</span>'),object+this.index.toHTML(options)},AccessorNode.prototype._toTex=function(options){var object=this.object.toTex(options);return needParenthesis(this.object)&&(object="\\left(' + object + '\\right)"),object+this.index.toTex(options)},AccessorNode.prototype.toJSON=function(){return{mathjs:"AccessorNode",object:this.object,index:this.index}},AccessorNode.fromJSON=function(json){return new AccessorNode(json.object,json.index)},AccessorNode}),{isClass:!0,isNode:!0}),exports_9("createAccessorNode",createAccessorNode),createArrayNode=factory(name$2X="ArrayNode",dependencies$2Y=["Node"],(function(_ref){var Node=_ref.Node;function ArrayNode(items){if(!(this instanceof ArrayNode))throw new SyntaxError("Constructor must be called with the new operator");if(this.items=items||[],!Array.isArray(this.items)||!this.items.every(isNode))throw new TypeError("Array containing Nodes expected")}return ArrayNode.prototype=new Node,ArrayNode.prototype.type="ArrayNode",ArrayNode.prototype.isArrayNode=!0,ArrayNode.prototype._compile=function(math,argNames){var evalItems=map(this.items,(function(item){return item._compile(math,argNames)})),asMatrix;if("Array"!==math.config.matrix){var matrix=math.matrix;return function evalArrayNode(scope,args,context){return matrix(map(evalItems,(function(evalItem){return evalItem(scope,args,context)})))}}return function evalArrayNode(scope,args,context){return map(evalItems,(function(evalItem){return evalItem(scope,args,context)}))}},ArrayNode.prototype.forEach=function(callback){for(var i=0;i<this.items.length;i++){var node;callback(this.items[i],"items["+i+"]",this)}},ArrayNode.prototype.map=function(callback){for(var items=[],i=0;i<this.items.length;i++)items[i]=this._ifNode(callback(this.items[i],"items["+i+"]",this));return new ArrayNode(items)},ArrayNode.prototype.clone=function(){return new ArrayNode(this.items.slice(0))},ArrayNode.prototype._toString=function(options){var items;return"["+this.items.map((function(node){return node.toString(options)})).join(", ")+"]"},ArrayNode.prototype.toJSON=function(){return{mathjs:"ArrayNode",items:this.items}},ArrayNode.fromJSON=function(json){return new ArrayNode(json.items)},ArrayNode.prototype.toHTML=function(options){var items;return'<span class="math-parenthesis math-square-parenthesis">[</span>'+this.items.map((function(node){return node.toHTML(options)})).join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'},ArrayNode.prototype._toTex=function(options){var s="\\begin{bmatrix}";return this.items.forEach((function(node){node.items?s+=node.items.map((function(childNode){return childNode.toTex(options)})).join("&"):s+=node.toTex(options),s+="\\\\"})),s+="\\end{bmatrix}"},ArrayNode}),{isClass:!0,isNode:!0}),exports_9("createArrayNode",createArrayNode),properties=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{associativity:"left",associativeWith:[]}},{"OperatorNode:and":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{associativity:"left",associativeWith:[]},"OperatorNode:unequal":{associativity:"left",associativeWith:[]},"OperatorNode:smaller":{associativity:"left",associativeWith:[]},"OperatorNode:larger":{associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{associativity:"left",associativeWith:[]},RelationalNode:{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{associativity:"left",associativeWith:[]}},{"OperatorNode:to":{associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{associativity:"left",associativeWith:[]},"OperatorNode:mod":{associativity:"left",associativeWith:[]}},{"OperatorNode:unaryPlus":{associativity:"right"},"OperatorNode:unaryMinus":{associativity:"right"},"OperatorNode:bitNot":{associativity:"right"},"OperatorNode:not":{associativity:"right"}},{"OperatorNode:pow":{associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{associativity:"left"}},{"OperatorNode:transpose":{associativity:"left"}}],createAssignmentNode=factory(name$2Y="AssignmentNode",dependencies$2Z=["subset","?matrix","Node"],(function(_ref){var subset=_ref.subset,matrix=_ref.matrix,Node=_ref.Node,access=accessFactory({subset:subset}),assign=assignFactory({subset:subset,matrix:matrix});function AssignmentNode(object,index,value){if(!(this instanceof AssignmentNode))throw new SyntaxError("Constructor must be called with the new operator");if(this.object=object,this.index=value?index:null,this.value=value||index,!isSymbolNode(object)&&!isAccessorNode(object))throw new TypeError('SymbolNode or AccessorNode expected as "object"');if(isSymbolNode(object)&&"end"===object.name)throw new Error('Cannot assign to symbol "end"');if(this.index&&!isIndexNode(this.index))throw new TypeError('IndexNode expected as "index"');if(!isNode(this.value))throw new TypeError('Node expected as "value"');Object.defineProperty(this,"name",{get:function(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}.bind(this),set:function set(){throw new Error("Cannot assign a new name, name is read-only")}})}function needParenthesis(node,parenthesis){parenthesis||(parenthesis="keep");var precedence=getPrecedence(node,parenthesis),exprPrecedence=getPrecedence(node.value,parenthesis);return"all"===parenthesis||null!==exprPrecedence&&exprPrecedence<=precedence}return AssignmentNode.prototype=new Node,AssignmentNode.prototype.type="AssignmentNode",AssignmentNode.prototype.isAssignmentNode=!0,AssignmentNode.prototype._compile=function(math,argNames){var evalObject=this.object._compile(math,argNames),evalIndex=this.index?this.index._compile(math,argNames):null,evalValue=this.value._compile(math,argNames),name=this.object.name;if(this.index){if(this.index.isObjectProperty()){var prop=this.index.getObjectProperty();return function evalAssignmentNode(scope,args,context){var object=evalObject(scope,args,context),value=evalValue(scope,args,context);return setSafeProperty(object,prop,value)}}if(isSymbolNode(this.object))return function evalAssignmentNode(scope,args,context){var childObject=evalObject(scope,args,context),value=evalValue(scope,args,context),index=evalIndex(scope,args,childObject);return setSafeProperty(scope,name,assign(childObject,index,value)),value};var evalParentObject=this.object.object._compile(math,argNames);if(this.object.index.isObjectProperty()){var parentProp=this.object.index.getObjectProperty();return function evalAssignmentNode(scope,args,context){var parent=evalParentObject(scope,args,context),childObject=getSafeProperty(parent,parentProp),index=evalIndex(scope,args,childObject),value=evalValue(scope,args,context);return setSafeProperty(parent,parentProp,assign(childObject,index,value)),value}}var evalParentIndex=this.object.index._compile(math,argNames);return function evalAssignmentNode(scope,args,context){var parent=evalParentObject(scope,args,context),parentIndex=evalParentIndex(scope,args,parent),childObject=access(parent,parentIndex),index=evalIndex(scope,args,childObject),value=evalValue(scope,args,context);return assign(parent,parentIndex,assign(childObject,index,value)),value}}if(!isSymbolNode(this.object))throw new TypeError("SymbolNode expected as object");return function evalAssignmentNode(scope,args,context){return setSafeProperty(scope,name,evalValue(scope,args,context))}},AssignmentNode.prototype.forEach=function(callback){callback(this.object,"object",this),this.index&&callback(this.index,"index",this),callback(this.value,"value",this)},AssignmentNode.prototype.map=function(callback){var object,index,value;return new AssignmentNode(this._ifNode(callback(this.object,"object",this)),this.index?this._ifNode(callback(this.index,"index",this)):null,this._ifNode(callback(this.value,"value",this)))},AssignmentNode.prototype.clone=function(){return new AssignmentNode(this.object,this.index,this.value)},AssignmentNode.prototype._toString=function(options){var object=this.object.toString(options),index=this.index?this.index.toString(options):"",value=this.value.toString(options);return needParenthesis(this,options&&options.parenthesis)&&(value="("+value+")"),object+index+" = "+value},AssignmentNode.prototype.toJSON=function(){return{mathjs:"AssignmentNode",object:this.object,index:this.index,value:this.value}},AssignmentNode.fromJSON=function(json){return new AssignmentNode(json.object,json.index,json.value)},AssignmentNode.prototype.toHTML=function(options){var object=this.object.toHTML(options),index=this.index?this.index.toHTML(options):"",value=this.value.toHTML(options);return needParenthesis(this,options&&options.parenthesis)&&(value='<span class="math-paranthesis math-round-parenthesis">(</span>'+value+'<span class="math-paranthesis math-round-parenthesis">)</span>'),object+index+'<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+value},AssignmentNode.prototype._toTex=function(options){var object=this.object.toTex(options),index=this.index?this.index.toTex(options):"",value=this.value.toTex(options);return needParenthesis(this,options&&options.parenthesis)&&(value="\\left(".concat(value,"\\right)")),object+index+":="+value},AssignmentNode}),{isClass:!0,isNode:!0}),exports_9("createAssignmentNode",createAssignmentNode),createBlockNode=factory(name$2Z="BlockNode",dependencies$2_=["ResultSet","Node"],(function(_ref){var ResultSet=_ref.ResultSet,Node=_ref.Node;function BlockNode(blocks){if(!(this instanceof BlockNode))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(blocks))throw new Error("Array expected");this.blocks=blocks.map((function(block){var node=block&&block.node,visible=!block||void 0===block.visible||block.visible;if(!isNode(node))throw new TypeError('Property "node" must be a Node');if("boolean"!=typeof visible)throw new TypeError('Property "visible" must be a boolean');return{node:node,visible:visible}}))}return BlockNode.prototype=new Node,BlockNode.prototype.type="BlockNode",BlockNode.prototype.isBlockNode=!0,BlockNode.prototype._compile=function(math,argNames){var evalBlocks=map(this.blocks,(function(block){return{evaluate:block.node._compile(math,argNames),visible:block.visible}}));return function evalBlockNodes(scope,args,context){var results=[];return forEach(evalBlocks,(function evalBlockNode(block){var result=block.evaluate(scope,args,context);block.visible&&results.push(result)})),new ResultSet(results)}},BlockNode.prototype.forEach=function(callback){for(var i=0;i<this.blocks.length;i++)callback(this.blocks[i].node,"blocks["+i+"].node",this)},BlockNode.prototype.map=function(callback){for(var blocks=[],i=0;i<this.blocks.length;i++){var block=this.blocks[i],node=this._ifNode(callback(block.node,"blocks["+i+"].node",this));blocks[i]={node:node,visible:block.visible}}return new BlockNode(blocks)},BlockNode.prototype.clone=function(){var blocks;return new BlockNode(this.blocks.map((function(block){return{node:block.node,visible:block.visible}})))},BlockNode.prototype._toString=function(options){return this.blocks.map((function(param){return param.node.toString(options)+(param.visible?"":";")})).join("\n")},BlockNode.prototype.toJSON=function(){return{mathjs:"BlockNode",blocks:this.blocks}},BlockNode.fromJSON=function(json){return new BlockNode(json.blocks)},BlockNode.prototype.toHTML=function(options){return this.blocks.map((function(param){return param.node.toHTML(options)+(param.visible?"":'<span class="math-separator">;</span>')})).join('<span class="math-separator"><br /></span>')},BlockNode.prototype._toTex=function(options){return this.blocks.map((function(param){return param.node.toTex(options)+(param.visible?"":";")})).join("\\;\\;\n")},BlockNode}),{isClass:!0,isNode:!0}),exports_9("createBlockNode",createBlockNode),createConditionalNode=factory(name$2_="ConditionalNode",dependencies$2$=["Node"],(function(_ref){var Node=_ref.Node;function ConditionalNode(condition,trueExpr,falseExpr){if(!(this instanceof ConditionalNode))throw new SyntaxError("Constructor must be called with the new operator");if(!isNode(condition))throw new TypeError("Parameter condition must be a Node");if(!isNode(trueExpr))throw new TypeError("Parameter trueExpr must be a Node");if(!isNode(falseExpr))throw new TypeError("Parameter falseExpr must be a Node");this.condition=condition,this.trueExpr=trueExpr,this.falseExpr=falseExpr}function testCondition(condition){if("number"==typeof condition||"boolean"==typeof condition||"string"==typeof condition)return!!condition;if(condition){if(isBigNumber(condition))return!condition.isZero();if(isComplex(condition))return!(!condition.re&&!condition.im);if(isUnit(condition))return!!condition.value}if(null==condition)return!1;throw new TypeError('Unsupported type of condition "'+typeOf(condition)+'"')}return ConditionalNode.prototype=new Node,ConditionalNode.prototype.type="ConditionalNode",ConditionalNode.prototype.isConditionalNode=!0,ConditionalNode.prototype._compile=function(math,argNames){var evalCondition=this.condition._compile(math,argNames),evalTrueExpr=this.trueExpr._compile(math,argNames),evalFalseExpr=this.falseExpr._compile(math,argNames);return function evalConditionalNode(scope,args,context){return testCondition(evalCondition(scope,args,context))?evalTrueExpr(scope,args,context):evalFalseExpr(scope,args,context)}},ConditionalNode.prototype.forEach=function(callback){callback(this.condition,"condition",this),callback(this.trueExpr,"trueExpr",this),callback(this.falseExpr,"falseExpr",this)},ConditionalNode.prototype.map=function(callback){return new ConditionalNode(this._ifNode(callback(this.condition,"condition",this)),this._ifNode(callback(this.trueExpr,"trueExpr",this)),this._ifNode(callback(this.falseExpr,"falseExpr",this)))},ConditionalNode.prototype.clone=function(){return new ConditionalNode(this.condition,this.trueExpr,this.falseExpr)},ConditionalNode.prototype._toString=function(options){var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",precedence=getPrecedence(this,parenthesis),condition=this.condition.toString(options),conditionPrecedence=getPrecedence(this.condition,parenthesis);("all"===parenthesis||"OperatorNode"===this.condition.type||null!==conditionPrecedence&&conditionPrecedence<=precedence)&&(condition="("+condition+")");var trueExpr=this.trueExpr.toString(options),truePrecedence=getPrecedence(this.trueExpr,parenthesis);("all"===parenthesis||"OperatorNode"===this.trueExpr.type||null!==truePrecedence&&truePrecedence<=precedence)&&(trueExpr="("+trueExpr+")");var falseExpr=this.falseExpr.toString(options),falsePrecedence=getPrecedence(this.falseExpr,parenthesis);return("all"===parenthesis||"OperatorNode"===this.falseExpr.type||null!==falsePrecedence&&falsePrecedence<=precedence)&&(falseExpr="("+falseExpr+")"),condition+" ? "+trueExpr+" : "+falseExpr},ConditionalNode.prototype.toJSON=function(){return{mathjs:"ConditionalNode",condition:this.condition,trueExpr:this.trueExpr,falseExpr:this.falseExpr}},ConditionalNode.fromJSON=function(json){return new ConditionalNode(json.condition,json.trueExpr,json.falseExpr)},ConditionalNode.prototype.toHTML=function(options){var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",precedence=getPrecedence(this,parenthesis),condition=this.condition.toHTML(options),conditionPrecedence=getPrecedence(this.condition,parenthesis);("all"===parenthesis||"OperatorNode"===this.condition.type||null!==conditionPrecedence&&conditionPrecedence<=precedence)&&(condition='<span class="math-parenthesis math-round-parenthesis">(</span>'+condition+'<span class="math-parenthesis math-round-parenthesis">)</span>');var trueExpr=this.trueExpr.toHTML(options),truePrecedence=getPrecedence(this.trueExpr,parenthesis);("all"===parenthesis||"OperatorNode"===this.trueExpr.type||null!==truePrecedence&&truePrecedence<=precedence)&&(trueExpr='<span class="math-parenthesis math-round-parenthesis">(</span>'+trueExpr+'<span class="math-parenthesis math-round-parenthesis">)</span>');var falseExpr=this.falseExpr.toHTML(options),falsePrecedence=getPrecedence(this.falseExpr,parenthesis);return("all"===parenthesis||"OperatorNode"===this.falseExpr.type||null!==falsePrecedence&&falsePrecedence<=precedence)&&(falseExpr='<span class="math-parenthesis math-round-parenthesis">(</span>'+falseExpr+'<span class="math-parenthesis math-round-parenthesis">)</span>'),condition+'<span class="math-operator math-conditional-operator">?</span>'+trueExpr+'<span class="math-operator math-conditional-operator">:</span>'+falseExpr},ConditionalNode.prototype._toTex=function(options){return"\\begin{cases} {"+this.trueExpr.toTex(options)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(options)+"}\\\\{"+this.falseExpr.toTex(options)+"}, &\\quad{\\text{otherwise}}\\end{cases}"},ConditionalNode}),{isClass:!0,isNode:!0}),exports_9("createConditionalNode",createConditionalNode),latexSymbols={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"},latexFunctions={abs:{1:"\\left|${args[0]}\\right|"},add:{2:"\\left(${args[0]}".concat((latexOperators={transpose:"^\\top",ctranspose:"^H",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"\\~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"}).add,"${args[1]}\\right)")},cbrt:{1:"\\sqrt[3]{${args[0]}}"},ceil:{1:"\\left\\lceil${args[0]}\\right\\rceil"},cube:{1:"\\left(${args[0]}\\right)^3"},divide:{2:"\\frac{${args[0]}}{${args[1]}}"},dotDivide:{2:"\\left(${args[0]}".concat(latexOperators.dotDivide,"${args[1]}\\right)")},dotMultiply:{2:"\\left(${args[0]}".concat(latexOperators.dotMultiply,"${args[1]}\\right)")},dotPow:{2:"\\left(${args[0]}".concat(latexOperators.dotPow,"${args[1]}\\right)")},exp:{1:"\\exp\\left(${args[0]}\\right)"},expm1:"\\left(e".concat(latexOperators.pow,"{${args[0]}}-1\\right)"),fix:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},floor:{1:"\\left\\lfloor${args[0]}\\right\\rfloor"},gcd:"\\gcd\\left(${args}\\right)",hypot:"\\hypot\\left(${args}\\right)",log:{1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},log10:{1:"\\log_{10}\\left(${args[0]}\\right)"},log1p:{1:"\\ln\\left(${args[0]}+1\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}+1\\right)"},log2:"\\log_{2}\\left(${args[0]}\\right)",mod:{2:"\\left(${args[0]}".concat(latexOperators.mod,"${args[1]}\\right)")},multiply:{2:"\\left(${args[0]}".concat(latexOperators.multiply,"${args[1]}\\right)")},norm:{1:"\\left\\|${args[0]}\\right\\|",2:void 0},nthRoot:{2:"\\sqrt[${args[1]}]{${args[0]}}"},nthRoots:{2:"\\{y : $y^{args[1]} = {${args[0]}}\\}"},pow:{2:"\\left(${args[0]}\\right)".concat(latexOperators.pow,"{${args[1]}}")},round:{1:"\\left\\lfloor${args[0]}\\right\\rceil",2:void 0},sign:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},sqrt:{1:"\\sqrt{${args[0]}}"},square:{1:"\\left(${args[0]}\\right)^2"},subtract:{2:"\\left(${args[0]}".concat(latexOperators.subtract,"${args[1]}\\right)")},unaryMinus:{1:"".concat(latexOperators.unaryMinus,"\\left(${args[0]}\\right)")},unaryPlus:{1:"".concat(latexOperators.unaryPlus,"\\left(${args[0]}\\right)")},bitAnd:{2:"\\left(${args[0]}".concat(latexOperators.bitAnd,"${args[1]}\\right)")},bitNot:{1:latexOperators.bitNot+"\\left(${args[0]}\\right)"},bitOr:{2:"\\left(${args[0]}".concat(latexOperators.bitOr,"${args[1]}\\right)")},bitXor:{2:"\\left(${args[0]}".concat(latexOperators.bitXor,"${args[1]}\\right)")},leftShift:{2:"\\left(${args[0]}".concat(latexOperators.leftShift,"${args[1]}\\right)")},rightArithShift:{2:"\\left(${args[0]}".concat(latexOperators.rightArithShift,"${args[1]}\\right)")},rightLogShift:{2:"\\left(${args[0]}".concat(latexOperators.rightLogShift,"${args[1]}\\right)")},bellNumbers:{1:"\\mathrm{B}_{${args[0]}}"},catalan:{1:"\\mathrm{C}_{${args[0]}}"},stirlingS2:{2:"\\mathrm{S}\\left(${args}\\right)"},arg:{1:"\\arg\\left(${args[0]}\\right)"},conj:{1:"\\left(${args[0]}\\right)^*"},im:{1:"\\Im\\left\\lbrace${args[0]}\\right\\rbrace"},re:{1:"\\Re\\left\\lbrace${args[0]}\\right\\rbrace"},and:{2:"\\left(${args[0]}".concat(latexOperators.and,"${args[1]}\\right)")},not:{1:latexOperators.not+"\\left(${args[0]}\\right)"},or:{2:"\\left(${args[0]}".concat(latexOperators.or,"${args[1]}\\right)")},xor:{2:"\\left(${args[0]}".concat(latexOperators.xor,"${args[1]}\\right)")},cross:{2:"\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)"},ctranspose:{1:"\\left(${args[0]}\\right)".concat(latexOperators.ctranspose)},det:{1:"\\det\\left(${args[0]}\\right)"},dot:{2:"\\left(${args[0]}\\cdot${args[1]}\\right)"},expm:{1:"\\exp\\left(${args[0]}\\right)"},inv:{1:"\\left(${args[0]}\\right)^{-1}"},sqrtm:{1:"{${args[0]}}".concat(latexOperators.pow,"{\\frac{1}{2}}")},trace:{1:"\\mathrm{tr}\\left(${args[0]}\\right)"},transpose:{1:"\\left(${args[0]}\\right)".concat(latexOperators.transpose)},combinations:{2:"\\binom{${args[0]}}{${args[1]}}"},combinationsWithRep:{2:"\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)"},factorial:{1:"\\left(${args[0]}\\right)".concat(latexOperators.factorial)},gamma:{1:"\\Gamma\\left(${args[0]}\\right)"},equal:{2:"\\left(${args[0]}".concat(latexOperators.equal,"${args[1]}\\right)")},larger:{2:"\\left(${args[0]}".concat(latexOperators.larger,"${args[1]}\\right)")},largerEq:{2:"\\left(${args[0]}".concat(latexOperators.largerEq,"${args[1]}\\right)")},smaller:{2:"\\left(${args[0]}".concat(latexOperators.smaller,"${args[1]}\\right)")},smallerEq:{2:"\\left(${args[0]}".concat(latexOperators.smallerEq,"${args[1]}\\right)")},unequal:{2:"\\left(${args[0]}".concat(latexOperators.unequal,"${args[1]}\\right)")},erf:{1:"erf\\left(${args[0]}\\right)"},max:"\\max\\left(${args}\\right)",min:"\\min\\left(${args}\\right)",variance:"\\mathrm{Var}\\left(${args}\\right)",acos:{1:"\\cos^{-1}\\left(${args[0]}\\right)"},acosh:{1:"\\cosh^{-1}\\left(${args[0]}\\right)"},acot:{1:"\\cot^{-1}\\left(${args[0]}\\right)"},acoth:{1:"\\coth^{-1}\\left(${args[0]}\\right)"},acsc:{1:"\\csc^{-1}\\left(${args[0]}\\right)"},acsch:{1:"\\mathrm{csch}^{-1}\\left(${args[0]}\\right)"},asec:{1:"\\sec^{-1}\\left(${args[0]}\\right)"},asech:{1:"\\mathrm{sech}^{-1}\\left(${args[0]}\\right)"},asin:{1:"\\sin^{-1}\\left(${args[0]}\\right)"},asinh:{1:"\\sinh^{-1}\\left(${args[0]}\\right)"},atan:{1:"\\tan^{-1}\\left(${args[0]}\\right)"},atan2:{2:"\\mathrm{atan2}\\left(${args}\\right)"},atanh:{1:"\\tanh^{-1}\\left(${args[0]}\\right)"},cos:{1:"\\cos\\left(${args[0]}\\right)"},cosh:{1:"\\cosh\\left(${args[0]}\\right)"},cot:{1:"\\cot\\left(${args[0]}\\right)"},coth:{1:"\\coth\\left(${args[0]}\\right)"},csc:{1:"\\csc\\left(${args[0]}\\right)"},csch:{1:"\\mathrm{csch}\\left(${args[0]}\\right)"},sec:{1:"\\sec\\left(${args[0]}\\right)"},sech:{1:"\\mathrm{sech}\\left(${args[0]}\\right)"},sin:{1:"\\sin\\left(${args[0]}\\right)"},sinh:{1:"\\sinh\\left(${args[0]}\\right)"},tan:{1:"\\tan\\left(${args[0]}\\right)"},tanh:{1:"\\tanh\\left(${args[0]}\\right)"},to:{2:"\\left(${args[0]}".concat(latexOperators.to,"${args[1]}\\right)")},numeric:function numeric(node,options){return node.args[0].toTex()},number:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},string:{0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},bignumber:{0:"0",1:"\\left(${args[0]}\\right)"},complex:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+".concat(latexSymbols.i,"\\cdot\\left(${args[1]}\\right)\\right)")},matrix:{0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},sparse:{0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},unit:{1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"}},defaultTemplate="\\mathrm{${name}}\\left(${args}\\right)",latexUnits={deg:"^\\circ"},createConstantNode=factory(name$2$="ConstantNode",dependencies$30=["Node"],(function(_ref){var Node=_ref.Node;function ConstantNode(value){if(!(this instanceof ConstantNode))throw new SyntaxError("Constructor must be called with the new operator");this.value=value}return ConstantNode.prototype=new Node,ConstantNode.prototype.type="ConstantNode",ConstantNode.prototype.isConstantNode=!0,ConstantNode.prototype._compile=function(math,argNames){var value=this.value;return function evalConstantNode(){return value}},ConstantNode.prototype.forEach=function(callback){},ConstantNode.prototype.map=function(callback){return this.clone()},ConstantNode.prototype.clone=function(){return new ConstantNode(this.value)},ConstantNode.prototype._toString=function(options){return format$2(this.value,options)},ConstantNode.prototype.toHTML=function(options){var value=this._toString(options);switch(typeOf(this.value)){case"number":case"BigNumber":case"Fraction":return'<span class="math-number">'+value+"</span>";case"string":return'<span class="math-string">'+value+"</span>";case"boolean":return'<span class="math-boolean">'+value+"</span>";case"null":return'<span class="math-null-symbol">'+value+"</span>";case"undefined":return'<span class="math-undefined">'+value+"</span>";default:return'<span class="math-symbol">'+value+"</span>"}},ConstantNode.prototype.toJSON=function(){return{mathjs:"ConstantNode",value:this.value}},ConstantNode.fromJSON=function(json){return new ConstantNode(json.value)},ConstantNode.prototype._toTex=function(options){var value=this._toString(options);switch(typeOf(this.value)){case"string":return"\\mathtt{"+escapeLatex(value)+"}";case"number":case"BigNumber":if(!isFinite(this.value))return this.value.valueOf()<0?"-\\infty":"\\infty";var index=value.toLowerCase().indexOf("e");return-1!==index?value.substring(0,index)+"\\cdot10^{"+value.substring(index+1)+"}":value;case"Fraction":return this.value.toLatex();default:return value}},ConstantNode}),{isClass:!0,isNode:!0}),exports_9("createConstantNode",createConstantNode),createFunctionAssignmentNode=factory(name$30="FunctionAssignmentNode",dependencies$31=["typed","Node"],(function(_ref){var typed=_ref.typed,Node=_ref.Node;function FunctionAssignmentNode(name,params,expr){if(!(this instanceof FunctionAssignmentNode))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof name)throw new TypeError('String expected for parameter "name"');if(!Array.isArray(params))throw new TypeError('Array containing strings or objects expected for parameter "params"');if(!isNode(expr))throw new TypeError('Node expected for parameter "expr"');if(name in keywords)throw new Error('Illegal function name, "'+name+'" is a reserved keyword');this.name=name,this.params=params.map((function(param){return param&&param.name||param})),this.types=params.map((function(param){return param&&param.type||"any"})),this.expr=expr}function needParenthesis(node,parenthesis){var precedence=getPrecedence(node,parenthesis),exprPrecedence=getPrecedence(node.expr,parenthesis);return"all"===parenthesis||null!==exprPrecedence&&exprPrecedence<=precedence}return FunctionAssignmentNode.prototype=new Node,FunctionAssignmentNode.prototype.type="FunctionAssignmentNode",FunctionAssignmentNode.prototype.isFunctionAssignmentNode=!0,FunctionAssignmentNode.prototype._compile=function(math,argNames){var childArgNames=Object.create(argNames);forEach(this.params,(function(param){childArgNames[param]=!0}));var evalExpr=this.expr._compile(math,childArgNames),name=this.name,params=this.params,signature=join(this.types,","),syntax=name+"("+join(this.params,", ")+")";return function evalFunctionAssignmentNode(scope,args,context){var signatures={};signatures[signature]=function(){for(var childArgs=Object.create(args),i=0;i<params.length;i++)childArgs[params[i]]=arguments[i];return evalExpr(scope,childArgs,context)};var fn=typed(name,signatures);return fn.syntax=syntax,setSafeProperty(scope,name,fn),fn}},FunctionAssignmentNode.prototype.forEach=function(callback){callback(this.expr,"expr",this)},FunctionAssignmentNode.prototype.map=function(callback){var expr=this._ifNode(callback(this.expr,"expr",this));return new FunctionAssignmentNode(this.name,this.params.slice(0),expr)},FunctionAssignmentNode.prototype.clone=function(){return new FunctionAssignmentNode(this.name,this.params.slice(0),this.expr)},FunctionAssignmentNode.prototype._toString=function(options){var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",expr=this.expr.toString(options);return needParenthesis(this,parenthesis)&&(expr="("+expr+")"),this.name+"("+this.params.join(", ")+") = "+expr},FunctionAssignmentNode.prototype.toJSON=function(){var types=this.types;return{mathjs:"FunctionAssignmentNode",name:this.name,params:this.params.map((function(param,index){return{name:param,type:types[index]}})),expr:this.expr}},FunctionAssignmentNode.fromJSON=function(json){return new FunctionAssignmentNode(json.name,json.params,json.expr)},FunctionAssignmentNode.prototype.toHTML=function(options){for(var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",params=[],i=0;i<this.params.length;i++)params.push('<span class="math-symbol math-parameter">'+escape(this.params[i])+"</span>");var expr=this.expr.toHTML(options);return needParenthesis(this,parenthesis)&&(expr='<span class="math-parenthesis math-round-parenthesis">(</span>'+expr+'<span class="math-parenthesis math-round-parenthesis">)</span>'),'<span class="math-function">'+escape(this.name)+'</span><span class="math-parenthesis math-round-parenthesis">(</span>'+params.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+expr},FunctionAssignmentNode.prototype._toTex=function(options){var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",expr=this.expr.toTex(options);return needParenthesis(this,parenthesis)&&(expr="\\left(".concat(expr,"\\right)")),"\\mathrm{"+this.name+"}\\left("+this.params.map(toSymbol).join(",")+"\\right):="+expr},FunctionAssignmentNode}),{isClass:!0,isNode:!0}),exports_9("createFunctionAssignmentNode",createFunctionAssignmentNode),createIndexNode=factory(name$31="IndexNode",dependencies$32=["Range","Node","size"],(function(_ref){var Range=_ref.Range,Node=_ref.Node,size=_ref.size;function IndexNode(dimensions,dotNotation){if(!(this instanceof IndexNode))throw new SyntaxError("Constructor must be called with the new operator");if(this.dimensions=dimensions,this.dotNotation=dotNotation||!1,!Array.isArray(dimensions)||!dimensions.every(isNode))throw new TypeError('Array containing Nodes expected for parameter "dimensions"');if(this.dotNotation&&!this.isObjectProperty())throw new Error("dotNotation only applicable for object properties")}function createRange(start,end,step){return new Range(isBigNumber(start)?start.toNumber():start,isBigNumber(end)?end.toNumber():end,isBigNumber(step)?step.toNumber():step)}return IndexNode.prototype=new Node,IndexNode.prototype.type="IndexNode",IndexNode.prototype.isIndexNode=!0,IndexNode.prototype._compile=function(math,argNames){var evalDimensions=map(this.dimensions,(function(range,i){if(isRangeNode(range)){if(range.needsEnd()){var childArgNames=Object.create(argNames);childArgNames.end=!0;var evalStart=range.start._compile(math,childArgNames),evalEnd=range.end._compile(math,childArgNames),evalStep=range.step?range.step._compile(math,childArgNames):function(){return 1};return function evalDimension(scope,args,context){var s=size(context).valueOf(),childArgs=Object.create(args);return childArgs.end=s[i],createRange(evalStart(scope,childArgs,context),evalEnd(scope,childArgs,context),evalStep(scope,childArgs,context))}}var _evalStart=range.start._compile(math,argNames),_evalEnd=range.end._compile(math,argNames),_evalStep=range.step?range.step._compile(math,argNames):function(){return 1};return function evalDimension(scope,args,context){return createRange(_evalStart(scope,args,context),_evalEnd(scope,args,context),_evalStep(scope,args,context))}}if(isSymbolNode(range)&&"end"===range.name){var _childArgNames=Object.create(argNames);_childArgNames.end=!0;var evalRange=range._compile(math,_childArgNames);return function evalDimension(scope,args,context){var s=size(context).valueOf(),childArgs=Object.create(args);return childArgs.end=s[i],evalRange(scope,childArgs,context)}}var _evalRange=range._compile(math,argNames);return function evalDimension(scope,args,context){return _evalRange(scope,args,context)}})),index=getSafeProperty(math,"index");return function evalIndexNode(scope,args,context){var dimensions=map(evalDimensions,(function(evalDimension){return evalDimension(scope,args,context)}));return index.apply(void 0,_toConsumableArray(dimensions))}},IndexNode.prototype.forEach=function(callback){for(var i=0;i<this.dimensions.length;i++)callback(this.dimensions[i],"dimensions["+i+"]",this)},IndexNode.prototype.map=function(callback){for(var dimensions=[],i=0;i<this.dimensions.length;i++)dimensions[i]=this._ifNode(callback(this.dimensions[i],"dimensions["+i+"]",this));return new IndexNode(dimensions,this.dotNotation)},IndexNode.prototype.clone=function(){return new IndexNode(this.dimensions.slice(0),this.dotNotation)},IndexNode.prototype.isObjectProperty=function(){return 1===this.dimensions.length&&isConstantNode(this.dimensions[0])&&"string"==typeof this.dimensions[0].value},IndexNode.prototype.getObjectProperty=function(){return this.isObjectProperty()?this.dimensions[0].value:null},IndexNode.prototype._toString=function(options){return this.dotNotation?"."+this.getObjectProperty():"["+this.dimensions.join(", ")+"]"},IndexNode.prototype.toJSON=function(){return{mathjs:"IndexNode",dimensions:this.dimensions,dotNotation:this.dotNotation}},IndexNode.fromJSON=function(json){return new IndexNode(json.dimensions,json.dotNotation)},IndexNode.prototype.toHTML=function(options){for(var dimensions=[],i=0;i<this.dimensions.length;i++)dimensions[i]=this.dimensions[i].toHTML();return this.dotNotation?'<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">'+escape(this.getObjectProperty())+"</span>":'<span class="math-parenthesis math-square-parenthesis">[</span>'+dimensions.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'},IndexNode.prototype._toTex=function(options){var dimensions=this.dimensions.map((function(range){return range.toTex(options)}));return this.dotNotation?"."+this.getObjectProperty():"_{"+dimensions.join(",")+"}"},IndexNode}),{isClass:!0,isNode:!0}),exports_9("createIndexNode",createIndexNode),createObjectNode=factory(name$32="ObjectNode",dependencies$33=["Node"],(function(_ref){var Node=_ref.Node;function ObjectNode(properties){if(!(this instanceof ObjectNode))throw new SyntaxError("Constructor must be called with the new operator");if(this.properties=properties||{},properties&&("object"!==_typeof$a(properties)||!Object.keys(properties).every((function(key){return isNode(properties[key])}))))throw new TypeError("Object containing Nodes expected")}return ObjectNode.prototype=new Node,ObjectNode.prototype.type="ObjectNode",ObjectNode.prototype.isObjectNode=!0,ObjectNode.prototype._compile=function(math,argNames){var evalEntries={};for(var key in this.properties)if(hasOwnProperty(this.properties,key)){var stringifiedKey=stringify(key),parsedKey=JSON.parse(stringifiedKey);if(!isSafeProperty(this.properties,parsedKey))throw new Error('No access to property "'+parsedKey+'"');evalEntries[parsedKey]=this.properties[key]._compile(math,argNames)}return function evalObjectNode(scope,args,context){var obj={};for(var _key in evalEntries)hasOwnProperty(evalEntries,_key)&&(obj[_key]=evalEntries[_key](scope,args,context));return obj}},ObjectNode.prototype.forEach=function(callback){for(var key in this.properties)hasOwnProperty(this.properties,key)&&callback(this.properties[key],"properties["+stringify(key)+"]",this)},ObjectNode.prototype.map=function(callback){var properties={};for(var key in this.properties)hasOwnProperty(this.properties,key)&&(properties[key]=this._ifNode(callback(this.properties[key],"properties["+stringify(key)+"]",this)));return new ObjectNode(properties)},ObjectNode.prototype.clone=function(){var properties={};for(var key in this.properties)hasOwnProperty(this.properties,key)&&(properties[key]=this.properties[key]);return new ObjectNode(properties)},ObjectNode.prototype._toString=function(options){var entries=[];for(var key in this.properties)hasOwnProperty(this.properties,key)&&entries.push(stringify(key)+": "+this.properties[key].toString(options));return"{"+entries.join(", ")+"}"},ObjectNode.prototype.toJSON=function(){return{mathjs:"ObjectNode",properties:this.properties}},ObjectNode.fromJSON=function(json){return new ObjectNode(json.properties)},ObjectNode.prototype.toHTML=function(options){var entries=[];for(var key in this.properties)hasOwnProperty(this.properties,key)&&entries.push('<span class="math-symbol math-property">'+escape(key)+'</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>'+this.properties[key].toHTML(options));return'<span class="math-parenthesis math-curly-parenthesis">{</span>'+entries.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-curly-parenthesis">}</span>'},ObjectNode.prototype._toTex=function(options){var entries=[];for(var key in this.properties)hasOwnProperty(this.properties,key)&&entries.push("\\mathbf{"+key+":} & "+this.properties[key].toTex(options)+"\\\\");return"\\left\\{\\begin{array}{ll}".concat(entries.join("\n"),"\\end{array}\\right\\}")},ObjectNode}),{isClass:!0,isNode:!0}),exports_9("createObjectNode",createObjectNode),createOperatorNode=factory(name$33="OperatorNode",dependencies$34=["Node"],(function(_ref){var Node=_ref.Node;function OperatorNode(op,fn,args,implicit){if(!(this instanceof OperatorNode))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof op)throw new TypeError('string expected for parameter "op"');if("string"!=typeof fn)throw new TypeError('string expected for parameter "fn"');if(!Array.isArray(args)||!args.every(isNode))throw new TypeError('Array containing Nodes expected for parameter "args"');this.implicit=!0===implicit,this.op=op,this.fn=fn,this.args=args||[]}function calculateNecessaryParentheses(root,parenthesis,implicit,args,latex){var precedence=getPrecedence(root,parenthesis),associativity=getAssociativity(root,parenthesis),result;if("all"===parenthesis||args.length>2&&"OperatorNode:add"!==root.getIdentifier()&&"OperatorNode:multiply"!==root.getIdentifier())return args.map((function(arg){switch(arg.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return!1;default:return!0}}));switch(args.length){case 0:result=[];break;case 1:var operandPrecedence=getPrecedence(args[0],parenthesis);if(latex&&null!==operandPrecedence){var operandIdentifier,rootIdentifier;if("keep"===parenthesis?(operandIdentifier=args[0].getIdentifier(),rootIdentifier=root.getIdentifier()):(operandIdentifier=args[0].getContent().getIdentifier(),rootIdentifier=root.getContent().getIdentifier()),!1===properties[precedence][rootIdentifier].latexLeftParens){result=[!1];break}if(!1===properties[operandPrecedence][operandIdentifier].latexParens){result=[!1];break}}if(null===operandPrecedence){result=[!1];break}if(operandPrecedence<=precedence){result=[!0];break}result=[!1];break;case 2:var lhsParens,lhsPrecedence=getPrecedence(args[0],parenthesis),assocWithLhs=isAssociativeWith(root,args[0],parenthesis),rhsParens;lhsParens=null!==lhsPrecedence&&(lhsPrecedence===precedence&&"right"===associativity&&!assocWithLhs||lhsPrecedence<precedence);var rhsPrecedence=getPrecedence(args[1],parenthesis),assocWithRhs=isAssociativeWith(root,args[1],parenthesis),_rootIdentifier,lhsIdentifier,rhsIdentifier;if(rhsParens=null!==rhsPrecedence&&(rhsPrecedence===precedence&&"left"===associativity&&!assocWithRhs||rhsPrecedence<precedence),latex)"keep"===parenthesis?(_rootIdentifier=root.getIdentifier(),lhsIdentifier=root.args[0].getIdentifier(),rhsIdentifier=root.args[1].getIdentifier()):(_rootIdentifier=root.getContent().getIdentifier(),lhsIdentifier=root.args[0].getContent().getIdentifier(),rhsIdentifier=root.args[1].getContent().getIdentifier()),null!==lhsPrecedence&&(!1===properties[precedence][_rootIdentifier].latexLeftParens&&(lhsParens=!1),!1===properties[lhsPrecedence][lhsIdentifier].latexParens&&(lhsParens=!1)),null!==rhsPrecedence&&(!1===properties[precedence][_rootIdentifier].latexRightParens&&(rhsParens=!1),!1===properties[rhsPrecedence][rhsIdentifier].latexParens&&(rhsParens=!1));result=[lhsParens,rhsParens];break;default:"OperatorNode:add"!==root.getIdentifier()&&"OperatorNode:multiply"!==root.getIdentifier()||(result=args.map((function(arg){var argPrecedence=getPrecedence(arg,parenthesis),assocWithArg=isAssociativeWith(root,arg,parenthesis),argAssociativity=getAssociativity(arg,parenthesis);return null!==argPrecedence&&(precedence===argPrecedence&&associativity===argAssociativity&&!assocWithArg||argPrecedence<precedence)})))}return args.length>=2&&"OperatorNode:multiply"===root.getIdentifier()&&root.implicit&&"auto"===parenthesis&&"hide"===implicit&&(result=args.map((function(arg,index){var isParenthesisNode="ParenthesisNode"===arg.getIdentifier();return!(!result[index]&&!isParenthesisNode)}))),result}return OperatorNode.prototype=new Node,OperatorNode.prototype.type="OperatorNode",OperatorNode.prototype.isOperatorNode=!0,OperatorNode.prototype._compile=function(math,argNames){if("string"!=typeof this.fn||!isSafeMethod(math,this.fn))throw math[this.fn]?new Error('No access to function "'+this.fn+'"'):new Error("Function "+this.fn+' missing in provided namespace "math"');var fn=getSafeProperty(math,this.fn),evalArgs=map(this.args,(function(arg){return arg._compile(math,argNames)}));if(1===evalArgs.length){var evalArg0=evalArgs[0];return function evalOperatorNode(scope,args,context){return fn(evalArg0(scope,args,context))}}if(2===evalArgs.length){var _evalArg=evalArgs[0],evalArg1=evalArgs[1];return function evalOperatorNode(scope,args,context){return fn(_evalArg(scope,args,context),evalArg1(scope,args,context))}}return function evalOperatorNode(scope,args,context){return fn.apply(null,map(evalArgs,(function(evalArg){return evalArg(scope,args,context)})))}},OperatorNode.prototype.forEach=function(callback){for(var i=0;i<this.args.length;i++)callback(this.args[i],"args["+i+"]",this)},OperatorNode.prototype.map=function(callback){for(var args=[],i=0;i<this.args.length;i++)args[i]=this._ifNode(callback(this.args[i],"args["+i+"]",this));return new OperatorNode(this.op,this.fn,args,this.implicit)},OperatorNode.prototype.clone=function(){return new OperatorNode(this.op,this.fn,this.args.slice(0),this.implicit)},OperatorNode.prototype.isUnary=function(){return 1===this.args.length},OperatorNode.prototype.isBinary=function(){return 2===this.args.length},OperatorNode.prototype._toString=function(options){var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",implicit=options&&options.implicit?options.implicit:"hide",args=this.args,parens=calculateNecessaryParentheses(this,parenthesis,implicit,args,!1);if(1===args.length){var assoc=getAssociativity(this,parenthesis),operand=args[0].toString(options);parens[0]&&(operand="("+operand+")");var opIsNamed=/[a-zA-Z]+/.test(this.op);return"right"===assoc?this.op+(opIsNamed?" ":"")+operand:"left"===assoc?operand+(opIsNamed?" ":"")+this.op:operand+this.op}if(2===args.length){var lhs=args[0].toString(options),rhs=args[1].toString(options);return parens[0]&&(lhs="("+lhs+")"),parens[1]&&(rhs="("+rhs+")"),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===implicit?lhs+" "+rhs:lhs+" "+this.op+" "+rhs}if(args.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())){var stringifiedArgs=args.map((function(arg,index){return arg=arg.toString(options),parens[index]&&(arg="("+arg+")"),arg}));return this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===implicit?stringifiedArgs.join(" "):stringifiedArgs.join(" "+this.op+" ")}return this.fn+"("+this.args.join(", ")+")"},OperatorNode.prototype.toJSON=function(){return{mathjs:"OperatorNode",op:this.op,fn:this.fn,args:this.args,implicit:this.implicit}},OperatorNode.fromJSON=function(json){return new OperatorNode(json.op,json.fn,json.args,json.implicit)},OperatorNode.prototype.toHTML=function(options){var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",implicit=options&&options.implicit?options.implicit:"hide",args=this.args,parens=calculateNecessaryParentheses(this,parenthesis,implicit,args,!1);if(1===args.length){var assoc=getAssociativity(this,parenthesis),operand=args[0].toHTML(options);return parens[0]&&(operand='<span class="math-parenthesis math-round-parenthesis">(</span>'+operand+'<span class="math-parenthesis math-round-parenthesis">)</span>'),"right"===assoc?'<span class="math-operator math-unary-operator math-lefthand-unary-operator">'+escape(this.op)+"</span>"+operand:operand+'<span class="math-operator math-unary-operator math-righthand-unary-operator">'+escape(this.op)+"</span>"}if(2===args.length){var lhs=args[0].toHTML(options),rhs=args[1].toHTML(options);return parens[0]&&(lhs='<span class="math-parenthesis math-round-parenthesis">(</span>'+lhs+'<span class="math-parenthesis math-round-parenthesis">)</span>'),parens[1]&&(rhs='<span class="math-parenthesis math-round-parenthesis">(</span>'+rhs+'<span class="math-parenthesis math-round-parenthesis">)</span>'),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===implicit?lhs+'<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'+rhs:lhs+'<span class="math-operator math-binary-operator math-explicit-binary-operator">'+escape(this.op)+"</span>"+rhs}var stringifiedArgs=args.map((function(arg,index){return arg=arg.toHTML(options),parens[index]&&(arg='<span class="math-parenthesis math-round-parenthesis">(</span>'+arg+'<span class="math-parenthesis math-round-parenthesis">)</span>'),arg}));return args.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())?this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===implicit?stringifiedArgs.join('<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'):stringifiedArgs.join('<span class="math-operator math-binary-operator math-explicit-binary-operator">'+escape(this.op)+"</span>"):'<span class="math-function">'+escape(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+stringifiedArgs.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'},OperatorNode.prototype._toTex=function(options){var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",implicit=options&&options.implicit?options.implicit:"hide",args=this.args,parens=calculateNecessaryParentheses(this,parenthesis,implicit,args,!0),op=latexOperators[this.fn];if(op=void 0===op?this.op:op,1===args.length){var assoc=getAssociativity(this,parenthesis),operand=args[0].toTex(options);return parens[0]&&(operand="\\left(".concat(operand,"\\right)")),"right"===assoc?op+operand:operand+op}if(2===args.length){var lhs=args[0],lhsTex=lhs.toTex(options);parens[0]&&(lhsTex="\\left(".concat(lhsTex,"\\right)"));var rhs,rhsTex=args[1].toTex(options),lhsIdentifier;switch(parens[1]&&(rhsTex="\\left(".concat(rhsTex,"\\right)")),lhsIdentifier="keep"===parenthesis?lhs.getIdentifier():lhs.getContent().getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return op+"{"+lhsTex+"}{"+rhsTex+"}";case"OperatorNode:pow":switch(lhsTex="{"+lhsTex+"}",rhsTex="{"+rhsTex+"}",lhsIdentifier){case"ConditionalNode":case"OperatorNode:divide":lhsTex="\\left(".concat(lhsTex,"\\right)")}break;case"OperatorNode:multiply":if(this.implicit&&"hide"===implicit)return lhsTex+"~"+rhsTex}return lhsTex+op+rhsTex}if(args.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())){var texifiedArgs=args.map((function(arg,index){return arg=arg.toTex(options),parens[index]&&(arg="\\left(".concat(arg,"\\right)")),arg}));return"OperatorNode:multiply"===this.getIdentifier()&&this.implicit?texifiedArgs.join("~"):texifiedArgs.join(op)}return"\\mathrm{"+this.fn+"}\\left("+args.map((function(arg){return arg.toTex(options)})).join(",")+"\\right)"},OperatorNode.prototype.getIdentifier=function(){return this.type+":"+this.fn},OperatorNode}),{isClass:!0,isNode:!0}),exports_9("createOperatorNode",createOperatorNode),createParenthesisNode=factory(name$34="ParenthesisNode",dependencies$35=["Node"],(function(_ref){var Node=_ref.Node;function ParenthesisNode(content){if(!(this instanceof ParenthesisNode))throw new SyntaxError("Constructor must be called with the new operator");if(!isNode(content))throw new TypeError('Node expected for parameter "content"');this.content=content}return ParenthesisNode.prototype=new Node,ParenthesisNode.prototype.type="ParenthesisNode",ParenthesisNode.prototype.isParenthesisNode=!0,ParenthesisNode.prototype._compile=function(math,argNames){return this.content._compile(math,argNames)},ParenthesisNode.prototype.getContent=function(){return this.content.getContent()},ParenthesisNode.prototype.forEach=function(callback){callback(this.content,"content",this)},ParenthesisNode.prototype.map=function(callback){var content;return new ParenthesisNode(callback(this.content,"content",this))},ParenthesisNode.prototype.clone=function(){return new ParenthesisNode(this.content)},ParenthesisNode.prototype._toString=function(options){return!options||options&&!options.parenthesis||options&&"keep"===options.parenthesis?"("+this.content.toString(options)+")":this.content.toString(options)},ParenthesisNode.prototype.toJSON=function(){return{mathjs:"ParenthesisNode",content:this.content}},ParenthesisNode.fromJSON=function(json){return new ParenthesisNode(json.content)},ParenthesisNode.prototype.toHTML=function(options){return!options||options&&!options.parenthesis||options&&"keep"===options.parenthesis?'<span class="math-parenthesis math-round-parenthesis">(</span>'+this.content.toHTML(options)+'<span class="math-parenthesis math-round-parenthesis">)</span>':this.content.toHTML(options)},ParenthesisNode.prototype._toTex=function(options){return!options||options&&!options.parenthesis||options&&"keep"===options.parenthesis?"\\left(".concat(this.content.toTex(options),"\\right)"):this.content.toTex(options)},ParenthesisNode}),{isClass:!0,isNode:!0}),exports_9("createParenthesisNode",createParenthesisNode),createRangeNode=factory(name$35="RangeNode",dependencies$36=["Node"],(function(_ref){var Node=_ref.Node;function RangeNode(start,end,step){if(!(this instanceof RangeNode))throw new SyntaxError("Constructor must be called with the new operator");if(!isNode(start))throw new TypeError("Node expected");if(!isNode(end))throw new TypeError("Node expected");if(step&&!isNode(step))throw new TypeError("Node expected");if(arguments.length>3)throw new Error("Too many arguments");this.start=start,this.end=end,this.step=step||null}function calculateNecessaryParentheses(node,parenthesis){var precedence=getPrecedence(node,parenthesis),parens={},startPrecedence=getPrecedence(node.start,parenthesis);if(parens.start=null!==startPrecedence&&startPrecedence<=precedence||"all"===parenthesis,node.step){var stepPrecedence=getPrecedence(node.step,parenthesis);parens.step=null!==stepPrecedence&&stepPrecedence<=precedence||"all"===parenthesis}var endPrecedence=getPrecedence(node.end,parenthesis);return parens.end=null!==endPrecedence&&endPrecedence<=precedence||"all"===parenthesis,parens}return RangeNode.prototype=new Node,RangeNode.prototype.type="RangeNode",RangeNode.prototype.isRangeNode=!0,RangeNode.prototype.needsEnd=function(){var endSymbols;return this.filter((function(node){return isSymbolNode(node)&&"end"===node.name})).length>0},RangeNode.prototype._compile=function(math,argNames){var range=math.range,evalStart=this.start._compile(math,argNames),evalEnd=this.end._compile(math,argNames);if(this.step){var evalStep=this.step._compile(math,argNames);return function evalRangeNode(scope,args,context){return range(evalStart(scope,args,context),evalEnd(scope,args,context),evalStep(scope,args,context))}}return function evalRangeNode(scope,args,context){return range(evalStart(scope,args,context),evalEnd(scope,args,context))}},RangeNode.prototype.forEach=function(callback){callback(this.start,"start",this),callback(this.end,"end",this),this.step&&callback(this.step,"step",this)},RangeNode.prototype.map=function(callback){return new RangeNode(this._ifNode(callback(this.start,"start",this)),this._ifNode(callback(this.end,"end",this)),this.step&&this._ifNode(callback(this.step,"step",this)))},RangeNode.prototype.clone=function(){return new RangeNode(this.start,this.end,this.step&&this.step)},RangeNode.prototype._toString=function(options){var parenthesis,parens=calculateNecessaryParentheses(this,options&&options.parenthesis?options.parenthesis:"keep"),str,start=this.start.toString(options);if(parens.start&&(start="("+start+")"),str=start,this.step){var step=this.step.toString(options);parens.step&&(step="("+step+")"),str+=":"+step}var end=this.end.toString(options);return parens.end&&(end="("+end+")"),str+=":"+end},RangeNode.prototype.toJSON=function(){return{mathjs:"RangeNode",start:this.start,end:this.end,step:this.step}},RangeNode.fromJSON=function(json){return new RangeNode(json.start,json.end,json.step)},RangeNode.prototype.toHTML=function(options){var parenthesis,parens=calculateNecessaryParentheses(this,options&&options.parenthesis?options.parenthesis:"keep"),str,start=this.start.toHTML(options);if(parens.start&&(start='<span class="math-parenthesis math-round-parenthesis">(</span>'+start+'<span class="math-parenthesis math-round-parenthesis">)</span>'),str=start,this.step){var step=this.step.toHTML(options);parens.step&&(step='<span class="math-parenthesis math-round-parenthesis">(</span>'+step+'<span class="math-parenthesis math-round-parenthesis">)</span>'),str+='<span class="math-operator math-range-operator">:</span>'+step}var end=this.end.toHTML(options);return parens.end&&(end='<span class="math-parenthesis math-round-parenthesis">(</span>'+end+'<span class="math-parenthesis math-round-parenthesis">)</span>'),str+='<span class="math-operator math-range-operator">:</span>'+end},RangeNode.prototype._toTex=function(options){var parenthesis,parens=calculateNecessaryParentheses(this,options&&options.parenthesis?options.parenthesis:"keep"),str=this.start.toTex(options);if(parens.start&&(str="\\left(".concat(str,"\\right)")),this.step){var step=this.step.toTex(options);parens.step&&(step="\\left(".concat(step,"\\right)")),str+=":"+step}var end=this.end.toTex(options);return parens.end&&(end="\\left(".concat(end,"\\right)")),str+=":"+end},RangeNode}),{isClass:!0,isNode:!0}),exports_9("createRangeNode",createRangeNode),createRelationalNode=factory(name$36="RelationalNode",dependencies$37=["Node"],(function(_ref){var Node=_ref.Node;function RelationalNode(conditionals,params){if(!(this instanceof RelationalNode))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(conditionals))throw new TypeError("Parameter conditionals must be an array");if(!Array.isArray(params))throw new TypeError("Parameter params must be an array");if(conditionals.length!==params.length-1)throw new TypeError("Parameter params must contain exactly one more element than parameter conditionals");this.conditionals=conditionals,this.params=params}return RelationalNode.prototype=new Node,RelationalNode.prototype.type="RelationalNode",RelationalNode.prototype.isRelationalNode=!0,RelationalNode.prototype._compile=function(math,argNames){var self=this,compiled=this.params.map((function(p){return p._compile(math,argNames)}));return function evalRelationalNode(scope,args,context){for(var evalLhs,evalRhs=compiled[0](scope,args,context),i=0;i<self.conditionals.length;i++){var condFn;if(evalLhs=evalRhs,evalRhs=compiled[i+1](scope,args,context),!getSafeProperty(math,self.conditionals[i])(evalLhs,evalRhs))return!1}return!0}},RelationalNode.prototype.forEach=function(callback){var _this=this;this.params.forEach((function(n,i){return callback(n,"params["+i+"]",_this)}),this)},RelationalNode.prototype.map=function(callback){var _this2=this;return new RelationalNode(this.conditionals.slice(),this.params.map((function(n,i){return _this2._ifNode(callback(n,"params["+i+"]",_this2))}),this))},RelationalNode.prototype.clone=function(){return new RelationalNode(this.conditionals,this.params)},RelationalNode.prototype._toString=function(options){for(var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",precedence=getPrecedence(this,parenthesis),paramStrings=this.params.map((function(p,index){var paramPrecedence=getPrecedence(p,parenthesis);return"all"===parenthesis||null!==paramPrecedence&&paramPrecedence<=precedence?"("+p.toString(options)+")":p.toString(options)})),operatorMap={equal:"==",unequal:"!=",smaller:"<",larger:">",smallerEq:"<=",largerEq:">="},ret=paramStrings[0],i=0;i<this.conditionals.length;i++)ret+=" "+operatorMap[this.conditionals[i]]+" "+paramStrings[i+1];return ret},RelationalNode.prototype.toJSON=function(){return{mathjs:"RelationalNode",conditionals:this.conditionals,params:this.params}},RelationalNode.fromJSON=function(json){return new RelationalNode(json.conditionals,json.params)},RelationalNode.prototype.toHTML=function(options){for(var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",precedence=getPrecedence(this,parenthesis),paramStrings=this.params.map((function(p,index){var paramPrecedence=getPrecedence(p,parenthesis);return"all"===parenthesis||null!==paramPrecedence&&paramPrecedence<=precedence?'<span class="math-parenthesis math-round-parenthesis">(</span>'+p.toHTML(options)+'<span class="math-parenthesis math-round-parenthesis">)</span>':p.toHTML(options)})),operatorMap={equal:"==",unequal:"!=",smaller:"<",larger:">",smallerEq:"<=",largerEq:">="},ret=paramStrings[0],i=0;i<this.conditionals.length;i++)ret+='<span class="math-operator math-binary-operator math-explicit-binary-operator">'+escape(operatorMap[this.conditionals[i]])+"</span>"+paramStrings[i+1];return ret},RelationalNode.prototype._toTex=function(options){for(var parenthesis=options&&options.parenthesis?options.parenthesis:"keep",precedence=getPrecedence(this,parenthesis),paramStrings=this.params.map((function(p,index){var paramPrecedence=getPrecedence(p,parenthesis);return"all"===parenthesis||null!==paramPrecedence&&paramPrecedence<=precedence?"\\left("+p.toTex(options)+"\right)":p.toTex(options)})),ret=paramStrings[0],i=0;i<this.conditionals.length;i++)ret+=latexOperators[this.conditionals[i]]+paramStrings[i+1];return ret},RelationalNode}),{isClass:!0,isNode:!0}),exports_9("createRelationalNode",createRelationalNode),createSymbolNode=factory(name$37="SymbolNode",dependencies$38=["math","?Unit","Node"],(function(_ref){var math=_ref.math,Unit=_ref.Unit,Node=_ref.Node;function isValuelessUnit(name){return!!Unit&&Unit.isValuelessUnit(name)}function SymbolNode(name){if(!(this instanceof SymbolNode))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof name)throw new TypeError('String expected for parameter "name"');this.name=name}function undef(name){throw new Error("Undefined symbol "+name)}return SymbolNode.prototype=new Node,SymbolNode.prototype.type="SymbolNode",SymbolNode.prototype.isSymbolNode=!0,SymbolNode.prototype._compile=function(math,argNames){var name=this.name;if(!0===argNames[name])return function(scope,args,context){return args[name]};if(name in math)return function(scope,args,context){return getSafeProperty(name in scope?scope:math,name)};var isUnit=isValuelessUnit(name);return function(scope,args,context){return name in scope?getSafeProperty(scope,name):isUnit?new Unit(null,name):undef(name)}},SymbolNode.prototype.forEach=function(callback){},SymbolNode.prototype.map=function(callback){return this.clone()},SymbolNode.prototype.clone=function(){return new SymbolNode(this.name)},SymbolNode.prototype._toString=function(options){return this.name},SymbolNode.prototype.toHTML=function(options){var name=escape(this.name);return"true"===name||"false"===name?'<span class="math-symbol math-boolean">'+name+"</span>":"i"===name?'<span class="math-symbol math-imaginary-symbol">'+name+"</span>":"Infinity"===name?'<span class="math-symbol math-infinity-symbol">'+name+"</span>":"NaN"===name?'<span class="math-symbol math-nan-symbol">'+name+"</span>":"null"===name?'<span class="math-symbol math-null-symbol">'+name+"</span>":"undefined"===name?'<span class="math-symbol math-undefined-symbol">'+name+"</span>":'<span class="math-symbol">'+name+"</span>"},SymbolNode.prototype.toJSON=function(){return{mathjs:"SymbolNode",name:this.name}},SymbolNode.fromJSON=function(json){return new SymbolNode(json.name)},SymbolNode.prototype._toTex=function(options){var isUnit=!1;void 0===math[this.name]&&isValuelessUnit(this.name)&&(isUnit=!0);var symbol=toSymbol(this.name,isUnit);return"\\"===symbol[0]?symbol:" "+symbol},SymbolNode}),{isClass:!0,isNode:!0}),exports_9("createSymbolNode",createSymbolNode),createFunctionNode=factory(name$38="FunctionNode",dependencies$39=["math","Node","SymbolNode"],(function(_ref){var math=_ref.math,Node=_ref.Node,SymbolNode=_ref.SymbolNode;function FunctionNode(fn,args){if(!(this instanceof FunctionNode))throw new SyntaxError("Constructor must be called with the new operator");if("string"==typeof fn&&(fn=new SymbolNode(fn)),!isNode(fn))throw new TypeError('Node expected as parameter "fn"');if(!Array.isArray(args)||!args.every(isNode))throw new TypeError('Array containing Nodes expected for parameter "args"');this.fn=fn,this.args=args||[],Object.defineProperty(this,"name",{get:function(){return this.fn.name||""}.bind(this),set:function set(){throw new Error("Cannot assign a new name, name is read-only")}})}FunctionNode.prototype=new Node,FunctionNode.prototype.type="FunctionNode",FunctionNode.prototype.isFunctionNode=!0,FunctionNode.prototype._compile=function(math,argNames){if(!(this instanceof FunctionNode))throw new TypeError("No valid FunctionNode");var evalArgs=map(this.args,(function(arg){return arg._compile(math,argNames)}));if(isSymbolNode(this.fn)){var _name=this.fn.name,fn=_name in math?getSafeProperty(math,_name):void 0,isRaw;if("function"==typeof fn&&!0===fn.rawArgs){var rawArgs=this.args;return function evalFunctionNode(scope,args,context){return(_name in scope?getSafeProperty(scope,_name):fn)(rawArgs,math,_extends$2({},scope,args))}}if(1===evalArgs.length){var evalArg0=evalArgs[0];return function evalFunctionNode(scope,args,context){return(_name in scope?getSafeProperty(scope,_name):fn)(evalArg0(scope,args,context))}}if(2===evalArgs.length){var _evalArg=evalArgs[0],evalArg1=evalArgs[1];return function evalFunctionNode(scope,args,context){return(_name in scope?getSafeProperty(scope,_name):fn)(_evalArg(scope,args,context),evalArg1(scope,args,context))}}return function evalFunctionNode(scope,args,context){return(_name in scope?getSafeProperty(scope,_name):fn).apply(null,map(evalArgs,(function(evalArg){return evalArg(scope,args,context)})))}}if(isAccessorNode(this.fn)&&isIndexNode(this.fn.index)&&this.fn.index.isObjectProperty()){var evalObject=this.fn.object._compile(math,argNames),prop=this.fn.index.getObjectProperty(),_rawArgs=this.args;return function evalFunctionNode(scope,args,context){var object=evalObject(scope,args,context),isRaw;return validateSafeMethod(object,prop),object[prop]&&object[prop].rawArgs?object[prop](_rawArgs,math,_extends$2({},scope,args)):object[prop].apply(object,map(evalArgs,(function(evalArg){return evalArg(scope,args,context)})))}}var evalFn=this.fn._compile(math,argNames),_rawArgs2=this.args;return function evalFunctionNode(scope,args,context){var fn=evalFn(scope,args,context),isRaw;return fn&&fn.rawArgs?fn(_rawArgs2,math,_extends$2({},scope,args)):fn.apply(fn,map(evalArgs,(function(evalArg){return evalArg(scope,args,context)})))}},FunctionNode.prototype.forEach=function(callback){callback(this.fn,"fn",this);for(var i=0;i<this.args.length;i++)callback(this.args[i],"args["+i+"]",this)},FunctionNode.prototype.map=function(callback){for(var fn=this._ifNode(callback(this.fn,"fn",this)),args=[],i=0;i<this.args.length;i++)args[i]=this._ifNode(callback(this.args[i],"args["+i+"]",this));return new FunctionNode(fn,args)},FunctionNode.prototype.clone=function(){return new FunctionNode(this.fn,this.args.slice(0))};var nodeToString=FunctionNode.prototype.toString;function expandTemplate(template,node,options){for(var latex="",regex=new RegExp("\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)","ig"),inputPos=0,match;null!==(match=regex.exec(template));)if(latex+=template.substring(inputPos,match.index),inputPos=match.index,"$$"===match[0])latex+="$",inputPos++;else{inputPos+=match[0].length;var property=node[match[1]];if(!property)throw new ReferenceError("Template: Property "+match[1]+" does not exist.");if(void 0===match[2])switch(_typeof$b(property)){case"string":latex+=property;break;case"object":if(isNode(property))latex+=property.toTex(options);else{if(!Array.isArray(property))throw new TypeError("Template: "+match[1]+" has to be a Node, String or array of Nodes");latex+=property.map((function(arg,index){if(isNode(arg))return arg.toTex(options);throw new TypeError("Template: "+match[1]+"["+index+"] is not a Node.")})).join(",")}break;default:throw new TypeError("Template: "+match[1]+" has to be a Node, String or array of Nodes")}else{if(!isNode(property[match[2]]&&property[match[2]]))throw new TypeError("Template: "+match[1]+"["+match[2]+"] is not a Node.");latex+=property[match[2]].toTex(options)}}return latex+=template.slice(inputPos)}FunctionNode.prototype.toString=function(options){var customString,name=this.fn.toString(options);return options&&"object"===_typeof$b(options.handler)&&hasOwnProperty(options.handler,name)&&(customString=options.handler[name](this,options)),void 0!==customString?customString:nodeToString.call(this,options)},FunctionNode.prototype._toString=function(options){var args=this.args.map((function(arg){return arg.toString(options)})),fn;return(isFunctionAssignmentNode(this.fn)?"("+this.fn.toString(options)+")":this.fn.toString(options))+"("+args.join(", ")+")"},FunctionNode.prototype.toJSON=function(){return{mathjs:"FunctionNode",fn:this.fn,args:this.args}},FunctionNode.fromJSON=function(json){return new FunctionNode(json.fn,json.args)},FunctionNode.prototype.toHTML=function(options){var args=this.args.map((function(arg){return arg.toHTML(options)}));return'<span class="math-function">'+escape(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+args.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'};var nodeToTex=FunctionNode.prototype.toTex;return FunctionNode.prototype.toTex=function(options){var customTex;return options&&"object"===_typeof$b(options.handler)&&hasOwnProperty(options.handler,this.name)&&(customTex=options.handler[this.name](this,options)),void 0!==customTex?customTex:nodeToTex.call(this,options)},FunctionNode.prototype._toTex=function(options){var args=this.args.map((function(arg){return arg.toTex(options)})),latexConverter,customToTex;switch(latexFunctions[this.name]&&(latexConverter=latexFunctions[this.name]),!math[this.name]||"function"!=typeof math[this.name].toTex&&"object"!==_typeof$b(math[this.name].toTex)&&"string"!=typeof math[this.name].toTex||(latexConverter=math[this.name].toTex),_typeof$b(latexConverter)){case"function":customToTex=latexConverter(this,options);break;case"string":customToTex=expandTemplate(latexConverter,this,options);break;case"object":switch(_typeof$b(latexConverter[args.length])){case"function":customToTex=latexConverter[args.length](this,options);break;case"string":customToTex=expandTemplate(latexConverter[args.length],this,options)}}return void 0!==customToTex?customToTex:expandTemplate(defaultTemplate,this,options)},FunctionNode.prototype.getIdentifier=function(){return this.type+":"+this.name},FunctionNode}),{isClass:!0,isNode:!0}),exports_9("createFunctionNode",createFunctionNode),name$39="parse",createParse=factory("parse",dependencies$3a=["typed","numeric","config","AccessorNode","ArrayNode","AssignmentNode","BlockNode","ConditionalNode","ConstantNode","FunctionAssignmentNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","RangeNode","RelationalNode","SymbolNode"],(function(_ref){var typed=_ref.typed,numeric=_ref.numeric,config=_ref.config,AccessorNode=_ref.AccessorNode,ArrayNode=_ref.ArrayNode,AssignmentNode=_ref.AssignmentNode,BlockNode=_ref.BlockNode,ConditionalNode=_ref.ConditionalNode,ConstantNode=_ref.ConstantNode,FunctionAssignmentNode=_ref.FunctionAssignmentNode,FunctionNode=_ref.FunctionNode,IndexNode=_ref.IndexNode,ObjectNode=_ref.ObjectNode,OperatorNode=_ref.OperatorNode,ParenthesisNode=_ref.ParenthesisNode,RangeNode=_ref.RangeNode,RelationalNode=_ref.RelationalNode,SymbolNode=_ref.SymbolNode,parse=typed("parse",{string:function string(expression){return parseStart(expression,{})},"Array | Matrix":function ArrayMatrix(expressions){return parseMultiple(expressions,{})},"string, Object":function stringObject(expression,options){var extraNodes;return parseStart(expression,void 0!==options.nodes?options.nodes:{})},"Array | Matrix, Object":parseMultiple});function parseMultiple(expressions){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},extraNodes=void 0!==options.nodes?options.nodes:{};return deepMap(expressions,(function(elem){if("string"!=typeof elem)throw new TypeError("String expected");return parseStart(elem,extraNodes)}))}var TOKENTYPE_NULL=0,TOKENTYPE_DELIMITER=1,TOKENTYPE_NUMBER=2,TOKENTYPE_SYMBOL=3,TOKENTYPE_UNKNOWN=4,DELIMITERS={",":!0,"(":!0,")":!0,"[":!0,"]":!0,"{":!0,"}":!0,'"':!0,"'":!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},NAMED_DELIMITERS={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},CONSTANTS={true:!0,false:!1,null:null,undefined:void 0},NUMERIC_CONSTANTS=["NaN","Infinity"];function initialState(){return{extraNodes:{},expression:"",comment:"",index:0,token:"",tokenType:TOKENTYPE_NULL,nestingLevel:0,conditionalLevel:null}}function currentString(state,length){return state.expression.substr(state.index,length)}function currentCharacter(state){return currentString(state,1)}function next(state){state.index++}function prevCharacter(state){return state.expression.charAt(state.index-1)}function nextCharacter(state){return state.expression.charAt(state.index+1)}function getToken(state){for(state.tokenType=TOKENTYPE_NULL,state.token="",state.comment="";parse.isWhitespace(currentCharacter(state),state.nestingLevel);)next(state);if("#"===currentCharacter(state))for(;"\n"!==currentCharacter(state)&&""!==currentCharacter(state);)state.comment+=currentCharacter(state),next(state);if(""!==currentCharacter(state)){if("\n"===currentCharacter(state)&&!state.nestingLevel)return state.tokenType=TOKENTYPE_DELIMITER,state.token=currentCharacter(state),void next(state);var c1=currentCharacter(state),c2=currentString(state,2),c3=currentString(state,3);if(3===c3.length&&DELIMITERS[c3])return state.tokenType=TOKENTYPE_DELIMITER,state.token=c3,next(state),next(state),void next(state);if(2===c2.length&&DELIMITERS[c2])return state.tokenType=TOKENTYPE_DELIMITER,state.token=c2,next(state),void next(state);if(DELIMITERS[c1])return state.tokenType=TOKENTYPE_DELIMITER,state.token=c1,void next(state);if(parse.isDigitDot(c1)){if(state.tokenType=TOKENTYPE_NUMBER,"."===currentCharacter(state))state.token+=currentCharacter(state),next(state),parse.isDigit(currentCharacter(state))||(state.tokenType=TOKENTYPE_DELIMITER);else{for(;parse.isDigit(currentCharacter(state));)state.token+=currentCharacter(state),next(state);parse.isDecimalMark(currentCharacter(state),nextCharacter(state))&&(state.token+=currentCharacter(state),next(state))}for(;parse.isDigit(currentCharacter(state));)state.token+=currentCharacter(state),next(state);if("E"===currentCharacter(state)||"e"===currentCharacter(state))if(parse.isDigit(nextCharacter(state))||"-"===nextCharacter(state)||"+"===nextCharacter(state)){if(state.token+=currentCharacter(state),next(state),"+"!==currentCharacter(state)&&"-"!==currentCharacter(state)||(state.token+=currentCharacter(state),next(state)),!parse.isDigit(currentCharacter(state)))throw createSyntaxError(state,'Digit expected, got "'+currentCharacter(state)+'"');for(;parse.isDigit(currentCharacter(state));)state.token+=currentCharacter(state),next(state);if(parse.isDecimalMark(currentCharacter(state),nextCharacter(state)))throw createSyntaxError(state,'Digit expected, got "'+currentCharacter(state)+'"')}else if("."===nextCharacter(state))throw next(state),createSyntaxError(state,'Digit expected, got "'+currentCharacter(state)+'"')}else{if(!parse.isAlpha(currentCharacter(state),prevCharacter(state),nextCharacter(state))){for(state.tokenType=TOKENTYPE_UNKNOWN;""!==currentCharacter(state);)state.token+=currentCharacter(state),next(state);throw createSyntaxError(state,'Syntax error in part "'+state.token+'"')}for(;parse.isAlpha(currentCharacter(state),prevCharacter(state),nextCharacter(state))||parse.isDigit(currentCharacter(state));)state.token+=currentCharacter(state),next(state);hasOwnProperty(NAMED_DELIMITERS,state.token)?state.tokenType=TOKENTYPE_DELIMITER:state.tokenType=TOKENTYPE_SYMBOL}}else state.tokenType=TOKENTYPE_DELIMITER}function getTokenSkipNewline(state){do{getToken(state)}while("\n"===state.token)}function openParams(state){state.nestingLevel++}function closeParams(state){state.nestingLevel--}function parseStart(expression,extraNodes){var state=initialState();_extends$3(state,{expression:expression,extraNodes:extraNodes}),getToken(state);var node=parseBlock(state);if(""!==state.token)throw state.tokenType===TOKENTYPE_DELIMITER?createError(state,"Unexpected operator "+state.token):createSyntaxError(state,'Unexpected part "'+state.token+'"');return node}function parseBlock(state){var node,blocks=[],visible;for(""!==state.token&&"\n"!==state.token&&";"!==state.token&&((node=parseAssignment(state)).comment=state.comment);"\n"===state.token||";"===state.token;)0===blocks.length&&node&&(visible=";"!==state.token,blocks.push({node:node,visible:visible})),getToken(state),"\n"!==state.token&&";"!==state.token&&""!==state.token&&((node=parseAssignment(state)).comment=state.comment,visible=";"!==state.token,blocks.push({node:node,visible:visible}));return blocks.length>0?new BlockNode(blocks):(node||((node=new ConstantNode(void 0)).comment=state.comment),node)}function parseAssignment(state){var name,args,value,valid,node=parseConditional(state);if("="===state.token){if(isSymbolNode(node))return name=node.name,getTokenSkipNewline(state),value=parseAssignment(state),new AssignmentNode(new SymbolNode(name),value);if(isAccessorNode(node))return getTokenSkipNewline(state),value=parseAssignment(state),new AssignmentNode(node.object,node.index,value);if(isFunctionNode(node)&&isSymbolNode(node.fn)&&(valid=!0,args=[],name=node.name,node.args.forEach((function(arg,index){isSymbolNode(arg)?args[index]=arg.name:valid=!1})),valid))return getTokenSkipNewline(state),value=parseAssignment(state),new FunctionAssignmentNode(name,args,value);throw createSyntaxError(state,"Invalid left hand side of assignment operator =")}return node}function parseConditional(state){for(var node=parseLogicalOr(state);"?"===state.token;){var prev=state.conditionalLevel;state.conditionalLevel=state.nestingLevel,getTokenSkipNewline(state);var condition=node,trueExpr=parseAssignment(state);if(":"!==state.token)throw createSyntaxError(state,"False part of conditional expression expected");state.conditionalLevel=null,getTokenSkipNewline(state);var falseExpr=parseAssignment(state);node=new ConditionalNode(condition,trueExpr,falseExpr),state.conditionalLevel=prev}return node}function parseLogicalOr(state){for(var node=parseLogicalXor(state);"or"===state.token;)getTokenSkipNewline(state),node=new OperatorNode("or","or",[node,parseLogicalXor(state)]);return node}function parseLogicalXor(state){for(var node=parseLogicalAnd(state);"xor"===state.token;)getTokenSkipNewline(state),node=new OperatorNode("xor","xor",[node,parseLogicalAnd(state)]);return node}function parseLogicalAnd(state){for(var node=parseBitwiseOr(state);"and"===state.token;)getTokenSkipNewline(state),node=new OperatorNode("and","and",[node,parseBitwiseOr(state)]);return node}function parseBitwiseOr(state){for(var node=parseBitwiseXor(state);"|"===state.token;)getTokenSkipNewline(state),node=new OperatorNode("|","bitOr",[node,parseBitwiseXor(state)]);return node}function parseBitwiseXor(state){for(var node=parseBitwiseAnd(state);"^|"===state.token;)getTokenSkipNewline(state),node=new OperatorNode("^|","bitXor",[node,parseBitwiseAnd(state)]);return node}function parseBitwiseAnd(state){for(var node=parseRelational(state);"&"===state.token;)getTokenSkipNewline(state),node=new OperatorNode("&","bitAnd",[node,parseRelational(state)]);return node}function parseRelational(state){for(var params=[parseShift(state)],conditionals=[],operators={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};hasOwnProperty(operators,state.token);){var cond={name:state.token,fn:operators[state.token]};conditionals.push(cond),getTokenSkipNewline(state),params.push(parseShift(state))}return 1===params.length?params[0]:2===params.length?new OperatorNode(conditionals[0].name,conditionals[0].fn,params):new RelationalNode(conditionals.map((function(c){return c.fn})),params)}function parseShift(state){var node,name,fn,params;node=parseConversion(state);for(var operators={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};hasOwnProperty(operators,state.token);)fn=operators[name=state.token],getTokenSkipNewline(state),params=[node,parseConversion(state)],node=new OperatorNode(name,fn,params);return node}function parseConversion(state){var node,name,fn,params;node=parseRange(state);for(var operators={to:"to",in:"to"};hasOwnProperty(operators,state.token);)fn=operators[name=state.token],getTokenSkipNewline(state),"in"===name&&""===state.token?node=new OperatorNode("*","multiply",[node,new SymbolNode("in")],!0):(params=[node,parseRange(state)],node=new OperatorNode(name,fn,params));return node}function parseRange(state){var node,params=[];if(node=":"===state.token?new ConstantNode(1):parseAddSubtract(state),":"===state.token&&state.conditionalLevel!==state.nestingLevel){for(params.push(node);":"===state.token&&params.length<3;)getTokenSkipNewline(state),")"===state.token||"]"===state.token||","===state.token||""===state.token?params.push(new SymbolNode("end")):params.push(parseAddSubtract(state));node=3===params.length?new RangeNode(params[0],params[2],params[1]):new RangeNode(params[0],params[1])}return node}function parseAddSubtract(state){var node,name,fn,params;node=parseMultiplyDivide(state);for(var operators={"+":"add","-":"subtract"};hasOwnProperty(operators,state.token);)fn=operators[name=state.token],getTokenSkipNewline(state),params=[node,parseMultiplyDivide(state)],node=new OperatorNode(name,fn,params);return node}function parseMultiplyDivide(state){var node,last,name,fn;last=node=parseImplicitMultiplication(state);for(var operators={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide","%":"mod",mod:"mod"};hasOwnProperty(operators,state.token);)fn=operators[name=state.token],getTokenSkipNewline(state),last=parseImplicitMultiplication(state),node=new OperatorNode(name,fn,[node,last]);return node}function parseImplicitMultiplication(state){var node,last;for(last=node=parseRule2(state);state.tokenType===TOKENTYPE_SYMBOL||"in"===state.token&&isConstantNode(node)||!(state.tokenType!==TOKENTYPE_NUMBER||isConstantNode(last)||isOperatorNode(last)&&"!"!==last.op)||"("===state.token;)last=parseRule2(state),node=new OperatorNode("*","multiply",[node,last],!0);return node}function parseRule2(state){for(var node=parseUnary(state),last=node,tokenStates=[];"/"===state.token&&isConstantNode(last);){if(tokenStates.push(_extends$3({},state)),getTokenSkipNewline(state),state.tokenType!==TOKENTYPE_NUMBER){_extends$3(state,tokenStates.pop());break}if(tokenStates.push(_extends$3({},state)),getTokenSkipNewline(state),state.tokenType!==TOKENTYPE_SYMBOL&&"("!==state.token){tokenStates.pop(),_extends$3(state,tokenStates.pop());break}_extends$3(state,tokenStates.pop()),tokenStates.pop(),last=parseUnary(state),node=new OperatorNode("/","divide",[node,last])}return node}function parseUnary(state){var name,params,fn,operators={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"};return hasOwnProperty(operators,state.token)?(fn=operators[state.token],name=state.token,getTokenSkipNewline(state),params=[parseUnary(state)],new OperatorNode(name,fn,params)):parsePow(state)}function parsePow(state){var node,name,fn,params;return node=parseLeftHandOperators(state),"^"!==state.token&&".^"!==state.token||(fn="^"===(name=state.token)?"pow":"dotPow",getTokenSkipNewline(state),params=[node,parseUnary(state)],node=new OperatorNode(name,fn,params)),node}function parseLeftHandOperators(state){var node,name,fn,params;node=parseCustomNodes(state);for(var operators={"!":"factorial","'":"ctranspose"};hasOwnProperty(operators,state.token);)fn=operators[name=state.token],getToken(state),node=parseAccessors(state,node=new OperatorNode(name,fn,params=[node]));return node}function parseCustomNodes(state){var params=[];if(state.tokenType===TOKENTYPE_SYMBOL&&hasOwnProperty(state.extraNodes,state.token)){var CustomNode=state.extraNodes[state.token];if(getToken(state),"("===state.token){if(params=[],openParams(state),getToken(state),")"!==state.token)for(params.push(parseAssignment(state));","===state.token;)getToken(state),params.push(parseAssignment(state));if(")"!==state.token)throw createSyntaxError(state,"Parenthesis ) expected");closeParams(state),getToken(state)}return new CustomNode(params)}return parseSymbol(state)}function parseSymbol(state){var node,name;return state.tokenType===TOKENTYPE_SYMBOL||state.tokenType===TOKENTYPE_DELIMITER&&state.token in NAMED_DELIMITERS?(name=state.token,getToken(state),node=parseAccessors(state,node=hasOwnProperty(CONSTANTS,name)?new ConstantNode(CONSTANTS[name]):-1!==NUMERIC_CONSTANTS.indexOf(name)?new ConstantNode(numeric(name,"number")):new SymbolNode(name))):parseDoubleQuotesString(state)}function parseAccessors(state,node,types){for(var params;!("("!==state.token&&"["!==state.token&&"."!==state.token||types&&-1===types.indexOf(state.token));)if(params=[],"("===state.token){if(!isSymbolNode(node)&&!isAccessorNode(node))return node;if(openParams(state),getToken(state),")"!==state.token)for(params.push(parseAssignment(state));","===state.token;)getToken(state),params.push(parseAssignment(state));if(")"!==state.token)throw createSyntaxError(state,"Parenthesis ) expected");closeParams(state),getToken(state),node=new FunctionNode(node,params)}else if("["===state.token){if(openParams(state),getToken(state),"]"!==state.token)for(params.push(parseAssignment(state));","===state.token;)getToken(state),params.push(parseAssignment(state));if("]"!==state.token)throw createSyntaxError(state,"Parenthesis ] expected");closeParams(state),getToken(state),node=new AccessorNode(node,new IndexNode(params))}else{if(getToken(state),state.tokenType!==TOKENTYPE_SYMBOL)throw createSyntaxError(state,"Property name expected after dot");params.push(new ConstantNode(state.token)),getToken(state);var dotNotation=!0;node=new AccessorNode(node,new IndexNode(params,!0))}return node}function parseDoubleQuotesString(state){var node,str;return'"'===state.token?(str=parseDoubleQuotesStringToken(state),node=parseAccessors(state,node=new ConstantNode(str))):parseSingleQuotesString(state)}function parseDoubleQuotesStringToken(state){for(var str="";""!==currentCharacter(state)&&'"'!==currentCharacter(state);)"\\"===currentCharacter(state)&&(str+=currentCharacter(state),next(state)),str+=currentCharacter(state),next(state);if(getToken(state),'"'!==state.token)throw createSyntaxError(state,'End of string " expected');return getToken(state),JSON.parse('"'+str+'"')}function parseSingleQuotesString(state){var node,str;return"'"===state.token?(str=parseSingleQuotesStringToken(state),node=parseAccessors(state,node=new ConstantNode(str))):parseMatrix(state)}function parseSingleQuotesStringToken(state){for(var str="";""!==currentCharacter(state)&&"'"!==currentCharacter(state);)"\\"===currentCharacter(state)&&(str+=currentCharacter(state),next(state)),str+=currentCharacter(state),next(state);if(getToken(state),"'"!==state.token)throw createSyntaxError(state,"End of string ' expected");return getToken(state),JSON.parse('"'+str+'"')}function parseMatrix(state){var array,params,rows,cols;if("["===state.token){if(openParams(state),getToken(state),"]"!==state.token){var row=parseRow(state);if(";"===state.token){for(rows=1,params=[row];";"===state.token;)getToken(state),params[rows]=parseRow(state),rows++;if("]"!==state.token)throw createSyntaxError(state,"End of matrix ] expected");closeParams(state),getToken(state),cols=params[0].items.length;for(var r=1;r<rows;r++)if(params[r].items.length!==cols)throw createError(state,"Column dimensions mismatch ("+params[r].items.length+" !== "+cols+")");array=new ArrayNode(params)}else{if("]"!==state.token)throw createSyntaxError(state,"End of matrix ] expected");closeParams(state),getToken(state),array=row}}else closeParams(state),getToken(state),array=new ArrayNode([]);return parseAccessors(state,array)}return parseObject(state)}function parseRow(state){for(var params=[parseAssignment(state)],len=1;","===state.token;)getToken(state),params[len]=parseAssignment(state),len++;return new ArrayNode(params)}function parseObject(state){if("{"===state.token){var key;openParams(state);var properties={};do{if(getToken(state),"}"!==state.token){if('"'===state.token)key=parseDoubleQuotesStringToken(state);else if("'"===state.token)key=parseSingleQuotesStringToken(state);else{if(!(state.tokenType===TOKENTYPE_SYMBOL||state.tokenType===TOKENTYPE_DELIMITER&&state.token in NAMED_DELIMITERS))throw createSyntaxError(state,"Symbol or string expected as object key");key=state.token,getToken(state)}if(":"!==state.token)throw createSyntaxError(state,"Colon : expected after object key");getToken(state),properties[key]=parseAssignment(state)}}while(","===state.token);if("}"!==state.token)throw createSyntaxError(state,"Comma , or bracket } expected after object value");closeParams(state),getToken(state);var node=new ObjectNode(properties);return node=parseAccessors(state,node)}return parseNumber(state)}function parseNumber(state){var numberStr;return state.tokenType===TOKENTYPE_NUMBER?(numberStr=state.token,getToken(state),new ConstantNode(numeric(numberStr,config.number))):parseParentheses(state)}function parseParentheses(state){var node;if("("===state.token){if(openParams(state),getToken(state),node=parseAssignment(state),")"!==state.token)throw createSyntaxError(state,"Parenthesis ) expected");return closeParams(state),getToken(state),node=parseAccessors(state,node=new ParenthesisNode(node))}return parseEnd(state)}function parseEnd(state){throw""===state.token?createSyntaxError(state,"Unexpected end of expression"):createSyntaxError(state,"Value expected")}function col(state){return state.index-state.token.length+1}function createSyntaxError(state,message){var c=col(state),error=new SyntaxError(message+" (char "+c+")");return error.char=c,error}function createError(state,message){var c=col(state),error=new SyntaxError(message+" (char "+c+")");return error.char=c,error}return parse.isAlpha=function isAlpha(c,cPrev,cNext){return parse.isValidLatinOrGreek(c)||parse.isValidMathSymbol(c,cNext)||parse.isValidMathSymbol(cPrev,c)},parse.isValidLatinOrGreek=function isValidLatinOrGreek(c){return/^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(c)},parse.isValidMathSymbol=function isValidMathSymbol(high,low){return/^[\uD835]$/.test(high)&&/^[\uDC00-\uDFFF]$/.test(low)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(low)},parse.isWhitespace=function isWhitespace(c,nestingLevel){return" "===c||"\t"===c||"\n"===c&&nestingLevel>0},parse.isDecimalMark=function isDecimalMark(c,cNext){return"."===c&&"/"!==cNext&&"*"!==cNext&&"^"!==cNext},parse.isDigitDot=function isDigitDot(c){return c>="0"&&c<="9"||"."===c},parse.isDigit=function isDigit(c){return c>="0"&&c<="9"},parse})),exports_9("createParse",createParse),createCompile=factory(name$3a="compile",dependencies$3b=["typed","parse"],(function(_ref){var typed=_ref.typed,parse=_ref.parse;return typed(name$3a,{string:function string(expr){return parse(expr).compile()},"Array | Matrix":function ArrayMatrix(expr){return deepMap(expr,(function(entry){return parse(entry).compile()}))}})})),exports_9("createCompile",createCompile),createEvaluate=factory(name$3b="evaluate",dependencies$3c=["typed","parse"],(function(_ref){var typed=_ref.typed,parse=_ref.parse;return typed(name$3b,{string:function string(expr){var scope={};return parse(expr).compile().evaluate(scope)},"string, Object":function stringObject(expr,scope){return parse(expr).compile().evaluate(scope)},"Array | Matrix":function ArrayMatrix(expr){var scope={};return deepMap(expr,(function(entry){return parse(entry).compile().evaluate(scope)}))},"Array | Matrix, Object":function ArrayMatrixObject(expr,scope){return deepMap(expr,(function(entry){return parse(entry).compile().evaluate(scope)}))}})})),exports_9("createEvaluate",createEvaluate),createParserClass=factory(name$3c="Parser",dependencies$3d=["parse"],(function(_ref){var parse=_ref.parse;function Parser(){if(!(this instanceof Parser))throw new SyntaxError("Constructor must be called with the new operator");this.scope={}}return Parser.prototype.type="Parser",Parser.prototype.isParser=!0,Parser.prototype.evaluate=function(expr){return parse(expr).compile().evaluate(this.scope)},Parser.prototype.get=function(name){return name in this.scope?getSafeProperty(this.scope,name):void 0},Parser.prototype.getAll=function(){return extend({},this.scope)},Parser.prototype.set=function(name,value){return setSafeProperty(this.scope,name,value)},Parser.prototype.remove=function(name){delete this.scope[name]},Parser.prototype.clear=function(){for(var _name in this.scope)hasOwnProperty(this.scope,_name)&&delete this.scope[_name]},Parser}),{isClass:!0}),exports_9("createParserClass",createParserClass),createParser=factory(name$3d="parser",dependencies$3e=["typed","Parser"],(function(_ref){var typed=_ref.typed,Parser=_ref.Parser;return typed(name$3d,{"":function _(){return new Parser}})})),exports_9("createParser",createParser),name$3e="lup",createLup=factory("lup",dependencies$3f=["typed","matrix","abs","addScalar","divideScalar","multiplyScalar","subtract","larger","equalScalar","unaryMinus","DenseMatrix","SparseMatrix","Spa"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,abs=_ref.abs,addScalar=_ref.addScalar,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,subtract=_ref.subtract,larger=_ref.larger,equalScalar=_ref.equalScalar,unaryMinus=_ref.unaryMinus,DenseMatrix=_ref.DenseMatrix,SparseMatrix=_ref.SparseMatrix,Spa=_ref.Spa;return typed("lup",{DenseMatrix:function DenseMatrix(m){return _denseLUP(m)},SparseMatrix:function SparseMatrix(m){return _sparseLUP(m)},Array:function Array(a){var m,r=_denseLUP(matrix(a));return{L:r.L.valueOf(),U:r.U.valueOf(),p:r.p}}});function _denseLUP(m){var rows=m._size[0],columns=m._size[1],n=Math.min(rows,columns),data=clone(m._data),ldata=[],lsize=[rows,n],udata=[],usize=[n,columns],i,j,k,p=[];for(i=0;i<rows;i++)p[i]=i;for(j=0;j<columns;j++){if(j>0)for(i=0;i<rows;i++){var min=Math.min(i,j),s=0;for(k=0;k<min;k++)s=addScalar(s,multiplyScalar(data[i][k],data[k][j]));data[i][j]=subtract(data[i][j],s)}var pi=j,pabsv=0,vjj=0;for(i=j;i<rows;i++){var v=data[i][j],absv=abs(v);larger(absv,pabsv)&&(pi=i,pabsv=absv,vjj=v)}if(j!==pi&&(p[j]=[p[pi],p[pi]=p[j]][0],DenseMatrix._swapRows(j,pi,data)),j<rows)for(i=j+1;i<rows;i++){var vij=data[i][j];equalScalar(vij,0)||(data[i][j]=divideScalar(data[i][j],vjj))}}for(j=0;j<columns;j++)for(i=0;i<rows;i++)0===j&&(i<columns&&(udata[i]=[]),ldata[i]=[]),i<j?(i<columns&&(udata[i][j]=data[i][j]),j<rows&&(ldata[i][j]=0)):i!==j?(i<columns&&(udata[i][j]=0),j<rows&&(ldata[i][j]=data[i][j])):(i<columns&&(udata[i][j]=data[i][j]),j<rows&&(ldata[i][j]=1));var l=new DenseMatrix({data:ldata,size:lsize}),u=new DenseMatrix({data:udata,size:usize}),pv=[];for(i=0,n=p.length;i<n;i++)pv[p[i]]=i;return{L:l,U:u,p:pv,toString:function toString(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}}function _sparseLUP(m){var rows=m._size[0],columns=m._size[1],n=Math.min(rows,columns),values=m._values,index=m._index,ptr=m._ptr,lvalues=[],lindex=[],lptr=[],lsize=[rows,n],uvalues=[],uindex=[],uptr=[],usize=[n,columns],i,j,k,pvCo=[],pvOc=[];for(i=0;i<rows;i++)pvCo[i]=i,pvOc[i]=i;var swapIndeces=function swapIndeces(x,y){var kx=pvOc[x],ky=pvOc[y];pvCo[kx]=y,pvCo[ky]=x,pvOc[x]=ky,pvOc[y]=kx},_loop=function _loop(){var spa=new Spa;j<rows&&(lptr.push(lvalues.length),lvalues.push(1),lindex.push(j)),uptr.push(uvalues.length);var k0=ptr[j],k1=ptr[j+1];for(k=k0;k<k1;k++)i=index[k],spa.set(pvCo[i],values[k]);j>0&&spa.forEach(0,j-1,(function(k,vkj){SparseMatrix._forEachRow(k,lvalues,lindex,lptr,(function(i,vik){i>k&&spa.accumulate(i,unaryMinus(multiplyScalar(vik,vkj)))}))}));var pi=j,vjj=spa.get(j),pabsv=abs(vjj);spa.forEach(j+1,rows-1,(function(x,v){var absv=abs(v);larger(absv,pabsv)&&(pi=x,pabsv=absv,vjj=v)})),j!==pi&&(SparseMatrix._swapRows(j,pi,lsize[1],lvalues,lindex,lptr),SparseMatrix._swapRows(j,pi,usize[1],uvalues,uindex,uptr),spa.swap(j,pi),swapIndeces(j,pi)),spa.forEach(0,rows-1,(function(x,v){x<=j?(uvalues.push(v),uindex.push(x)):(v=divideScalar(v,vjj),equalScalar(v,0)||(lvalues.push(v),lindex.push(x)))}))};for(j=0;j<columns;j++)_loop();return uptr.push(uvalues.length),lptr.push(lvalues.length),{L:new SparseMatrix({values:lvalues,index:lindex,ptr:lptr,size:lsize}),U:new SparseMatrix({values:uvalues,index:uindex,ptr:uptr,size:usize}),p:pvCo,toString:function toString(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}}})),exports_9("createLup",createLup),name$3f="qr",createQr=factory("qr",dependencies$3g=["typed","matrix","zeros","identity","isZero","equal","sign","sqrt","conj","unaryMinus","addScalar","divideScalar","multiplyScalar","subtract","complex"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,zeros=_ref.zeros,identity=_ref.identity,isZero=_ref.isZero,equal=_ref.equal,sign=_ref.sign,sqrt=_ref.sqrt,conj=_ref.conj,unaryMinus=_ref.unaryMinus,addScalar=_ref.addScalar,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,subtract=_ref.subtract,complex=_ref.complex;return _extends$4(typed("qr",{DenseMatrix:function DenseMatrix(m){return _denseQR(m)},SparseMatrix:function SparseMatrix(m){return _sparseQR()},Array:function Array(a){var m,r=_denseQR(matrix(a));return{Q:r.Q.valueOf(),R:r.R.valueOf()}}}),{_denseQRimpl:_denseQRimpl});function _denseQRimpl(m){var rows=m._size[0],cols=m._size[1],Q=identity([rows],"dense"),Qdata=Q._data,R=m.clone(),Rdata=R._data,i,j,k,w=zeros([rows],"");for(k=0;k<Math.min(cols,rows);++k){var pivot=Rdata[k][k],sgn=unaryMinus(equal(pivot,0)?1:sign(pivot)),conjSgn=conj(sgn),alphaSquared=0;for(i=k;i<rows;i++)alphaSquared=addScalar(alphaSquared,multiplyScalar(Rdata[i][k],conj(Rdata[i][k])));var alpha=multiplyScalar(sgn,sqrt(alphaSquared));if(!isZero(alpha)){var u1=subtract(pivot,alpha);for(w[k]=1,i=k+1;i<rows;i++)w[i]=divideScalar(Rdata[i][k],u1);var tau=unaryMinus(conj(divideScalar(u1,alpha))),s=void 0;for(j=k;j<cols;j++){for(s=0,i=k;i<rows;i++)s=addScalar(s,multiplyScalar(conj(w[i]),Rdata[i][j]));for(s=multiplyScalar(s,tau),i=k;i<rows;i++)Rdata[i][j]=multiplyScalar(subtract(Rdata[i][j],multiplyScalar(w[i],s)),conjSgn)}for(i=0;i<rows;i++){for(s=0,j=k;j<rows;j++)s=addScalar(s,multiplyScalar(Qdata[i][j],w[j]));for(s=multiplyScalar(s,tau),j=k;j<rows;++j)Qdata[i][j]=divideScalar(subtract(Qdata[i][j],multiplyScalar(s,conj(w[j]))),conjSgn)}}}return{Q:Q,R:R,toString:function toString(){return"Q: "+this.Q.toString()+"\nR: "+this.R.toString()}}}function _denseQR(m){var ret=_denseQRimpl(m),Rdata=ret.R._data;if(m._data.length>0)for(var zero="Complex"===Rdata[0][0].type?complex(0):0,i=0;i<Rdata.length;++i)for(var j=0;j<i&&j<(Rdata[0]||[]).length;++j)Rdata[i][j]=zero;return ret}function _sparseQR(m){throw new Error("qr not implemented for sparse matrices yet")}})),exports_9("createQr",createQr),name$3g="csAmd",createCsAmd=factory("csAmd",dependencies$3h=["add","multiply","transpose"],(function(_ref){var add=_ref.add,multiply=_ref.multiply,transpose=_ref.transpose;return function csAmd(order,a){if(!a||order<=0||order>3)return null;var asize=a._size,m=asize[0],n=asize[1],lemax=0,dense=Math.max(16,10*Math.sqrt(n)),cm=_createTargetMatrix(order,a,m,n,dense=Math.min(n-2,dense));csFkeep(cm,_diag,null);for(var cindex=cm._index,cptr=cm._ptr,cnz=cptr[n],P=[],W=[],len=0,nv=n+1,next=2*(n+1),head=3*(n+1),elen=4*(n+1),degree=5*(n+1),w=6*(n+1),hhead=7*(n+1),last=P,mark=_initializeQuotientGraph(n,cptr,W,0,head,last,next,hhead,nv,w,elen,degree),nel=_initializeDegreeLists(n,cptr,W,degree,elen,w,dense,nv,head,last,next),mindeg=0,i,j,k,k1,k2,e,pj,ln,nvi,pk,eln,p1,p2,pn,h,d;nel<n;){for(k=-1;mindeg<n&&-1===(k=W[head+mindeg]);mindeg++);-1!==W[next+k]&&(last[W[next+k]]=-1),W[head+mindeg]=W[next+k];var elenk=W[elen+k],nvk=W[nv+k];nel+=nvk;var dk=0;W[nv+k]=-nvk;var p=cptr[k],pk1=0===elenk?p:cnz,pk2=pk1;for(k1=1;k1<=elenk+1;k1++){for(k1>elenk?(e=k,pj=p,ln=W[0+k]-elenk):(pj=cptr[e=cindex[p++]],ln=W[0+e]),k2=1;k2<=ln;k2++)(nvi=W[nv+(i=cindex[pj++])])<=0||(dk+=nvi,W[nv+i]=-nvi,cindex[pk2++]=i,-1!==W[next+i]&&(last[W[next+i]]=last[i]),-1!==last[i]?W[next+last[i]]=W[next+i]:W[head+W[degree+i]]=W[next+i]);e!==k&&(cptr[e]=csFlip(k),W[w+e]=0)}for(0!==elenk&&(cnz=pk2),W[degree+k]=dk,cptr[k]=pk1,W[0+k]=pk2-pk1,W[elen+k]=-2,mark=_wclear(mark,lemax,W,w,n),pk=pk1;pk<pk2;pk++)if(!((eln=W[elen+(i=cindex[pk])])<=0)){var wnvi=mark-(nvi=-W[nv+i]);for(p=cptr[i],p1=cptr[i]+eln-1;p<=p1;p++)W[w+(e=cindex[p])]>=mark?W[w+e]-=nvi:0!==W[w+e]&&(W[w+e]=W[degree+e]+wnvi)}for(pk=pk1;pk<pk2;pk++){for(p2=(p1=cptr[i=cindex[pk]])+W[elen+i]-1,pn=p1,h=0,d=0,p=p1;p<=p2;p++)if(0!==W[w+(e=cindex[p])]){var dext=W[w+e]-mark;dext>0?(d+=dext,cindex[pn++]=e,h+=e):(cptr[e]=csFlip(k),W[w+e]=0)}W[elen+i]=pn-p1+1;var p3=pn,p4=p1+W[0+i];for(p=p2+1;p<p4;p++){var nvj=W[nv+(j=cindex[p])];nvj<=0||(d+=nvj,cindex[pn++]=j,h+=j)}0===d?(cptr[i]=csFlip(k),dk-=nvi=-W[nv+i],nvk+=nvi,nel+=nvi,W[nv+i]=0,W[elen+i]=-1):(W[degree+i]=Math.min(W[degree+i],d),cindex[pn]=cindex[p3],cindex[p3]=cindex[p1],cindex[p1]=k,W[0+i]=pn-p1+1,h=(h<0?-h:h)%n,W[next+i]=W[hhead+h],W[hhead+h]=i,last[i]=h)}for(W[degree+k]=dk,mark=_wclear(mark+(lemax=Math.max(lemax,dk)),lemax,W,w,n),pk=pk1;pk<pk2;pk++)if(!(W[nv+(i=cindex[pk])]>=0))for(i=W[hhead+(h=last[i])],W[hhead+h]=-1;-1!==i&&-1!==W[next+i];i=W[next+i],mark++){for(ln=W[0+i],eln=W[elen+i],p=cptr[i]+1;p<=cptr[i]+ln-1;p++)W[w+cindex[p]]=mark;var jlast=i;for(j=W[next+i];-1!==j;){var ok=W[0+j]===ln&&W[elen+j]===eln;for(p=cptr[j]+1;ok&&p<=cptr[j]+ln-1;p++)W[w+cindex[p]]!==mark&&(ok=0);ok?(cptr[j]=csFlip(i),W[nv+i]+=W[nv+j],W[nv+j]=0,W[elen+j]=-1,j=W[next+j],W[next+jlast]=j):(jlast=j,j=W[next+j])}}for(p=pk1,pk=pk1;pk<pk2;pk++)(nvi=-W[nv+(i=cindex[pk])])<=0||(W[nv+i]=nvi,d=W[degree+i]+dk-nvi,-1!==W[head+(d=Math.min(d,n-nel-nvi))]&&(last[W[head+d]]=i),W[next+i]=W[head+d],last[i]=-1,W[head+d]=i,mindeg=Math.min(mindeg,d),W[degree+i]=d,cindex[p++]=i);W[nv+k]=nvk,0==(W[0+k]=p-pk1)&&(cptr[k]=-1,W[w+k]=0),0!==elenk&&(cnz=p)}for(i=0;i<n;i++)cptr[i]=csFlip(cptr[i]);for(j=0;j<=n;j++)W[head+j]=-1;for(j=n;j>=0;j--)W[nv+j]>0||(W[next+j]=W[head+cptr[j]],W[head+cptr[j]]=j);for(e=n;e>=0;e--)W[nv+e]<=0||-1!==cptr[e]&&(W[next+e]=W[head+cptr[e]],W[head+cptr[e]]=e);for(k=0,i=0;i<=n;i++)-1===cptr[i]&&(k=csTdfs(i,k,W,head,next,P,w));return P.splice(P.length-1,1),P};function _createTargetMatrix(order,a,m,n,dense){var at=transpose(a);if(1===order&&n===m)return add(a,at);if(2===order){for(var tindex=at._index,tptr=at._ptr,p2=0,j=0;j<m;j++){var p=tptr[j];if(tptr[j]=p2,!(tptr[j+1]-p>dense))for(var p1=tptr[j+1];p<p1;p++)tindex[p2++]=tindex[p]}return tptr[m]=p2,a=transpose(at),multiply(at,a)}return multiply(at,a)}function _initializeQuotientGraph(n,cptr,W,len,head,last,next,hhead,nv,w,elen,degree){for(var k=0;k<n;k++)W[len+k]=cptr[k+1]-cptr[k];W[len+n]=0;for(var i=0;i<=n;i++)W[head+i]=-1,last[i]=-1,W[next+i]=-1,W[hhead+i]=-1,W[nv+i]=1,W[w+i]=1,W[elen+i]=0,W[degree+i]=W[len+i];var mark=_wclear(0,0,W,w,n);return W[elen+n]=-2,cptr[n]=-1,W[w+n]=0,mark}function _initializeDegreeLists(n,cptr,W,degree,elen,w,dense,nv,head,last,next){for(var nel=0,i=0;i<n;i++){var d=W[degree+i];if(0===d)W[elen+i]=-2,nel++,cptr[i]=-1,W[w+i]=0;else if(d>dense)W[nv+i]=0,W[elen+i]=-1,nel++,cptr[i]=csFlip(n),W[nv+n]++;else{var h=W[head+d];-1!==h&&(last[h]=i),W[next+i]=W[head+d],W[head+d]=i}}return nel}function _wclear(mark,lemax,W,w,n){if(mark<2||mark+lemax<0){for(var k=0;k<n;k++)0!==W[w+k]&&(W[w+k]=1);mark=2}return mark}function _diag(i,j){return i!==j}})),createCsCounts=factory(name$3h="csCounts",dependencies$3i=["transpose"],(function(_ref){var transpose=_ref.transpose;return function(a,parent,post,ata){if(!a||!parent||!post)return null;var asize=a._size,m=asize[0],n=asize[1],i,j,k,J,p,p0,p1,s=4*n+(ata?n+m+1:0),w=[],ancestor=0,maxfirst=n,prevleaf=2*n,first=3*n,head=4*n,next=5*n+1;for(k=0;k<s;k++)w[k]=-1;var colcount=[],at=transpose(a),tindex=at._index,tptr=at._ptr;for(k=0;k<n;k++)for(colcount[j=post[k]]=-1===w[first+j]?1:0;-1!==j&&-1===w[first+j];j=parent[j])w[first+j]=k;if(ata){for(k=0;k<n;k++)w[post[k]]=k;for(i=0;i<m;i++){for(k=n,p0=tptr[i],p1=tptr[i+1],p=p0;p<p1;p++)k=Math.min(k,w[tindex[p]]);w[next+i]=w[head+k],w[head+k]=i}}for(i=0;i<n;i++)w[0+i]=i;for(k=0;k<n;k++){for(-1!==parent[j=post[k]]&&colcount[parent[j]]--,J=ata?w[head+k]:j;-1!==J;J=ata?w[next+J]:-1)for(p=tptr[J];p<tptr[J+1];p++){var r=csLeaf(i=tindex[p],j,w,first,maxfirst,prevleaf,0);r.jleaf>=1&&colcount[j]++,2===r.jleaf&&colcount[r.q]--}-1!==parent[j]&&(w[0+j]=parent[j])}for(j=0;j<n;j++)-1!==parent[j]&&(colcount[parent[j]]+=colcount[j]);return colcount}})),name$3i="csSqr",createCsSqr=factory("csSqr",dependencies$3j=["add","multiply","transpose"],(function(_ref){var add=_ref.add,multiply=_ref.multiply,transpose=_ref.transpose,csAmd=createCsAmd({add:add,multiply:multiply,transpose:transpose}),csCounts=createCsCounts({transpose:transpose});return function csSqr(order,a,qr){var aptr=a._ptr,asize,n=a._size[1],k,s={};if(s.q=csAmd(order,a),order&&!s.q)return null;if(qr){var c=order?csPermute(a,null,s.q,0):a;s.parent=csEtree(c,1);var post=csPost(s.parent,n);if(s.cp=csCounts(c,s.parent,post,1),c&&s.parent&&s.cp&&_vcount(c,s))for(s.unz=0,k=0;k<n;k++)s.unz+=s.cp[k]}else s.unz=4*aptr[n]+n,s.lnz=s.unz;return s};function _vcount(a,s){var aptr=a._ptr,aindex=a._index,asize=a._size,m=asize[0],n=asize[1];s.pinv=[],s.leftmost=[];var parent=s.parent,pinv=s.pinv,leftmost=s.leftmost,w=[],next=0,head=m,tail=m+n,nque=m+2*n,i,k,p,p0,p1;for(k=0;k<n;k++)w[head+k]=-1,w[tail+k]=-1,w[nque+k]=0;for(i=0;i<m;i++)leftmost[i]=-1;for(k=n-1;k>=0;k--)for(p0=aptr[k],p1=aptr[k+1],p=p0;p<p1;p++)leftmost[aindex[p]]=k;for(i=m-1;i>=0;i--)pinv[i]=-1,-1!==(k=leftmost[i])&&(0==w[nque+k]++&&(w[tail+k]=i),w[0+i]=w[head+k],w[head+k]=i);for(s.lnz=0,s.m2=m,k=0;k<n;k++)if(i=w[head+k],s.lnz++,i<0&&(i=s.m2++),pinv[i]=k,!(--nque[k]<=0)){s.lnz+=w[nque+k];var pa=parent[k];-1!==pa&&(0===w[nque+pa]&&(w[tail+pa]=w[tail+k]),w[0+w[tail+k]]=w[head+pa],w[head+pa]=w[0+i],w[nque+pa]+=w[nque+k])}for(i=0;i<m;i++)pinv[i]<0&&(pinv[i]=k++);return!0}})),createCsSpsolve=factory(name$3j="csSpsolve",dependencies$3k=["divideScalar","multiply","subtract"],(function(_ref){var divideScalar=_ref.divideScalar,multiply=_ref.multiply,subtract=_ref.subtract;return function csSpsolve(g,b,k,xi,x,pinv,lo){var gvalues=g._values,gindex=g._index,gptr=g._ptr,gsize,n=g._size[1],bvalues=b._values,bindex=b._index,bptr=b._ptr,p,p0,p1,q,top=csReach(g,b,k,xi,pinv);for(p=top;p<n;p++)x[xi[p]]=0;for(p0=bptr[k],p1=bptr[k+1],p=p0;p<p1;p++)x[bindex[p]]=bvalues[p];for(var px=top;px<n;px++){var j=xi[px],J=pinv?pinv[j]:j;if(!(J<0))for(p0=gptr[J],p1=gptr[J+1],x[j]=divideScalar(x[j],gvalues[lo?p0:p1-1]),p=lo?p0+1:p0,q=lo?p1:p1-1;p<q;p++){var i=gindex[p];x[i]=subtract(x[i],multiply(gvalues[p],x[j]))}}return top}})),name$3k="csLu",createCsLu=factory("csLu",dependencies$3l=["abs","divideScalar","multiply","subtract","larger","largerEq","SparseMatrix"],(function(_ref){var abs=_ref.abs,divideScalar=_ref.divideScalar,multiply=_ref.multiply,subtract=_ref.subtract,larger=_ref.larger,largerEq=_ref.largerEq,SparseMatrix=_ref.SparseMatrix,csSpsolve=createCsSpsolve({divideScalar:divideScalar,multiply:multiply,subtract:subtract});return function csLu(m,s,tol){if(!m)return null;var size,n=m._size[1],q,lnz=100,unz=100;s&&(q=s.q,lnz=s.lnz||lnz,unz=s.unz||unz);var lvalues=[],lindex=[],lptr=[],L=new SparseMatrix({values:lvalues,index:lindex,ptr:lptr,size:[n,n]}),uvalues=[],uindex=[],uptr=[],U=new SparseMatrix({values:uvalues,index:uindex,ptr:uptr,size:[n,n]}),pinv=[],i,p,x=[],xi=[];for(i=0;i<n;i++)x[i]=0,pinv[i]=-1,lptr[i+1]=0;lnz=0,unz=0;for(var k=0;k<n;k++){lptr[k]=lnz,uptr[k]=unz;var col=q?q[k]:k,top=csSpsolve(L,m,col,xi,x,pinv,1),ipiv=-1,a=-1;for(p=top;p<n;p++)if(pinv[i=xi[p]]<0){var xabs=abs(x[i]);larger(xabs,a)&&(a=xabs,ipiv=i)}else uindex[unz]=pinv[i],uvalues[unz++]=x[i];if(-1===ipiv||a<=0)return null;pinv[col]<0&&largerEq(abs(x[col]),multiply(a,tol))&&(ipiv=col);var pivot=x[ipiv];for(uindex[unz]=k,uvalues[unz++]=pivot,pinv[ipiv]=k,lindex[lnz]=ipiv,lvalues[lnz++]=1,p=top;p<n;p++)pinv[i=xi[p]]<0&&(lindex[lnz]=i,lvalues[lnz++]=divideScalar(x[i],pivot)),x[i]=0}for(lptr[n]=lnz,uptr[n]=unz,p=0;p<lnz;p++)lindex[p]=pinv[lindex[p]];return lvalues.splice(lnz,lvalues.length-lnz),lindex.splice(lnz,lindex.length-lnz),uvalues.splice(unz,uvalues.length-unz),uindex.splice(unz,uindex.length-unz),{L:L,U:U,pinv:pinv}}})),name$3l="slu",createSlu=factory("slu",dependencies$3m=["typed","abs","add","multiply","transpose","divideScalar","subtract","larger","largerEq","SparseMatrix"],(function(_ref){var typed=_ref.typed,abs=_ref.abs,add=_ref.add,multiply=_ref.multiply,transpose=_ref.transpose,divideScalar=_ref.divideScalar,subtract=_ref.subtract,larger=_ref.larger,largerEq=_ref.largerEq,SparseMatrix=_ref.SparseMatrix,csSqr=createCsSqr({add:add,multiply:multiply,transpose:transpose}),csLu=createCsLu({abs:abs,divideScalar:divideScalar,multiply:multiply,subtract:subtract,larger:larger,largerEq:largerEq,SparseMatrix:SparseMatrix});return typed("slu",{"SparseMatrix, number, number":function SparseMatrixNumberNumber(a,order,threshold){if(!isInteger(order)||order<0||order>3)throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");if(threshold<0||threshold>1)throw new Error("Partial pivoting threshold must be a number from 0 to 1");var s=csSqr(order,a,!1),f=csLu(a,s,threshold);return{L:f.L,U:f.U,p:f.pinv,q:s.q,toString:function toString(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\np: "+this.p.toString()+(this.q?"\nq: "+this.q.toString():"")+"\n"}}}})})),exports_9("createSlu",createSlu),createLusolve=factory(name$3m="lusolve",dependencies$3n=["typed","matrix","lup","slu","usolve","lsolve","DenseMatrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,lup=_ref.lup,slu=_ref.slu,usolve=_ref.usolve,lsolve=_ref.lsolve,DenseMatrix,solveValidation=createSolveValidation({DenseMatrix:_ref.DenseMatrix});return typed(name$3m,{"Array, Array | Matrix":function ArrayArrayMatrix(a,b){a=matrix(a);var d=lup(a),x;return _lusolve(d.L,d.U,d.p,null,b).valueOf()},"DenseMatrix, Array | Matrix":function DenseMatrixArrayMatrix(a,b){var d=lup(a);return _lusolve(d.L,d.U,d.p,null,b)},"SparseMatrix, Array | Matrix":function SparseMatrixArrayMatrix(a,b){var d=lup(a);return _lusolve(d.L,d.U,d.p,null,b)},"SparseMatrix, Array | Matrix, number, number":function SparseMatrixArrayMatrixNumberNumber(a,b,order,threshold){var d=slu(a,order,threshold);return _lusolve(d.L,d.U,d.p,d.q,b)},"Object, Array | Matrix":function ObjectArrayMatrix(d,b){return _lusolve(d.L,d.U,d.p,d.q,b)}});function _toMatrix(a){if(isMatrix(a))return a;if(isArray(a))return matrix(a);throw new TypeError("Invalid Matrix LU decomposition")}function _lusolve(l,u,p,q,b){l=_toMatrix(l),u=_toMatrix(u),b=solveValidation(l,b,!1),p&&(b._data=csIpvec(p,b._data));var y=lsolve(l,b),x=usolve(u,y);return q&&(x._data=csIpvec(q,x._data)),x}})),exports_9("createLusolve",createLusolve),name$3n="Help",createHelpClass=factory("Help",dependencies$3o=["parse"],(function(_ref){var parse=_ref.parse;function Help(doc){if(!(this instanceof Help))throw new SyntaxError("Constructor must be called with the new operator");if(!doc)throw new Error('Argument "doc" missing');this.doc=doc}return Help.prototype.type="Help",Help.prototype.isHelp=!0,Help.prototype.toString=function(){var doc=this.doc||{},desc="\n";if(doc.name&&(desc+="Name: "+doc.name+"\n\n"),doc.category&&(desc+="Category: "+doc.category+"\n\n"),doc.description&&(desc+="Description:\n    "+doc.description+"\n\n"),doc.syntax&&(desc+="Syntax:\n    "+doc.syntax.join("\n    ")+"\n\n"),doc.examples){desc+="Examples:\n";for(var scope={},i=0;i<doc.examples.length;i++){var expr=doc.examples[i];desc+="    "+expr+"\n";var res=void 0;try{res=parse(expr).compile().evaluate(scope)}catch(e){res=e}void 0===res||isHelp(res)||(desc+="        "+format$2(res,{precision:14})+"\n")}desc+="\n"}return doc.seealso&&doc.seealso.length&&(desc+="See also: "+doc.seealso.join(", ")+"\n"),desc},Help.prototype.toJSON=function(){var obj=clone(this.doc);return obj.mathjs="Help",obj},Help.fromJSON=function(json){var doc={};return Object.keys(json).filter((function(prop){return"mathjs"!==prop})).forEach((function(prop){doc[prop]=json[prop]})),new Help(doc)},Help.prototype.valueOf=Help.prototype.toString,Help}),{isClass:!0}),exports_9("createHelpClass",createHelpClass),name$3o="Chain",createChainClass=factory("Chain",dependencies$3p=["?on","math"],(function(_ref){var on=_ref.on,math=_ref.math;function Chain(value){if(!(this instanceof Chain))throw new SyntaxError("Constructor must be called with the new operator");isChain(value)?this.value=value.value:this.value=value}function createProxy(name,fn){"function"==typeof fn&&(Chain.prototype[name]=chainify(fn))}function createLazyProxy(name,resolver){lazy(Chain.prototype,name,(function outerResolver(){var fn=resolver();if("function"==typeof fn)return chainify(fn)}))}function chainify(fn){return function(){for(var args=[this.value],i=0;i<arguments.length;i++)args[i+1]=arguments[i];return new Chain(fn.apply(fn,args))}}Chain.prototype.type="Chain",Chain.prototype.isChain=!0,Chain.prototype.done=function(){return this.value},Chain.prototype.valueOf=function(){return this.value},Chain.prototype.toString=function(){return format$2(this.value)},Chain.prototype.toJSON=function(){return{mathjs:"Chain",value:this.value}},Chain.fromJSON=function(json){return new Chain(json.value)},Chain.createProxy=function(arg0,arg1){if("string"==typeof arg0)createProxy(arg0,arg1);else{var _loop=function _loop(_name){hasOwnProperty(arg0,_name)&&void 0===excludedNames[_name]&&createLazyProxy(_name,(function(){return arg0[_name]}))};for(var _name in arg0)_loop(_name)}};var excludedNames={expression:!0,docs:!0,type:!0,classes:!0,json:!0,error:!0,isChain:!0};return Chain.createProxy(math),on&&on("import",(function(name,resolver,path){path||createLazyProxy(name,resolver)})),Chain}),{isClass:!0}),exports_9("createChainClass",createChainClass),exports_9("docs",embeddedDocs={bignumber:bignumberDocs={name:"bignumber",category:"Construction",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]},boolean:booleanDocs={name:"boolean",category:"Construction",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]},complex:complexDocs={name:"complex",category:"Construction",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]},createUnit:createUnitDocs={name:"createUnit",category:"Construction",syntax:["createUnit(definitions)","createUnit(name, definition)"],description:"Create a user-defined unit and register it with the Unit type.",examples:['createUnit("foo")','createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})','createUnit("mph", "1 mile/hour")'],seealso:["unit","splitUnit"]},fraction:fractionDocs={name:"fraction",category:"Construction",syntax:["fraction(num)","fraction(num,den)"],description:"Create a fraction from a number or from a numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]},index:indexDocs={name:"index",category:"Construction",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["[]","[1, 2, 3]","A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[0:2, 0:2] = ones(2, 2)"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]},matrix:matrixDocs={name:"matrix",category:"Construction",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]},number:numberDocs={name:"number",category:"Construction",syntax:["x","number(x)","number(unit, valuelessUnit)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number(unit("52cm"), "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]},sparse:sparseDocs={name:"sparse",category:"Construction",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]},splitUnit:splitUnitDocs={name:"splitUnit",category:"Construction",syntax:["splitUnit(unit: Unit, parts: Unit[])"],description:"Split a unit in an array of units whose sum is equal to the original unit.",examples:['splitUnit(1 m, ["feet", "inch"])'],seealso:["unit","createUnit"]},string:stringDocs={name:"string",category:"Construction",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]},unit:unitDocs={name:"unit",category:"Construction",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]},e:eDocs={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]},E:eDocs,false:falseDocs={name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]},i:iDocs={name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]},Infinity:InfinityDocs={name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]},LN2:LN2Docs={name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]},LN10:LN10Docs={name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]},LOG2E:LOG2EDocs={name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]},LOG10E:LOG10EDocs={name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]},NaN:NaNDocs={name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]},null:nullDocs={name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]},pi:piDocs={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]},PI:piDocs,phi:phiDocs={name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["phi"],seealso:[]},SQRT1_2:SQRT12Docs={name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]},SQRT2:SQRT2Docs={name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]},tau:tauDocs={name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]},true:trueDocs={name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]},version:versionDocs={name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]},speedOfLight:{description:"Speed of light in vacuum",examples:["speedOfLight"]},gravitationConstant:{description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},planckConstant:{description:"Planck constant",examples:["planckConstant"]},reducedPlanckConstant:{description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},magneticConstant:{description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},electricConstant:{description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},vacuumImpedance:{description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},coulomb:{description:"Coulomb's constant",examples:["coulomb"]},elementaryCharge:{description:"Elementary charge",examples:["elementaryCharge"]},bohrMagneton:{description:"Borh magneton",examples:["bohrMagneton"]},conductanceQuantum:{description:"Conductance quantum",examples:["conductanceQuantum"]},inverseConductanceQuantum:{description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},magneticFluxQuantum:{description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},nuclearMagneton:{description:"Nuclear magneton",examples:["nuclearMagneton"]},klitzing:{description:"Von Klitzing constant",examples:["klitzing"]},bohrRadius:{description:"Borh radius",examples:["bohrRadius"]},classicalElectronRadius:{description:"Classical electron radius",examples:["classicalElectronRadius"]},electronMass:{description:"Electron mass",examples:["electronMass"]},fermiCoupling:{description:"Fermi coupling constant",examples:["fermiCoupling"]},fineStructure:{description:"Fine-structure constant",examples:["fineStructure"]},hartreeEnergy:{description:"Hartree energy",examples:["hartreeEnergy"]},protonMass:{description:"Proton mass",examples:["protonMass"]},deuteronMass:{description:"Deuteron Mass",examples:["deuteronMass"]},neutronMass:{description:"Neutron mass",examples:["neutronMass"]},quantumOfCirculation:{description:"Quantum of circulation",examples:["quantumOfCirculation"]},rydberg:{description:"Rydberg constant",examples:["rydberg"]},thomsonCrossSection:{description:"Thomson cross section",examples:["thomsonCrossSection"]},weakMixingAngle:{description:"Weak mixing angle",examples:["weakMixingAngle"]},efimovFactor:{description:"Efimov factor",examples:["efimovFactor"]},atomicMass:{description:"Atomic mass constant",examples:["atomicMass"]},avogadro:{description:"Avogadro's number",examples:["avogadro"]},boltzmann:{description:"Boltzmann constant",examples:["boltzmann"]},faraday:{description:"Faraday constant",examples:["faraday"]},firstRadiation:{description:"First radiation constant",examples:["firstRadiation"]},loschmidt:{description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},gasConstant:{description:"Gas constant",examples:["gasConstant"]},molarPlanckConstant:{description:"Molar Planck constant",examples:["molarPlanckConstant"]},molarVolume:{description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},sackurTetrode:{description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},secondRadiation:{description:"Second radiation constant",examples:["secondRadiation"]},stefanBoltzmann:{description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},wienDisplacement:{description:"Wien displacement law constant",examples:["wienDisplacement"]},molarMass:{description:"Molar mass constant",examples:["molarMass"]},molarMassC12:{description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},gravity:{description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},planckLength:{description:"Planck length",examples:["planckLength"]},planckMass:{description:"Planck mass",examples:["planckMass"]},planckTime:{description:"Planck time",examples:["planckTime"]},planckCharge:{description:"Planck charge",examples:["planckCharge"]},planckTemperature:{description:"Planck temperature",examples:["planckTemperature"]},derivative:derivativeDocs={name:"derivative",category:"Algebra",syntax:["derivative(expr, variable)","derivative(expr, variable, {simplify: boolean})"],description:"Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",examples:['derivative("2x^3", "x")','derivative("2x^3", "x", {simplify: false})','derivative("2x^2 + 3x + 4", "x")','derivative("sin(2x)", "x")','f = parse("x^2 + x")','x = parse("x")',"df = derivative(f, x)","df.evaluate({x: 3})"],seealso:["simplify","parse","evaluate"]},lsolve:lsolveDocs={name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Solves the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lup","lusolve","usolve","matrix","sparse"]},lup:lupDocs={name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu","qr"]},lusolve:lusolveDocs={name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]},simplify:simplifyDocs={name:"simplify",category:"Algebra",syntax:["simplify(expr)","simplify(expr, rules)"],description:"Simplify an expression tree.",examples:['simplify("3 + 2 / 4")','simplify("2x + x")','f = parse("x * (x + 2 + x)")',"simplified = simplify(f)","simplified.evaluate({x: 2})"],seealso:["derivative","parse","evaluate"]},rationalize:rationalizeDocs={name:"rationalize",category:"Algebra",syntax:["rationalize(expr)","rationalize(expr, scope)","rationalize(expr, scope, detailed)"],description:"Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",examples:['rationalize("2x/y - y/(x+1)")','rationalize("2x/y - y/(x+1)", true)'],seealso:["simplify"]},slu:sluDocs={name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup","qr"]},usolve:usolveDocs={name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Solves the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["lup","lusolve","lsolve","matrix","sparse"]},qr:qrDocs={name:"qr",category:"Algebra",syntax:["qr(A)"],description:"Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",examples:["qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])"],seealso:["lup","slu","matrix"]},abs:absDocs={name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]},add:addDocs={name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]},cbrt:cbrtDocs={name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]},ceil:ceilDocs={name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]},cube:cubeDocs={name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]},divide:divideDocs={name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]},dotDivide:dotDivideDocs={name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]},dotMultiply:dotMultiplyDocs={name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]},dotPow:dotPowDocs={name:"dotPow",category:"Operators",syntax:["x .^ y","dotPow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]},exp:expDocs={name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["expm","expm1","pow","log"]},expm:expmDocs={name:"expm",category:"Arithmetic",syntax:["exp(x)"],description:"Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",examples:["expm([[0,2],[0,0]])"],seealso:["exp"]},expm1:expm1Docs={name:"expm1",category:"Arithmetic",syntax:["expm1(x)"],description:"Calculate the value of subtracting 1 from the exponential value.",examples:["expm1(2)","pow(e, 2) - 1","log(expm1(2) + 1)"],seealso:["exp","pow","log"]},fix:fixDocs={name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]},floor:floorDocs={name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]},gcd:gcdDocs={name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]},hypot:hypotDocs={name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]},lcm:lcmDocs={name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]},log:logDocs={name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log1p","log2","log10"]},log2:log2Docs={name:"log2",category:"Arithmetic",syntax:["log2(x)"],description:"Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",examples:["log2(0.03125)","log2(16)","log2(16) / log2(2)","pow(2, 4)"],seealso:["exp","log1p","log","log10"]},log1p:log1pDocs={name:"log1p",category:"Arithmetic",syntax:["log1p(x)","log1p(x, base)"],description:"Calculate the logarithm of a `value+1`",examples:["log1p(2.5)","exp(log1p(1.4))","pow(10, 4)","log1p(9999, 10)","log1p(9999) / log(10)"],seealso:["exp","log","log2","log10"]},log10:log10Docs={name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]},mod:modDocs={name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]},multiply:multiplyDocs={name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]},norm:normDocs={name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i)","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)",'norm([[1, 2], [3, 4]], "inf")','norm([[1, 2], [3, 4]], "fro")']},nthRoot:nthRootDocs={name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["nthRoots","pow","sqrt"]},nthRoots:nthRootsDocs={name:"nthRoots",category:"Arithmetic",syntax:["nthRoots(A)","nthRoots(A, root)"],description:'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',examples:["nthRoots(1)","nthRoots(1, 3)"],seealso:["sqrt","pow","nthRoot"]},pow:powDocs={name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3","2*2*2","1 + e ^ (pi * i)"],seealso:["multiply","nthRoot","nthRoots","sqrt"]},round:roundDocs={name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)"],seealso:["ceil","floor","fix"]},sign:signDocs={name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]},sqrt:sqrtDocs={name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","sqrtm","multiply","nthRoot","nthRoots","pow"]},sqrtm:sqrtmDocs={name:"sqrtm",category:"Arithmetic",syntax:["sqrtm(x)"],description:"Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",examples:["sqrtm([[1, 2], [3, 4]])"],seealso:["sqrt","abs","square","multiply"]},square:squareDocs={name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]},subtract:subtractDocs={name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]},unaryMinus:unaryMinusDocs={name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]},unaryPlus:unaryPlusDocs={name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]},xgcd:xgcdDocs={name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]},bitAnd:bitAndDocs={name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]},bitNot:bitNotDocs={name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]},bitOr:bitOrDocs={name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]},bitXor:bitXorDocs={name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]},leftShift:leftShiftDocs={name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]},rightArithShift:rightArithShiftDocs={name:"rightArithShift",category:"Bitwise",syntax:["x >> y","rightArithShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]},rightLogShift:rightLogShiftDocs={name:"rightLogShift",category:"Bitwise",syntax:["x >>> y","rightLogShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]},bellNumbers:bellNumbersDocs={name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]},catalan:catalanDocs={name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]},composition:compositionDocs={name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]},stirlingS2:stirlingS2Docs={name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]},config:configDocs={name:"config",category:"Core",syntax:["config()","config(options)"],description:"Get configuration or change configuration.",examples:["config()","1/3 + 1/4",'config({number: "Fraction"})',"1/3 + 1/4"],seealso:[]},import:importDocs={name:"import",category:"Core",syntax:["import(functions)","import(functions, options)"],description:"Import functions or constants from an object.",examples:["import({myFn: f(x)=x^2, myConstant: 32 })","myFn(2)","myConstant"],seealso:[]},typed:typedDocs={name:"typed",category:"Core",syntax:["typed(signatures)","typed(name, signatures)"],description:"Create a typed function.",examples:['double = typed({ "number, number": f(x)=x+x })',"double(2)",'double("hello")'],seealso:[]},arg:argDocs={name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]},conj:conjDocs={name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]},re:reDocs={name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]},im:imDocs={name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]},evaluate:evaluateDocs={name:"evaluate",category:"Expression",syntax:["evaluate(expression)","evaluate([expr1, expr2, expr3, ...])"],description:"Evaluate an expression or an array with expressions.",examples:['evaluate("2 + 3")','evaluate("sqrt(" + 4 + ")")'],seealso:[]},help:helpDocs={name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]},distance:distanceDocs={name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2]])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]},intersect:intersectDocs={name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]},and:andDocs={name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]},not:notDocs={name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]},or:orDocs={name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]},xor:xorDocs={name:"xor",category:"Logical",syntax:["x xor y","xor(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 xor 4"],seealso:["not","and","or"]},concat:concatDocs={name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},cross:crossDocs={name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]},column:columnDocs={name:"column",category:"Matrix",syntax:["column(x, index)"],description:"Return a column from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","column(A, 1)","column(A, 2)"],seealso:["row"]},ctranspose:ctransposeDocs={name:"ctranspose",category:"Matrix",syntax:["x'","ctranspose(x)"],description:"Complex Conjugate and Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","ctranspose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]},det:detDocs={name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},diag:diagDocs={name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},dot:dotDocs={name:"dot",category:"Matrix",syntax:["dot(A, B)","A * B"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]},getMatrixDataType:getMatrixDataTypeDocs={name:"getMatrixDataType",category:"Matrix",syntax:["getMatrixDataType(x)"],description:'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',examples:["getMatrixDataType([1, 2, 3])","getMatrixDataType([[5 cm], [2 inch]])",'getMatrixDataType([1, "text"])',"getMatrixDataType([1, bignumber(4)])"],seealso:["matrix","sparse","typeOf"]},identity:identityDocs={name:"identity",category:"Matrix",syntax:["identity(n)","identity(m, n)","identity([m, n])"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["identity(3)","identity(3, 5)","a = [1, 2, 3; 4, 5, 6]","identity(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},filter:filterDocs={name:"filter",category:"Matrix",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]},flatten:flattenDocs={name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]},forEach:forEachDocs={name:"forEach",category:"Matrix",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:["forEach([1, 2, 3], function(val) { console.log(val) })"],seealso:["map","sort","filter"]},inv:invDocs={name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","identity","ones","range","size","squeeze","subset","trace","transpose","zeros"]},eigs:eigsDocs={name:"eigs",category:"Matrix",syntax:["eigs(x)"],description:"Calculate the eigenvalues and eigenvectors of a real symmetric matrix",examples:["eigs([[5, 2.3], [2.3, 1]])"],seealso:["inv"]},kron:kronDocs={name:"kron",category:"Matrix",syntax:["kron(x, y)"],description:"Calculates the kronecker product of 2 matrices or vectors.",examples:["kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])","kron([1,1], [2,3,4])"],seealso:["multiply","dot","cross"]},map:mapDocs={name:"map",category:"Matrix",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], square)"],seealso:["filter","forEach"]},ones:onesDocs={name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","identity","inv","range","size","squeeze","subset","trace","transpose","zeros"]},partitionSelect:partitionSelectDocs={name:"partitionSelect",category:"Matrix",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1)'],seealso:["sort"]},range:rangeDocs={name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","identity","inv","ones","size","squeeze","subset","trace","transpose","zeros"]},resize:resizeDocs={name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze","reshape"]},reshape:reshapeDocs={name:"reshape",category:"Matrix",syntax:["reshape(x, sizes)"],description:"Reshape a multi dimensional array to fit the specified dimensions.",examples:["reshape([1, 2, 3, 4, 5, 6], [2, 3])","reshape([[1, 2], [3, 4]], [1, 4])","reshape([[1, 2], [3, 4]], [4])"],seealso:["size","squeeze","resize"]},row:rowDocs={name:"row",category:"Matrix",syntax:["row(x, index)"],description:"Return a row from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","row(A, 1)","row(A, 2)"],seealso:["column"]},size:sizeDocs={name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","det","diag","identity","inv","ones","range","squeeze","subset","trace","transpose","zeros"]},sort:sortDocs={name:"sort",category:"Matrix",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"])',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)','sort(["10", "1", "2"], "natural")'],seealso:["map","filter","forEach"]},squeeze:squeezeDocs={name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","identity","inv","ones","range","size","subset","trace","transpose","zeros"]},subset:subsetDocs={name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","trace","transpose","zeros"]},trace:traceDocs={name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","transpose","zeros"]},transpose:transposeDocs={name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]},zeros:zerosDocs={name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose"]},combinations:combinationsDocs={name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["combinationsWithRep","permutations","factorial"]},combinationsWithRep:combinationsWithRepDocs={name:"combinationsWithRep",category:"Probability",syntax:["combinationsWithRep(n, k)"],description:"Compute the number of combinations of n items taken k at a time with replacements.",examples:["combinationsWithRep(7, 5)"],seealso:["combinations","permutations","factorial"]},factorial:factorialDocs={name:"factorial",category:"Probability",syntax:["n!","factorial(n)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","combinationsWithRep","permutations","gamma"]},gamma:gammaDocs={name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]},kldivergence:kldivergenceDocs={name:"kldivergence",category:"Probability",syntax:["kldivergence(x, y)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]},multinomial:multinomialDocs={name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]},permutations:permutationsDocs={name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","combinationsWithRep","factorial"]},pickRandom:pickRandomDocs={name:"pickRandom",category:"Probability",syntax:["pickRandom(array)","pickRandom(array, number)","pickRandom(array, weights)","pickRandom(array, number, weights)","pickRandom(array, weights, number)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])","pickRandom([1, 3, 1, 6], 2)","pickRandom([1, 3, 1, 6], [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)"],seealso:["random","randomInt"]},random:randomDocs={name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]},randomInt:randomIntDocs={name:"randomInt",category:"Probability",syntax:["randomInt(max)","randomInt(min, max)","randomInt(size)","randomInt(size, max)","randomInt(size, min, max)"],description:"Return a random integer number",examples:["randomInt(10, 20)","randomInt([2, 3], 10)"],seealso:["pickRandom","random"]},compare:compareDocs={name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compareNatural","compareText"]},compareNatural:compareNaturalDocs={name:"compareNatural",category:"Relational",syntax:["compareNatural(x, y)"],description:"Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compareNatural(2, 3)","compareNatural(3, 2)","compareNatural(2, 2)","compareNatural(5cm, 40mm)",'compareNatural("2", "10")',"compareNatural(2 + 3i, 2 + 4i)","compareNatural([1, 2, 4], [1, 2, 3])","compareNatural([1, 5], [1, 2, 3])","compareNatural([1, 2], [1, 2])","compareNatural({a: 2}, {a: 4})"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare","compareText"]},compareText:compareTextDocs={name:"compareText",category:"Relational",syntax:["compareText(x, y)"],description:"Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:['compareText("B", "A")','compareText("A", "B")','compareText("A", "A")','compareText("2", "10")','compare("2", "10")',"compare(2, 10)",'compareNatural("2", "10")','compareText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural"]},deepEqual:deepEqualDocs={name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["deepEqual([1,3,4], [1,3,4])","deepEqual([1,3,4], [1,3])"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]},equal:equalDocs={name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual","equalText"]},equalText:equalTextDocs={name:"equalText",category:"Relational",syntax:["equalText(x, y)"],description:"Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",examples:['equalText("Hello", "Hello")','equalText("a", "A")','equal("2e3", "2000")','equalText("2e3", "2000")','equalText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural","compareText","equal"]},larger:largerDocs={name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]},largerEq:largerEqDocs={name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 >= 1+1","2 > 1+1","a = 3.2","b = 6-2.8","(a >= b)"],seealso:["equal","unequal","smallerEq","smaller","compare"]},smaller:smallerDocs={name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]},smallerEq:smallerEqDocs={name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 <= 1+1","2 < 1+1","a = 3.2","b = 6-2.8","(a <= b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]},unequal:unequalDocs={name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]},setCartesian:setCartesianDocs={name:"setCartesian",category:"Set",syntax:["setCartesian(set1, set2)"],description:"Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setCartesian([1, 2], [3, 4])"],seealso:["setUnion","setIntersect","setDifference","setPowerset"]},setDifference:setDifferenceDocs={name:"setDifference",category:"Set",syntax:["setDifference(set1, set2)"],description:"Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setDifference([1, 2, 3, 4], [3, 4, 5, 6])","setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setSymDifference"]},setDistinct:setDistinctDocs={name:"setDistinct",category:"Set",syntax:["setDistinct(set)"],description:"Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setDistinct([1, 1, 1, 2, 2, 3])"],seealso:["setMultiplicity"]},setIntersect:setIntersectDocs={name:"setIntersect",category:"Set",syntax:["setIntersect(set1, set2)"],description:"Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIntersect([1, 2, 3, 4], [3, 4, 5, 6])","setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setDifference"]},setIsSubset:setIsSubsetDocs={name:"setIsSubset",category:"Set",syntax:["setIsSubset(set1, set2)"],description:"Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIsSubset([1, 2], [3, 4, 5, 6])","setIsSubset([3, 4], [3, 4, 5, 6])"],seealso:["setUnion","setIntersect","setDifference"]},setMultiplicity:setMultiplicityDocs={name:"setMultiplicity",category:"Set",syntax:["setMultiplicity(element, set)"],description:"Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setMultiplicity(1, [1, 2, 2, 4])","setMultiplicity(2, [1, 2, 2, 4])"],seealso:["setDistinct","setSize"]},setPowerset:setPowersetDocs={name:"setPowerset",category:"Set",syntax:["setPowerset(set)"],description:"Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setPowerset([1, 2, 3])"],seealso:["setCartesian"]},setSize:setSizeDocs={name:"setSize",category:"Set",syntax:["setSize(set)","setSize(set, unique)"],description:'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',examples:["setSize([1, 2, 2, 4])","setSize([1, 2, 2, 4], true)"],seealso:["setUnion","setIntersect","setDifference"]},setSymDifference:setSymDifferenceDocs={name:"setSymDifference",category:"Set",syntax:["setSymDifference(set1, set2)"],description:"Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])","setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setDifference"]},setUnion:setUnionDocs={name:"setUnion",category:"Set",syntax:["setUnion(set1, set2)"],description:"Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setUnion([1, 2, 3, 4], [3, 4, 5, 6])","setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setIntersect","setDifference"]},erf:erfDocs={name:"erf",category:"Special",syntax:["erf(x)"],description:"Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",examples:["erf(0.2)","erf(-0.5)","erf(4)"],seealso:[]},mad:madDocs={name:"mad",category:"Statistics",syntax:["mad(a, b, c, ...)","mad(A)"],description:"Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",examples:["mad(10, 20, 30)","mad([1, 2, 3])"],seealso:["mean","median","std","abs"]},max:maxDocs={name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dim)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","variance"]},mean:meanDocs={name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dim)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","variance"]},median:medianDocs={name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","variance","quantileSeq"]},min:minDocs={name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dim)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","variance"]},mode:modeDocs={name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(2, 1, 4, 3, 1)","mode([1, 2.7, 3.2, 4, 2.7])","mode(1, 4, 6, 1, 6)"],seealso:["max","mean","min","median","prod","std","sum","variance"]},prod:prodDocs={name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","variance"]},quantileSeq:quantileSeqDocs={name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","variance"]},std:stdDocs={name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","prod","sum","variance"]},sum:sumDocs={name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","variance"]},variance:varianceDocs={name:"variance",category:"Statistics",syntax:["variance(a, b, c, ...)","variance(A)","variance(A, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["variance(2, 4, 6)","variance([2, 4, 6, 8])",'variance([2, 4, 6, 8], "uncorrected")','variance([2, 4, 6, 8], "biased")',"variance([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]},acos:acosDocs={name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]},acosh:acoshDocs={name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]},acot:acotDocs={name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]},acoth:acothDocs={name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(2)","acoth(0.5)"],seealso:["acsch","asech"]},acsc:acscDocs={name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(2)","acsc(csc(0.5))","acsc(0.5)"],seealso:["csc","asin","asec"]},acsch:acschDocs={name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]},asec:asecDocs={name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]},asech:asechDocs={name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]},asin:asinDocs={name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(0.5))"],seealso:["sin","acos","atan"]},asinh:asinhDocs={name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]},atan:atanDocs={name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(0.5))"],seealso:["tan","acos","asin"]},atanh:atanhDocs={name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]},atan2:atan2Docs={name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]},cos:cosDocs={name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]},cosh:coshDocs={name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]},cot:cotDocs={name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]},coth:cothDocs={name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]},csc:cscDocs={name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]},csch:cschDocs={name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]},sec:secDocs={name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]},sech:sechDocs={name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]},sin:sinDocs={name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]},sinh:sinhDocs={name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]},tan:tanDocs={name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]},tanh:tanhDocs={name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]},to:toDocs={name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]},clone:cloneDocs={name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]},format:formatDocs={name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]},isNaN:isNaNDocs={name:"isNaN",category:"Utils",syntax:["isNaN(x)"],description:"Test whether a value is NaN (not a number)",examples:["isNaN(2)","isNaN(0 / 0)","isNaN(NaN)","isNaN(Infinity)"],seealso:["isNegative","isNumeric","isPositive","isZero"]},isInteger:isIntegerDocs={name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]},isNegative:isNegativeDocs={name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]},isNumeric:isNumericDocs={name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)",'isNumeric("2")','hasNumericValue("2")',"isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))","isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","hasNumericValue"]},hasNumericValue:hasNumericValueDocs={name:"hasNumericValue",category:"Utils",syntax:["hasNumericValue(x)"],description:"Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",examples:["hasNumericValue(2)",'hasNumericValue("2")','isNumeric("2")',"hasNumericValue(0)","hasNumericValue(bignumber(500))","hasNumericValue(fraction(0.125))","hasNumericValue(2 + 3i)",'hasNumericValue([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","isNumeric"]},isPositive:isPositiveDocs={name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]},isPrime:isPrimeDocs={name:"isPrime",category:"Utils",syntax:["isPrime(x)"],description:"Test whether a value is prime: has no divisors other than itself and one.",examples:["isPrime(3)","isPrime(-2)","isPrime([2, 17, 100])"],seealso:["isInteger","isNumeric","isNegative","isZero"]},isZero:isZeroDocs={name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]},typeOf:typeOfDocs={name:"typeOf",category:"Utils",syntax:["typeOf(x)"],description:"Get the type of a variable.",examples:["typeOf(3.5)","typeOf(2 - 4i)","typeOf(45 deg)",'typeOf("hello world")'],seealso:["getMatrixDataType"]},numeric:numericDocs={name:"numeric",category:"Utils",syntax:["numeric(x)"],description:"Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",examples:['numeric("4")','numeric("4", "number")','numeric("4", "BigNumber")','numeric("4", "Fraction)','numeric(4, "Fraction")','numeric(fraction(2, 5), "number)'],seealso:["number","fraction","bignumber","string","format"]}}),name$3p="help",createHelp=factory("help",dependencies$3q=["typed","mathWithTransform","Help"],(function(_ref){var typed=_ref.typed,mathWithTransform=_ref.mathWithTransform,Help=_ref.Help;return typed("help",{any:function any(search){var prop,searchName=search;if("string"!=typeof search)for(prop in mathWithTransform)if(hasOwnProperty(mathWithTransform,prop)&&search===mathWithTransform[prop]){searchName=prop;break}var doc=getSafeProperty(embeddedDocs,searchName);if(!doc){var searchText="function"==typeof searchName?searchName.name:searchName;throw new Error('No documentation found on "'+searchText+'"')}return new Help(doc)}})})),exports_9("createHelp",createHelp),name$3q="chain",createChain=factory("chain",dependencies$3r=["typed","Chain"],(function(_ref){var typed=_ref.typed,Chain=_ref.Chain;return typed("chain",{"":function _(){return new Chain},any:function any(value){return new Chain(value)}})})),exports_9("createChain",createChain),name$3r="det",createDet=factory("det",dependencies$3s=["typed","matrix","subtract","multiply","unaryMinus","lup"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,subtract=_ref.subtract,multiply=_ref.multiply,unaryMinus=_ref.unaryMinus,lup=_ref.lup;return typed("det",{any:function any(x){return clone(x)},"Array | Matrix":function det(x){var size;switch((size=isMatrix(x)?x.size():Array.isArray(x)?(x=matrix(x)).size():[]).length){case 0:return clone(x);case 1:if(1===size[0])return clone(x.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+format$2(size)+")");case 2:var rows=size[0],cols;if(rows===size[1])return _det(x.clone().valueOf(),rows);throw new RangeError("Matrix must be square (size: "+format$2(size)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+format$2(size)+")")}}});function _det(matrix,rows,cols){if(1===rows)return clone(matrix[0][0]);if(2===rows)return subtract(multiply(matrix[0][0],matrix[1][1]),multiply(matrix[1][0],matrix[0][1]));for(var decomp=lup(matrix),det=decomp.U[0][0],_i=1;_i<rows;_i++)det=multiply(det,decomp.U[_i][_i]);for(var evenCycles=0,i=0,visited=[];;){for(;visited[i];)i++;if(i>=rows)break;for(var j=i,cycleLen=0;!visited[decomp.p[j]];)visited[decomp.p[j]]=!0,j=decomp.p[j],cycleLen++;cycleLen%2==0&&evenCycles++}return evenCycles%2==0?det:unaryMinus(det)}})),exports_9("createDet",createDet),name$3s="inv",createInv=factory("inv",dependencies$3t=["typed","matrix","divideScalar","addScalar","multiply","unaryMinus","det","identity","abs"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,divideScalar=_ref.divideScalar,addScalar=_ref.addScalar,multiply=_ref.multiply,unaryMinus=_ref.unaryMinus,det=_ref.det,identity=_ref.identity,abs=_ref.abs;return typed("inv",{"Array | Matrix":function ArrayMatrix(x){var size=isMatrix(x)?x.size():arraySize(x);switch(size.length){case 1:if(1===size[0])return isMatrix(x)?matrix([divideScalar(1,x.valueOf()[0])]):[divideScalar(1,x[0])];throw new RangeError("Matrix must be square (size: "+format$2(size)+")");case 2:var rows=size[0],cols=size[1];if(rows===cols)return isMatrix(x)?matrix(_inv(x.valueOf(),rows,cols),x.storage()):_inv(x,rows,cols);throw new RangeError("Matrix must be square (size: "+format$2(size)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+format$2(size)+")")}},any:function any(x){return divideScalar(1,x)}});function _inv(mat,rows,cols){var r,s,f,value,temp;if(1===rows){if(0===(value=mat[0][0]))throw Error("Cannot calculate inverse, determinant is zero");return[[divideScalar(1,value)]]}if(2===rows){var d=det(mat);if(0===d)throw Error("Cannot calculate inverse, determinant is zero");return[[divideScalar(mat[1][1],d),divideScalar(unaryMinus(mat[0][1]),d)],[divideScalar(unaryMinus(mat[1][0]),d),divideScalar(mat[0][0],d)]]}var A=mat.concat();for(r=0;r<rows;r++)A[r]=A[r].concat();for(var B=identity(rows).valueOf(),c=0;c<cols;c++){var ABig=abs(A[c][c]),rBig=c;for(r=c+1;r<rows;)abs(A[r][c])>ABig&&(ABig=abs(A[r][c]),rBig=r),r++;if(0===ABig)throw Error("Cannot calculate inverse, determinant is zero");(r=rBig)!==c&&(temp=A[c],A[c]=A[r],A[r]=temp,temp=B[c],B[c]=B[r],B[r]=temp);var Ac=A[c],Bc=B[c];for(r=0;r<rows;r++){var Ar=A[r],Br=B[r];if(r!==c){if(0!==Ar[c]){for(f=divideScalar(unaryMinus(Ar[c]),Ac[c]),s=c;s<cols;s++)Ar[s]=addScalar(Ar[s],multiply(f,Ac[s]));for(s=0;s<cols;s++)Br[s]=addScalar(Br[s],multiply(f,Bc[s]))}}else{for(f=Ac[c],s=c;s<cols;s++)Ar[s]=divideScalar(Ar[s],f);for(s=0;s<cols;s++)Br[s]=divideScalar(Br[s],f)}}}return B}})),exports_9("createInv",createInv),name$3t="eigs",createEigs=factory("eigs",dependencies$3u=["config","typed","matrix","addScalar","equal","subtract","abs","atan","cos","sin","multiplyScalar","inv","bignumber","multiply","add"],(function(_ref){var config=_ref.config,typed=_ref.typed,matrix=_ref.matrix,addScalar=_ref.addScalar,subtract=_ref.subtract,equal=_ref.equal,abs=_ref.abs,atan=_ref.atan,cos=_ref.cos,sin=_ref.sin,multiplyScalar=_ref.multiplyScalar,inv=_ref.inv,bignumber=_ref.bignumber,multiply=_ref.multiply,add=_ref.add;return typed("eigs",{Array:function Array(x){var mat=matrix(x),size=mat.size();if(2!==size.length||size[0]!==size[1])throw new RangeError("Matrix must be square (size: "+format$2(size)+")");var ans=checkAndSubmit(mat,size[0]);return{values:ans[0],vectors:ans[1]}},Matrix:function Matrix(x){var size=x.size();if(2!==size.length||size[0]!==size[1])throw new RangeError("Matrix must be square (size: "+format$2(size)+")");var ans=checkAndSubmit(x,size[0]);return{values:matrix(ans[0]),vectors:matrix(ans[1])}}});function isSymmetric(x,n){for(var i=0;i<n;i++)for(var j=i;j<n;j++)if(!equal(x[i][j],x[j][i]))throw new TypeError("Input matrix is not symmetric")}function checkAndSubmit(x,n){var type=x.datatype();if(void 0===type&&(type=x.getDataType()),"number"!==type&&"BigNumber"!==type&&"Fraction"!==type)throw"mixed"===type?new TypeError("Mixed matrix element type is not supported"):new TypeError("Matrix element type not supported ("+type+")");if(isSymmetric(x.toArray(),n),"number"===type)return diag(x.toArray());if("Fraction"===type){for(var xArr=x.toArray(),i=0;i<n;i++)for(var j=i;j<n;j++)xArr[i][j]=xArr[i][j].valueOf(),xArr[j][i]=xArr[i][j];return diag(x.toArray())}return"BigNumber"===type?diagBig(x.toArray()):void 0}function diag(x){for(var N=x.length,e0=Math.abs(config.epsilon/N),psi,Sij=new Array(N),i=0;i<N;i++)Sij[i]=createArray(N,0),Sij[i][i]=1;for(var Vab=getAij(x);Math.abs(Vab[1])>=Math.abs(e0);){var _i=Vab[0][0],j=Vab[0][1];x=x1(x,psi=getTheta(x[_i][_i],x[j][j],x[_i][j]),_i,j),Sij=Sij1(Sij,psi,_i,j),Vab=getAij(x)}for(var Ei=createArray(N,0),_i2=0;_i2<N;_i2++)Ei[_i2]=x[_i2][_i2];return sorting(clone(Ei),clone(Sij))}function diagBig(x){for(var N=x.length,e0=abs(config.epsilon/N),psi,Sij=new Array(N),i=0;i<N;i++)Sij[i]=createArray(N,0),Sij[i][i]=1;for(var Vab=getAijBig(x);abs(Vab[1])>=abs(e0);){var _i3=Vab[0][0],j=Vab[0][1];x=x1Big(x,psi=getThetaBig(x[_i3][_i3],x[j][j],x[_i3][j]),_i3,j),Sij=Sij1Big(Sij,psi,_i3,j),Vab=getAijBig(x)}for(var Ei=createArray(N,0),_i4=0;_i4<N;_i4++)Ei[_i4]=x[_i4][_i4];return sorting(clone(Ei),clone(Sij))}function getTheta(aii,ajj,aij){var denom=ajj-aii;return Math.abs(denom)<=config.epsilon?Math.PI/4:.5*Math.atan(2*aij/(ajj-aii))}function getThetaBig(aii,ajj,aij){var denom=subtract(ajj,aii);return abs(denom)<=config.epsilon?bignumber(-1).acos().div(4):multiplyScalar(.5,atan(multiply(2,aij,inv(denom))))}function Sij1(Sij,theta,i,j){for(var N=Sij.length,c=Math.cos(theta),s=Math.sin(theta),Ski=createArray(N,0),Skj=createArray(N,0),k=0;k<N;k++)Ski[k]=c*Sij[k][i]-s*Sij[k][j],Skj[k]=s*Sij[k][i]+c*Sij[k][j];for(var _k=0;_k<N;_k++)Sij[_k][i]=Ski[_k],Sij[_k][j]=Skj[_k];return Sij}function Sij1Big(Sij,theta,i,j){for(var N=Sij.length,c=cos(theta),s=sin(theta),Ski=createArray(N,bignumber(0)),Skj=createArray(N,bignumber(0)),k=0;k<N;k++)Ski[k]=subtract(multiplyScalar(c,Sij[k][i]),multiplyScalar(s,Sij[k][j])),Skj[k]=addScalar(multiplyScalar(s,Sij[k][i]),multiplyScalar(c,Sij[k][j]));for(var _k2=0;_k2<N;_k2++)Sij[_k2][i]=Ski[_k2],Sij[_k2][j]=Skj[_k2];return Sij}function x1Big(Hij,theta,i,j){for(var N=Hij.length,c=bignumber(cos(theta)),s=bignumber(sin(theta)),c2=multiplyScalar(c,c),s2=multiplyScalar(s,s),Aki=createArray(N,bignumber(0)),Akj=createArray(N,bignumber(0)),csHij=multiply(bignumber(2),c,s,Hij[i][j]),Aii=addScalar(subtract(multiplyScalar(c2,Hij[i][i]),csHij),multiplyScalar(s2,Hij[j][j])),Ajj=add(multiplyScalar(s2,Hij[i][i]),csHij,multiplyScalar(c2,Hij[j][j])),k=0;k<N;k++)Aki[k]=subtract(multiplyScalar(c,Hij[i][k]),multiplyScalar(s,Hij[j][k])),Akj[k]=addScalar(multiplyScalar(s,Hij[i][k]),multiplyScalar(c,Hij[j][k]));Hij[i][i]=Aii,Hij[j][j]=Ajj,Hij[i][j]=bignumber(0),Hij[j][i]=bignumber(0);for(var _k3=0;_k3<N;_k3++)_k3!==i&&_k3!==j&&(Hij[i][_k3]=Aki[_k3],Hij[_k3][i]=Aki[_k3],Hij[j][_k3]=Akj[_k3],Hij[_k3][j]=Akj[_k3]);return Hij}function x1(Hij,theta,i,j){for(var N=Hij.length,c=Math.cos(theta),s=Math.sin(theta),c2=c*c,s2=s*s,Aki=createArray(N,0),Akj=createArray(N,0),Aii=c2*Hij[i][i]-2*c*s*Hij[i][j]+s2*Hij[j][j],Ajj=s2*Hij[i][i]+2*c*s*Hij[i][j]+c2*Hij[j][j],k=0;k<N;k++)Aki[k]=c*Hij[i][k]-s*Hij[j][k],Akj[k]=s*Hij[i][k]+c*Hij[j][k];Hij[i][i]=Aii,Hij[j][j]=Ajj,Hij[i][j]=0,Hij[j][i]=0;for(var _k4=0;_k4<N;_k4++)_k4!==i&&_k4!==j&&(Hij[i][_k4]=Aki[_k4],Hij[_k4][i]=Aki[_k4],Hij[j][_k4]=Akj[_k4],Hij[_k4][j]=Akj[_k4]);return Hij}function getAij(Mij){for(var N=Mij.length,maxMij=0,maxIJ=[0,1],i=0;i<N;i++)for(var j=i+1;j<N;j++)Math.abs(maxMij)<Math.abs(Mij[i][j])&&(maxMij=Math.abs(Mij[i][j]),maxIJ=[i,j]);return[maxIJ,maxMij]}function getAijBig(Mij){for(var N=Mij.length,maxMij=0,maxIJ=[0,1],i=0;i<N;i++)for(var j=i+1;j<N;j++)abs(maxMij)<abs(Mij[i][j])&&(maxMij=abs(Mij[i][j]),maxIJ=[i,j]);return[maxIJ,maxMij]}function sorting(E,S){for(var N=E.length,Ef=Array(N),Sf=Array(N),k=0;k<N;k++)Sf[k]=Array(N);for(var i=0;i<N;i++){for(var minID=0,minE=E[0],j=0;j<E.length;j++)E[j]<minE&&(minE=E[minID=j]);Ef[i]=E.splice(minID,1)[0];for(var _k5=0;_k5<N;_k5++)Sf[_k5][i]=S[_k5][minID],S[_k5].splice(minID,1)}return[clone(Ef),clone(Sf)]}function createArray(size,value){for(var array=new Array(size),i=0;i<size;i++)array[i]=value;return array}})),exports_9("createEigs",createEigs),name$3u="expm",createExpm=factory("expm",dependencies$3v=["typed","abs","add","identity","inv","multiply"],(function(_ref){var typed=_ref.typed,abs=_ref.abs,add=_ref.add,identity=_ref.identity,inv=_ref.inv,multiply=_ref.multiply;return typed("expm",{Matrix:function Matrix(A){var size=A.size();if(2!==size.length||size[0]!==size[1])throw new RangeError("Matrix must be square (size: "+format$2(size)+")");for(var n=size[0],eps=1e-15,infNorm,params=findParams(infinityNorm(A),eps),q=params.q,j=params.j,Apos=multiply(A,Math.pow(2,-j)),N=identity(n),D=identity(n),factor=1,AposToI=Apos,alternate=-1,i=1;i<=q;i++)i>1&&(AposToI=multiply(AposToI,Apos),alternate=-alternate),N=add(N,multiply(factor=factor*(q-i+1)/((2*q-i+1)*i),AposToI)),D=add(D,multiply(factor*alternate,AposToI));for(var R=multiply(inv(D),N),_i=0;_i<j;_i++)R=multiply(R,R);return isSparseMatrix(A)?A.createSparseMatrix(R):R}});function infinityNorm(A){for(var n=A.size()[0],infNorm=0,i=0;i<n;i++){for(var rowSum=0,j=0;j<n;j++)rowSum+=abs(A.get([i,j]));infNorm=Math.max(rowSum,infNorm)}return infNorm}function findParams(infNorm,eps){for(var maxSearchSize=30,k=0;k<30;k++)for(var q=0;q<=k;q++){var j=k-q;if(errorEstimate(infNorm,q,j)<eps)return{q:q,j:j}}throw new Error("Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)")}function errorEstimate(infNorm,q,j){for(var qfac=1,i=2;i<=q;i++)qfac*=i;for(var twoqfac=qfac,_i2=q+1;_i2<=2*q;_i2++)twoqfac*=_i2;var twoqp1fac=twoqfac*(2*q+1);return 8*Math.pow(infNorm/Math.pow(2,j),2*q)*qfac*qfac/(twoqfac*twoqp1fac)}})),exports_9("createExpm",createExpm),name$3v="sqrtm",createSqrtm=factory("sqrtm",dependencies$3w=["typed","abs","add","multiply","sqrt","subtract","inv","size","max","identity"],(function(_ref){var typed=_ref.typed,abs=_ref.abs,add=_ref.add,multiply=_ref.multiply,sqrt=_ref.sqrt,subtract=_ref.subtract,inv=_ref.inv,size=_ref.size,max=_ref.max,identity=_ref.identity,_maxIterations=1e3,_tolerance=1e-6;function _denmanBeavers(A){var error,iterations=0,Y=A,Z=identity(size(A));do{var Yk=Y;if(Y=multiply(.5,add(Yk,inv(Z))),Z=multiply(.5,add(Z,inv(Yk))),(error=max(abs(subtract(Y,Yk))))>1e-6&&++iterations>1e3)throw new Error("computing square root of matrix: iterative method could not converge")}while(error>1e-6);return Y}return typed("sqrtm",{"Array | Matrix":function ArrayMatrix(A){var size=isMatrix(A)?A.size():arraySize(A);switch(size.length){case 1:if(1===size[0])return sqrt(A);throw new RangeError("Matrix must be square (size: "+format$2(size)+")");case 2:var rows,cols;if(size[0]===size[1])return _denmanBeavers(A);throw new RangeError("Matrix must be square (size: "+format$2(size)+")")}}})})),exports_9("createSqrtm",createSqrtm),createDivide=factory(name$3w="divide",dependencies$3x=["typed","matrix","multiply","equalScalar","divideScalar","inv"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,multiply=_ref.multiply,equalScalar=_ref.equalScalar,divideScalar=_ref.divideScalar,inv=_ref.inv,algorithm11=createAlgorithm11({typed:typed,equalScalar:equalScalar}),algorithm14=createAlgorithm14({typed:typed});return typed("divide",extend({"Array | Matrix, Array | Matrix":function ArrayMatrixArrayMatrix(x,y){return multiply(x,inv(y))},"DenseMatrix, any":function DenseMatrixAny(x,y){return algorithm14(x,y,divideScalar,!1)},"SparseMatrix, any":function SparseMatrixAny(x,y){return algorithm11(x,y,divideScalar,!1)},"Array, any":function ArrayAny(x,y){return algorithm14(matrix(x),y,divideScalar,!1).valueOf()},"any, Array | Matrix":function anyArrayMatrix(x,y){return multiply(x,inv(y))}},divideScalar.signatures))})),exports_9("createDivide",createDivide),createDistance=factory(name$3x="distance",dependencies$3y=["typed","addScalar","subtract","divideScalar","multiplyScalar","unaryMinus","sqrt","abs"],(function(_ref){var typed=_ref.typed,addScalar=_ref.addScalar,subtract=_ref.subtract,multiplyScalar=_ref.multiplyScalar,divideScalar=_ref.divideScalar,unaryMinus=_ref.unaryMinus,sqrt=_ref.sqrt,abs=_ref.abs;return typed(name$3x,{"Array, Array, Array":function ArrayArrayArray(x,y,z){if(2===x.length&&2===y.length&&2===z.length){if(!_2d(x))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!_2d(y))throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");if(!_2d(z))throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");var m=divideScalar(subtract(z[1],z[0]),subtract(y[1],y[0])),xCoeff=multiplyScalar(multiplyScalar(m,m),y[0]),yCoeff=unaryMinus(multiplyScalar(m,y[0])),constant=x[1];return _distancePointLine2D(x[0],x[1],xCoeff,yCoeff,constant)}throw new TypeError("Invalid Arguments: Try again")},"Object, Object, Object":function ObjectObjectObject(x,y,z){if(2===Object.keys(x).length&&2===Object.keys(y).length&&2===Object.keys(z).length){if(!_2d(x))throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");if(!_2d(y))throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers");if(!_2d(z))throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers");if("pointX"in x&&"pointY"in x&&"lineOnePtX"in y&&"lineOnePtY"in y&&"lineTwoPtX"in z&&"lineTwoPtY"in z){var m=divideScalar(subtract(z.lineTwoPtY,z.lineTwoPtX),subtract(y.lineOnePtY,y.lineOnePtX)),xCoeff=multiplyScalar(multiplyScalar(m,m),y.lineOnePtX),yCoeff=unaryMinus(multiplyScalar(m,y.lineOnePtX)),constant=x.pointX;return _distancePointLine2D(x.pointX,x.pointY,xCoeff,yCoeff,constant)}throw new TypeError("Key names do not match")}throw new TypeError("Invalid Arguments: Try again")},"Array, Array":function ArrayArray(x,y){if(2===x.length&&3===y.length){if(!_2d(x))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!_3d(y))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");return _distancePointLine2D(x[0],x[1],y[0],y[1],y[2])}if(3===x.length&&6===y.length){if(!_3d(x))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!_parametricLine(y))throw new TypeError("Array with 6 numbers or BigNumbers expected for second argument");return _distancePointLine3D(x[0],x[1],x[2],y[0],y[1],y[2],y[3],y[4],y[5])}if(x.length===y.length&&x.length>0){if(!_containsOnlyNumbers(x))throw new TypeError("All values of an array should be numbers or BigNumbers");if(!_containsOnlyNumbers(y))throw new TypeError("All values of an array should be numbers or BigNumbers");return _euclideanDistance(x,y)}throw new TypeError("Invalid Arguments: Try again")},"Object, Object":function ObjectObject(x,y){if(2===Object.keys(x).length&&3===Object.keys(y).length){if(!_2d(x))throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");if(!_3d(y))throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers");if("pointX"in x&&"pointY"in x&&"xCoeffLine"in y&&"yCoeffLine"in y&&"constant"in y)return _distancePointLine2D(x.pointX,x.pointY,y.xCoeffLine,y.yCoeffLine,y.constant);throw new TypeError("Key names do not match")}if(3===Object.keys(x).length&&6===Object.keys(y).length){if(!_3d(x))throw new TypeError("Values of pointX, pointY and pointZ should be numbers or BigNumbers");if(!_parametricLine(y))throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers or BigNumbers");if("pointX"in x&&"pointY"in x&&"x0"in y&&"y0"in y&&"z0"in y&&"a"in y&&"b"in y&&"c"in y)return _distancePointLine3D(x.pointX,x.pointY,x.pointZ,y.x0,y.y0,y.z0,y.a,y.b,y.c);throw new TypeError("Key names do not match")}if(2===Object.keys(x).length&&2===Object.keys(y).length){if(!_2d(x))throw new TypeError("Values of pointOneX and pointOneY should be numbers or BigNumbers");if(!_2d(y))throw new TypeError("Values of pointTwoX and pointTwoY should be numbers or BigNumbers");if("pointOneX"in x&&"pointOneY"in x&&"pointTwoX"in y&&"pointTwoY"in y)return _euclideanDistance([x.pointOneX,x.pointOneY],[y.pointTwoX,y.pointTwoY]);throw new TypeError("Key names do not match")}if(3===Object.keys(x).length&&3===Object.keys(y).length){if(!_3d(x))throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers");if(!_3d(y))throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers");if("pointOneX"in x&&"pointOneY"in x&&"pointOneZ"in x&&"pointTwoX"in y&&"pointTwoY"in y&&"pointTwoZ"in y)return _euclideanDistance([x.pointOneX,x.pointOneY,x.pointOneZ],[y.pointTwoX,y.pointTwoY,y.pointTwoZ]);throw new TypeError("Key names do not match")}throw new TypeError("Invalid Arguments: Try again")},Array:function Array(arr){if(!_pairwise(arr))throw new TypeError("Incorrect array format entered for pairwise distance calculation");return _distancePairwise(arr)}});function _isNumber(a){return"number"==typeof a||isBigNumber(a)}function _2d(a){return a.constructor!==Array&&(a=_objectToArray(a)),_isNumber(a[0])&&_isNumber(a[1])}function _3d(a){return a.constructor!==Array&&(a=_objectToArray(a)),_isNumber(a[0])&&_isNumber(a[1])&&_isNumber(a[2])}function _containsOnlyNumbers(a){return Array.isArray(a)||(a=_objectToArray(a)),a.every(_isNumber)}function _parametricLine(a){return a.constructor!==Array&&(a=_objectToArray(a)),_isNumber(a[0])&&_isNumber(a[1])&&_isNumber(a[2])&&_isNumber(a[3])&&_isNumber(a[4])&&_isNumber(a[5])}function _objectToArray(o){for(var keys=Object.keys(o),a=[],i=0;i<keys.length;i++)a.push(o[keys[i]]);return a}function _pairwise(a){if(2===a[0].length&&_isNumber(a[0][0])&&_isNumber(a[0][1])){if(a.some((function(aI){return 2!==aI.length||!_isNumber(aI[0])||!_isNumber(aI[1])})))return!1}else{if(!(3===a[0].length&&_isNumber(a[0][0])&&_isNumber(a[0][1])&&_isNumber(a[0][2])))return!1;if(a.some((function(aI){return 3!==aI.length||!_isNumber(aI[0])||!_isNumber(aI[1])||!_isNumber(aI[2])})))return!1}return!0}function _distancePointLine2D(x,y,a,b,c){var num=abs(addScalar(addScalar(multiplyScalar(a,x),multiplyScalar(b,y)),c)),den=sqrt(addScalar(multiplyScalar(a,a),multiplyScalar(b,b)));return divideScalar(num,den)}function _distancePointLine3D(x,y,z,x0,y0,z0,a,b,c){var num=[subtract(multiplyScalar(subtract(y0,y),c),multiplyScalar(subtract(z0,z),b)),subtract(multiplyScalar(subtract(z0,z),a),multiplyScalar(subtract(x0,x),c)),subtract(multiplyScalar(subtract(x0,x),b),multiplyScalar(subtract(y0,y),a))];num=sqrt(addScalar(addScalar(multiplyScalar(num[0],num[0]),multiplyScalar(num[1],num[1])),multiplyScalar(num[2],num[2])));var den=sqrt(addScalar(addScalar(multiplyScalar(a,a),multiplyScalar(b,b)),multiplyScalar(c,c)));return divideScalar(num,den)}function _euclideanDistance(x,y){for(var vectorSize=x.length,result=0,diff=0,i=0;i<vectorSize;i++)diff=subtract(x[i],y[i]),result=addScalar(multiplyScalar(diff,diff),result);return sqrt(result)}function _distancePairwise(a){for(var result=[],pointA=[],pointB=[],i=0;i<a.length-1;i++)for(var j=i+1;j<a.length;j++)2===a[0].length?(pointA=[a[i][0],a[i][1]],pointB=[a[j][0],a[j][1]]):3===a[0].length&&(pointA=[a[i][0],a[i][1],a[i][2]],pointB=[a[j][0],a[j][1],a[j][2]]),result.push(_euclideanDistance(pointA,pointB));return result}})),exports_9("createDistance",createDistance),createIntersect=factory(name$3y="intersect",dependencies$3z=["typed","config","abs","add","addScalar","matrix","multiply","multiplyScalar","divideScalar","subtract","smaller","equalScalar"],(function(_ref){var typed=_ref.typed,config=_ref.config,abs=_ref.abs,add=_ref.add,addScalar=_ref.addScalar,matrix=_ref.matrix,multiply=_ref.multiply,multiplyScalar=_ref.multiplyScalar,divideScalar=_ref.divideScalar,subtract=_ref.subtract,smaller=_ref.smaller,equalScalar=_ref.equalScalar;return typed("intersect",{"Array, Array, Array":function ArrayArrayArray(x,y,plane){if(!_3d(x))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!_3d(y))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");if(!_4d(plane))throw new TypeError("Array with 4 numbers expected as third argument");return _intersectLinePlane(x[0],x[1],x[2],y[0],y[1],y[2],plane[0],plane[1],plane[2],plane[3])},"Array, Array, Array, Array":function ArrayArrayArrayArray(w,x,y,z){if(2===w.length){if(!_2d(w))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!_2d(x))throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");if(!_2d(y))throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");if(!_2d(z))throw new TypeError("Array with 2 numbers or BigNumbers expected for fourth argument");return _intersect2d(w,x,y,z)}if(3===w.length){if(!_3d(w))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!_3d(x))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");if(!_3d(y))throw new TypeError("Array with 3 numbers or BigNumbers expected for third argument");if(!_3d(z))throw new TypeError("Array with 3 numbers or BigNumbers expected for fourth argument");return _intersect3d(w[0],w[1],w[2],x[0],x[1],x[2],y[0],y[1],y[2],z[0],z[1],z[2])}throw new TypeError("Arrays with two or thee dimensional points expected")},"Matrix, Matrix, Matrix":function MatrixMatrixMatrix(x,y,plane){return matrix(this(x.valueOf(),y.valueOf(),plane.valueOf()))},"Matrix, Matrix, Matrix, Matrix":function MatrixMatrixMatrixMatrix(w,x,y,z){return matrix(this(w.valueOf(),x.valueOf(),y.valueOf(),z.valueOf()))}});function _isNumeric(a){return"number"==typeof a||isBigNumber(a)}function _2d(x){return 2===x.length&&_isNumeric(x[0])&&_isNumeric(x[1])}function _3d(x){return 3===x.length&&_isNumeric(x[0])&&_isNumeric(x[1])&&_isNumeric(x[2])}function _4d(x){return 4===x.length&&_isNumeric(x[0])&&_isNumeric(x[1])&&_isNumeric(x[2])&&_isNumeric(x[3])}function _intersect2d(p1a,p1b,p2a,p2b){var o1=p1a,o2=p2a,d1=subtract(o1,p1b),d2=subtract(o2,p2b),det=subtract(multiplyScalar(d1[0],d2[1]),multiplyScalar(d2[0],d1[1]));if(smaller(abs(det),config.epsilon))return null;var d20o11=multiplyScalar(d2[0],o1[1]),d21o10=multiplyScalar(d2[1],o1[0]),d20o21=multiplyScalar(d2[0],o2[1]),d21o20=multiplyScalar(d2[1],o2[0]),t=divideScalar(addScalar(subtract(subtract(d20o11,d21o10),d20o21),d21o20),det);return add(multiply(d1,t),o1)}function _intersect3dHelper(a,b,c,d,e,f,g,h,i,j,k,l){var add1=multiplyScalar(subtract(a,b),subtract(c,d)),add2=multiplyScalar(subtract(e,f),subtract(g,h)),add3=multiplyScalar(subtract(i,j),subtract(k,l));return addScalar(addScalar(add1,add2),add3)}function _intersect3d(x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4){var d1343=_intersect3dHelper(x1,x3,x4,x3,y1,y3,y4,y3,z1,z3,z4,z3),d4321=_intersect3dHelper(x4,x3,x2,x1,y4,y3,y2,y1,z4,z3,z2,z1),d1321=_intersect3dHelper(x1,x3,x2,x1,y1,y3,y2,y1,z1,z3,z2,z1),d4343=_intersect3dHelper(x4,x3,x4,x3,y4,y3,y4,y3,z4,z3,z4,z3),d2121=_intersect3dHelper(x2,x1,x2,x1,y2,y1,y2,y1,z2,z1,z2,z1),ta=divideScalar(subtract(multiplyScalar(d1343,d4321),multiplyScalar(d1321,d4343)),subtract(multiplyScalar(d2121,d4343),multiplyScalar(d4321,d4321))),tb=divideScalar(addScalar(d1343,multiplyScalar(ta,d4321)),d4343),pax=addScalar(x1,multiplyScalar(ta,subtract(x2,x1))),pay=addScalar(y1,multiplyScalar(ta,subtract(y2,y1))),paz=addScalar(z1,multiplyScalar(ta,subtract(z2,z1))),pbx=addScalar(x3,multiplyScalar(tb,subtract(x4,x3))),pby=addScalar(y3,multiplyScalar(tb,subtract(y4,y3))),pbz=addScalar(z3,multiplyScalar(tb,subtract(z4,z3)));return equalScalar(pax,pbx)&&equalScalar(pay,pby)&&equalScalar(paz,pbz)?[pax,pay,paz]:null}function _intersectLinePlane(x1,y1,z1,x2,y2,z2,x,y,z,c){var x1x=multiplyScalar(x1,x),x2x=multiplyScalar(x2,x),y1y=multiplyScalar(y1,y),y2y=multiplyScalar(y2,y),z1z=multiplyScalar(z1,z),z2z=multiplyScalar(z2,z),t=divideScalar(subtract(subtract(subtract(c,x1x),y1y),z1z),subtract(subtract(subtract(addScalar(addScalar(x2x,y2y),z2z),x1x),y1y),z1z)),px,py,pz;return[addScalar(x1,multiplyScalar(t,subtract(x2,x1))),addScalar(y1,multiplyScalar(t,subtract(y2,y1))),addScalar(z1,multiplyScalar(t,subtract(z2,z1)))]}})),exports_9("createIntersect",createIntersect),name$3z="sum",createSum=factory("sum",dependencies$3A=["typed","config","add","numeric"],(function(_ref){var typed=_ref.typed,config=_ref.config,add=_ref.add,numeric=_ref.numeric;return typed("sum",{"Array | Matrix":_sum,"Array | Matrix, number | BigNumber":_nsumDim,"...":function _(args){if(containsCollections(args))throw new TypeError("Scalar values expected in function sum");return _sum(args)}});function _sum(array){var sum;return deepForEach(array,(function(value){try{sum=void 0===sum?value:add(sum,value)}catch(err){throw improveErrorMessage(err,"sum",value)}})),void 0===sum&&(sum=numeric(0,config.number)),"string"==typeof sum&&(sum=numeric(sum,config.number)),sum}function _nsumDim(array,dim){try{var sum;return reduce(array,dim,add)}catch(err){throw improveErrorMessage(err,"sum")}}})),exports_9("createSum",createSum),name$3A="mean",createMean=factory("mean",dependencies$3B=["typed","add","divide"],(function(_ref){var typed=_ref.typed,add=_ref.add,divide=_ref.divide;return typed("mean",{"Array | Matrix":_mean,"Array | Matrix, number | BigNumber":_nmeanDim,"...":function _(args){if(containsCollections(args))throw new TypeError("Scalar values expected in function mean");return _mean(args)}});function _nmeanDim(array,dim){try{var sum=reduce(array,dim,add),s=Array.isArray(array)?arraySize(array):array.size();return divide(sum,s[dim])}catch(err){throw improveErrorMessage(err,"mean")}}function _mean(array){var sum,num=0;if(deepForEach(array,(function(value){try{sum=void 0===sum?value:add(sum,value),num++}catch(err){throw improveErrorMessage(err,"mean",value)}})),0===num)throw new Error("Cannot calculate the mean of an empty array");return divide(sum,num)}})),exports_9("createMean",createMean),createMedian=factory(name$3B="median",dependencies$3C=["typed","add","divide","compare","partitionSelect"],(function(_ref){var typed=_ref.typed,add=_ref.add,divide=_ref.divide,compare=_ref.compare,partitionSelect=_ref.partitionSelect;function _median(array){try{var num=(array=flatten(array.valueOf())).length;if(0===num)throw new Error("Cannot calculate median of an empty array");if(num%2==0){for(var mid=num/2-1,right=partitionSelect(array,mid+1),left=array[mid],i=0;i<mid;++i)compare(array[i],left)>0&&(left=array[i]);return middle2(left,right)}var m=partitionSelect(array,(num-1)/2);return middle(m)}catch(err){throw improveErrorMessage(err,"median")}}var middle=typed({"number | BigNumber | Complex | Unit":function numberBigNumberComplexUnit(value){return value}}),middle2=typed({"number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit":function numberBigNumberComplexUnitNumberBigNumberComplexUnit(left,right){return divide(add(left,right),2)}});return typed(name$3B,{"Array | Matrix":_median,"Array | Matrix, number | BigNumber":function ArrayMatrixNumberBigNumber(array,dim){throw new Error("median(A, dim) is not yet supported")},"...":function _(args){if(containsCollections(args))throw new TypeError("Scalar values expected in function median");return _median(args)}})})),exports_9("createMedian",createMedian),name$3C="mad",createMad=factory("mad",dependencies$3D=["typed","abs","map","median","subtract"],(function(_ref){var typed=_ref.typed,abs=_ref.abs,map=_ref.map,median=_ref.median,subtract=_ref.subtract;return typed("mad",{"Array | Matrix":_mad,"...":function _(args){return _mad(args)}});function _mad(array){if(0===(array=flatten(array.valueOf())).length)throw new Error("Cannot calculate median absolute deviation (mad) of an empty array");try{var med=median(array);return median(map(array,(function(value){return abs(subtract(value,med))})))}catch(err){throw err instanceof TypeError&&-1!==err.message.indexOf("median")?new TypeError(err.message.replace("median","mad")):improveErrorMessage(err,"mad")}}})),exports_9("createMad",createMad),DEFAULT_NORMALIZATION="unbiased",createVariance=factory(name$3D="variance",dependencies$3E=["typed","add","subtract","multiply","divide","apply","isNaN"],(function(_ref){var typed=_ref.typed,add=_ref.add,subtract=_ref.subtract,multiply=_ref.multiply,divide=_ref.divide,apply=_ref.apply,isNaN=_ref.isNaN;return typed(name$3D,{"Array | Matrix":function ArrayMatrix(array){return _var(array,"unbiased")},"Array | Matrix, string":_var,"Array | Matrix, number | BigNumber":function ArrayMatrixNumberBigNumber(array,dim){return _varDim(array,dim,"unbiased")},"Array | Matrix, number | BigNumber, string":_varDim,"...":function _(args){return _var(args,"unbiased")}});function _var(array,normalization){var sum=0,num=0;if(0===array.length)throw new SyntaxError("Function variance requires one or more parameters (0 provided)");if(deepForEach(array,(function(value){try{sum=add(sum,value),num++}catch(err){throw improveErrorMessage(err,"variance",value)}})),0===num)throw new Error("Cannot calculate variance of an empty array");var mean=divide(sum,num);if(sum=0,deepForEach(array,(function(value){var diff=subtract(value,mean);sum=add(sum,multiply(diff,diff))})),isNaN(sum))return sum;switch(normalization){case"uncorrected":return divide(sum,num);case"biased":return divide(sum,num+1);case"unbiased":var zero=isBigNumber(sum)?sum.mul(0):0;return 1===num?zero:divide(sum,num-1);default:throw new Error('Unknown normalization "'+normalization+'". Choose "unbiased" (default), "uncorrected", or "biased".')}}function _varDim(array,dim,normalization){try{if(0===array.length)throw new SyntaxError("Function variance requires one or more parameters (0 provided)");return apply(array,dim,(function(x){return _var(x,normalization)}))}catch(err){throw improveErrorMessage(err,"variance")}}})),exports_9("createVariance",createVariance),createQuantileSeq=factory(name$3E="quantileSeq",dependencies$3F=["typed","add","multiply","partitionSelect","compare"],(function(_ref){var typed=_ref.typed,add=_ref.add,multiply=_ref.multiply,partitionSelect=_ref.partitionSelect,compare=_ref.compare;function quantileSeq(data,probOrN,sorted){var probArr,dataArr,one;if(arguments.length<2||arguments.length>3)throw new SyntaxError("Function quantileSeq requires two or three parameters");if(isCollection(data)){if("boolean"==typeof(sorted=sorted||!1)){if(dataArr=data.valueOf(),isNumber(probOrN)){if(probOrN<0)throw new Error("N/prob must be non-negative");if(probOrN<=1)return _quantileSeq(dataArr,probOrN,sorted);if(probOrN>1){if(!isInteger(probOrN))throw new Error("N must be a positive integer");var nPlusOne=probOrN+1;probArr=new Array(probOrN);for(var i=0;i<probOrN;)probArr[i]=_quantileSeq(dataArr,++i/nPlusOne,sorted);return probArr}}if(isBigNumber(probOrN)){var BigNumber=probOrN.constructor;if(probOrN.isNegative())throw new Error("N/prob must be non-negative");if(one=new BigNumber(1),probOrN.lte(one))return new BigNumber(_quantileSeq(dataArr,probOrN,sorted));if(probOrN.gt(one)){if(!probOrN.isInteger())throw new Error("N must be a positive integer");var intN=probOrN.toNumber();if(intN>4294967295)throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");var _nPlusOne=new BigNumber(intN+1);probArr=new Array(intN);for(var _i=0;_i<intN;)probArr[_i]=new BigNumber(_quantileSeq(dataArr,new BigNumber(++_i).div(_nPlusOne),sorted));return probArr}}if(Array.isArray(probOrN)){probArr=new Array(probOrN.length);for(var _i2=0;_i2<probArr.length;++_i2){var currProb=probOrN[_i2];if(isNumber(currProb)){if(currProb<0||currProb>1)throw new Error("Probability must be between 0 and 1, inclusive")}else{if(!isBigNumber(currProb))throw new TypeError("Unexpected type of argument in function quantileSeq");if(one=new currProb.constructor(1),currProb.isNegative()||currProb.gt(one))throw new Error("Probability must be between 0 and 1, inclusive")}probArr[_i2]=_quantileSeq(dataArr,currProb,sorted)}return probArr}throw new TypeError("Unexpected type of argument in function quantileSeq")}throw new TypeError("Unexpected type of argument in function quantileSeq")}throw new TypeError("Unexpected type of argument in function quantileSeq")}function _quantileSeq(array,prob,sorted){var flat=flatten(array),len=flat.length;if(0===len)throw new Error("Cannot calculate quantile of an empty sequence");if(isNumber(prob)){var _index=prob*(len-1),_fracPart=_index%1;if(0===_fracPart){var value=sorted?flat[_index]:partitionSelect(flat,_index);return validate(value),value}var _integerPart=Math.floor(_index),_left,_right;if(sorted)_left=flat[_integerPart],_right=flat[_integerPart+1];else{_right=partitionSelect(flat,_integerPart+1),_left=flat[_integerPart];for(var i=0;i<_integerPart;++i)compare(flat[i],_left)>0&&(_left=flat[i])}return validate(_left),validate(_right),add(multiply(_left,1-_fracPart),multiply(_right,_fracPart))}var index=prob.times(len-1);if(index.isInteger()){index=index.toNumber();var _value=sorted?flat[index]:partitionSelect(flat,index);return validate(_value),_value}var integerPart=index.floor(),fracPart=index.minus(integerPart),integerPartNumber=integerPart.toNumber(),left,right;if(sorted)left=flat[integerPartNumber],right=flat[integerPartNumber+1];else{right=partitionSelect(flat,integerPartNumber+1),left=flat[integerPartNumber];for(var _i3=0;_i3<integerPartNumber;++_i3)compare(flat[_i3],left)>0&&(left=flat[_i3])}validate(left),validate(right);var one=new fracPart.constructor(1);return add(multiply(left,one.minus(fracPart)),multiply(right,fracPart))}var validate=typed({"number | BigNumber | Unit":function numberBigNumberUnit(x){return x}});return quantileSeq})),exports_9("createQuantileSeq",createQuantileSeq),name$3F="std",createStd=factory("std",dependencies$3G=["typed","sqrt","variance"],(function(_ref){var typed=_ref.typed,sqrt=_ref.sqrt,variance=_ref.variance;return typed("std",{"Array | Matrix":_std,"Array | Matrix, string":_std,"Array | Matrix, number | BigNumber":_std,"Array | Matrix, number | BigNumber, string":_std,"...":function _(args){return _std(args)}});function _std(array,normalization){if(0===array.length)throw new SyntaxError("Function std requires one or more parameters (0 provided)");try{return sqrt(variance.apply(null,arguments))}catch(err){throw err instanceof TypeError&&-1!==err.message.indexOf(" variance")?new TypeError(err.message.replace(" variance"," std")):err}}})),exports_9("createStd",createStd),createCombinations=factory(name$3G="combinations",dependencies$3H=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$3G,{"number, number":combinationsNumber,"BigNumber, BigNumber":function BigNumberBigNumber(n,k){var BigNumber=n.constructor,result,i,nMinusk=n.minus(k),one=new BigNumber(1);if(!isPositiveInteger(n)||!isPositiveInteger(k))throw new TypeError("Positive integer value expected in function combinations");if(k.gt(n))throw new TypeError("k must be less than n in function combinations");if(result=one,k.lt(nMinusk))for(i=one;i.lte(nMinusk);i=i.plus(one))result=result.times(k.plus(i)).dividedBy(i);else for(i=one;i.lte(k);i=i.plus(one))result=result.times(nMinusk.plus(i)).dividedBy(i);return result}})})),exports_9("createCombinations",createCombinations),createCombinationsWithRep=factory(name$3H="combinationsWithRep",dependencies$3I=["typed"],(function(_ref){var typed;return(0,_ref.typed)(name$3H,{"number, number":function numberNumber(n,k){if(!isInteger(n)||n<0)throw new TypeError("Positive integer value expected in function combinationsWithRep");if(!isInteger(k)||k<0)throw new TypeError("Positive integer value expected in function combinationsWithRep");if(n<1)throw new TypeError("k must be less than or equal to n + k - 1");var _prodrange,prodrange;return k<n-1?product(n,n+k-1)/product(1,k):product(k+1,n+k-1)/product(1,n-1)},"BigNumber, BigNumber":function BigNumberBigNumber(n,k){var BigNumber,result,i,one=new(0,n.constructor)(1),nMinusOne=n.minus(one);if(!isPositiveInteger$1(n)||!isPositiveInteger$1(k))throw new TypeError("Positive integer value expected in function combinationsWithRep");if(n.lt(one))throw new TypeError("k must be less than or equal to n + k - 1 in function combinationsWithRep");if(result=one,k.lt(nMinusOne))for(i=one;i.lte(nMinusOne);i=i.plus(one))result=result.times(k.plus(i)).dividedBy(i);else for(i=one;i.lte(k);i=i.plus(one))result=result.times(nMinusOne.plus(i)).dividedBy(i);return result}})})),exports_9("createCombinationsWithRep",createCombinationsWithRep),name$3I="gamma",createGamma=factory("gamma",dependencies$3J=["typed","config","multiplyScalar","pow","BigNumber","Complex"],(function(_ref){var typed=_ref.typed,config=_ref.config,multiplyScalar=_ref.multiplyScalar,pow=_ref.pow,_BigNumber=_ref.BigNumber,_Complex=_ref.Complex;return typed("gamma",{number:gammaNumber,Complex:function Complex(n){if(0===n.im)return this(n.re);n=new _Complex(n.re-1,n.im);for(var x=new _Complex(gammaP[0],0),i=1;i<gammaP.length;++i){var real=n.re+i,den=real*real+n.im*n.im;0!==den?(x.re+=gammaP[i]*real/den,x.im+=-gammaP[i]*n.im/den):x.re=gammaP[i]<0?-1/0:1/0}var t=new _Complex(n.re+gammaG+.5,n.im),twoPiSqrt=Math.sqrt(2*Math.PI);n.re+=.5;var result=pow(t,n);0===result.im?result.re*=twoPiSqrt:0===result.re?result.im*=twoPiSqrt:(result.re*=twoPiSqrt,result.im*=twoPiSqrt);var r=Math.exp(-t.re);return t.re=r*Math.cos(-t.im),t.im=r*Math.sin(-t.im),multiplyScalar(multiplyScalar(result,t),x)},BigNumber:function BigNumber(n){if(n.isInteger())return n.isNegative()||n.isZero()?new _BigNumber(1/0):bigFactorial(n.minus(1));if(!n.isFinite())return new _BigNumber(n.isNegative()?NaN:1/0);throw new Error("Integer BigNumber expected")},"Array | Matrix":function ArrayMatrix(n){return deepMap(n,this)}});function bigFactorial(n){if(n<8)return new _BigNumber([1,1,2,6,24,120,720,5040][n]);var precision=config.precision+(0|Math.log(n.toNumber())),Big=_BigNumber.clone({precision:precision});if(n%2==1)return n.times(bigFactorial(new _BigNumber(n-1)));for(var p=n,prod=new Big(n),sum=n.toNumber();p>2;)sum+=p-=2,prod=prod.times(sum);return new _BigNumber(prod.toPrecision(_BigNumber.precision))}})),exports_9("createGamma",createGamma),createFactorial=factory(name$3J="factorial",dependencies$3K=["typed","gamma"],(function(_ref){var typed=_ref.typed,gamma=_ref.gamma;return typed(name$3J,{number:function number(n){if(n<0)throw new Error("Value must be non-negative");return gamma(n+1)},BigNumber:function BigNumber(n){if(n.isNegative())throw new Error("Value must be non-negative");return gamma(n.plus(1))},"Array | Matrix":function ArrayMatrix(n){return deepMap(n,this)}})})),exports_9("createFactorial",createFactorial),createKldivergence=factory(name$3K="kldivergence",dependencies$3L=["typed","matrix","divide","sum","multiply","dotDivide","log","isNumeric"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,divide=_ref.divide,sum=_ref.sum,multiply=_ref.multiply,dotDivide=_ref.dotDivide,log=_ref.log,isNumeric=_ref.isNumeric;return typed(name$3K,{"Array, Array":function ArrayArray(q,p){return _kldiv(matrix(q),matrix(p))},"Matrix, Array":function MatrixArray(q,p){return _kldiv(q,matrix(p))},"Array, Matrix":function ArrayMatrix(q,p){return _kldiv(matrix(q),p)},"Matrix, Matrix":function MatrixMatrix(q,p){return _kldiv(q,p)}});function _kldiv(q,p){var plength=p.size().length,qlength=q.size().length,sumq,sump;if(plength>1)throw new Error("first object must be one dimensional");if(qlength>1)throw new Error("second object must be one dimensional");if(plength!==qlength)throw new Error("Length of two vectors must be equal");if(0===sum(q))throw new Error("Sum of elements in first object must be non zero");if(0===sum(p))throw new Error("Sum of elements in second object must be non zero");var qnorm=divide(q,sum(q)),pnorm=divide(p,sum(p)),result=sum(multiply(qnorm,log(dotDivide(qnorm,pnorm))));return isNumeric(result)?result:Number.NaN}})),exports_9("createKldivergence",createKldivergence),createMultinomial=factory(name$3L="multinomial",dependencies$3M=["typed","add","divide","multiply","factorial","isInteger","isPositive"],(function(_ref){var typed=_ref.typed,add=_ref.add,divide=_ref.divide,multiply=_ref.multiply,factorial=_ref.factorial,isInteger=_ref.isInteger,isPositive=_ref.isPositive;return typed(name$3L,{"Array | Matrix":function ArrayMatrix(a){var sum=0,denom=1;return deepForEach(a,(function(ai){if(!isInteger(ai)||!isPositive(ai))throw new TypeError("Positive integer value expected in function multinomial");sum=add(sum,ai),denom=multiply(denom,factorial(ai))})),divide(factorial(sum),denom)}})})),exports_9("createMultinomial",createMultinomial),createPermutations=factory(name$3M="permutations",dependencies$3N=["typed","factorial"],(function(_ref){var typed=_ref.typed,factorial=_ref.factorial;return typed(name$3M,{"number | BigNumber":factorial,"number, number":function numberNumber(n,k){if(!isInteger(n)||n<0)throw new TypeError("Positive integer value expected in function permutations");if(!isInteger(k)||k<0)throw new TypeError("Positive integer value expected in function permutations");if(k>n)throw new TypeError("second argument k must be less than or equal to first argument n");return product(n-k+1,n)},"BigNumber, BigNumber":function BigNumberBigNumber(n,k){var result,i,one;if(!isPositiveInteger$2(n)||!isPositiveInteger$2(k))throw new TypeError("Positive integer value expected in function permutations");if(k.gt(n))throw new TypeError("second argument k must be less than or equal to first argument n");for(result=n.mul(0).add(1),i=n.minus(k).plus(1);i.lte(n);i=i.plus(1))result=result.times(i);return result}})})),exports_9("createPermutations",createPermutations),singletonRandom=seed_random_js_1.default(),createPickRandom=factory(name$3N="pickRandom",dependencies$3O=["typed","config","?on"],(function(_ref){var typed=_ref.typed,config=_ref.config,on=_ref.on,rng=createRng(config.randomSeed);return on&&on("config",(function(curr,prev){curr.randomSeed!==prev.randomSeed&&(rng=createRng(curr.randomSeed))})),typed({"Array | Matrix":function ArrayMatrix(possibles){return _pickRandom(possibles)},"Array | Matrix, number":function ArrayMatrixNumber(possibles,number){return _pickRandom(possibles,number,void 0)},"Array | Matrix, Array":function ArrayMatrixArray(possibles,weights){return _pickRandom(possibles,void 0,weights)},"Array | Matrix, Array | Matrix, number":function ArrayMatrixArrayMatrixNumber(possibles,weights,number){return _pickRandom(possibles,number,weights)},"Array | Matrix, number, Array | Matrix":function ArrayMatrixNumberArrayMatrix(possibles,number,weights){return _pickRandom(possibles,number,weights)}});function _pickRandom(possibles,number,weights){var single=void 0===number;if(single&&(number=1),possibles=possibles.valueOf(),weights&&(weights=weights.valueOf()),arraySize(possibles).length>1)throw new Error("Only one dimensional vectors supported");var totalWeights=0;if(void 0!==weights){if(weights.length!==possibles.length)throw new Error("Weights must have the same length as possibles");for(var i=0,len=weights.length;i<len;i++){if(!isNumber(weights[i])||weights[i]<0)throw new Error("Weights must be an array of positive numbers");totalWeights+=weights[i]}}var length=possibles.length;if(0===length)return[];if(number>=length)return number>1?possibles:possibles[0];for(var result=[],pick;result.length<number;){if(void 0===weights)pick=possibles[Math.floor(rng()*length)];else for(var randKey=rng()*totalWeights,_i=0,_len=possibles.length;_i<_len;_i++)if((randKey-=weights[_i])<0){pick=possibles[_i];break}-1===result.indexOf(pick)&&result.push(pick)}return single?result[0]:result}})),exports_9("createPickRandom",createPickRandom),createRandom=factory(name$3O="random",dependencies$3P=["typed","config","?on"],(function(_ref){var typed=_ref.typed,config=_ref.config,on=_ref.on,rng=createRng(config.randomSeed);return on&&on("config",(function(curr,prev){curr.randomSeed!==prev.randomSeed&&(rng=createRng(curr.randomSeed))})),typed(name$3O,{"":function _(){return _random(0,1)},number:function number(max){return _random(0,max)},"number, number":function numberNumber(min,max){return _random(min,max)},"Array | Matrix":function ArrayMatrix(size){return _randomMatrix(size,0,1)},"Array | Matrix, number":function ArrayMatrixNumber(size,max){return _randomMatrix(size,0,max)},"Array | Matrix, number, number":function ArrayMatrixNumberNumber(size,min,max){return _randomMatrix(size,min,max)}});function _randomMatrix(size,min,max){var res=randomMatrix(size.valueOf(),(function(){return _random(min,max)}));return isMatrix(size)?size.create(res):res}function _random(min,max){return min+rng()*(max-min)}})),exports_9("createRandom",createRandom),createRandomInt=factory(name$3P="randomInt",dependencies$3Q=["typed","config","?on"],(function(_ref){var typed=_ref.typed,config=_ref.config,on=_ref.on,rng=createRng(config.randomSeed);return on&&on("config",(function(curr,prev){curr.randomSeed!==prev.randomSeed&&(rng=createRng(curr.randomSeed))})),typed(name$3P,{"":function _(){return _randomInt(0,1)},number:function number(max){return _randomInt(0,max)},"number, number":function numberNumber(min,max){return _randomInt(min,max)},"Array | Matrix":function ArrayMatrix(size){return _randomIntMatrix(size,0,1)},"Array | Matrix, number":function ArrayMatrixNumber(size,max){return _randomIntMatrix(size,0,max)},"Array | Matrix, number, number":function ArrayMatrixNumberNumber(size,min,max){return _randomIntMatrix(size,min,max)}});function _randomIntMatrix(size,min,max){var res=randomMatrix(size.valueOf(),(function(){return _randomInt(min,max)}));return isMatrix(size)?size.create(res):res}function _randomInt(min,max){return Math.floor(min+rng()*(max-min))}})),exports_9("createRandomInt",createRandomInt),createStirlingS2=factory(name$3Q="stirlingS2",dependencies$3R=["typed","addScalar","subtract","multiplyScalar","divideScalar","pow","factorial","combinations","isNegative","isInteger","larger"],(function(_ref){var typed=_ref.typed,addScalar=_ref.addScalar,subtract=_ref.subtract,multiplyScalar=_ref.multiplyScalar,divideScalar=_ref.divideScalar,pow=_ref.pow,factorial=_ref.factorial,combinations=_ref.combinations,isNegative=_ref.isNegative,isInteger=_ref.isInteger,larger=_ref.larger;return typed(name$3Q,{"number | BigNumber, number | BigNumber":function numberBigNumberNumberBigNumber(n,k){if(!isInteger(n)||isNegative(n)||!isInteger(k)||isNegative(k))throw new TypeError("Non-negative integer value expected in function stirlingS2");if(larger(k,n))throw new TypeError("k must be less than or equal to n in function stirlingS2");for(var kFactorial=factorial(k),result=0,i=0;i<=k;i++){var negativeOne=pow(-1,subtract(k,i)),kChooseI=combinations(k,i),iPower=pow(i,n);result=addScalar(result,multiplyScalar(multiplyScalar(kChooseI,iPower),negativeOne))}return divideScalar(result,kFactorial)}})})),exports_9("createStirlingS2",createStirlingS2),createBellNumbers=factory(name$3R="bellNumbers",dependencies$3S=["typed","addScalar","isNegative","isInteger","stirlingS2"],(function(_ref){var typed=_ref.typed,addScalar=_ref.addScalar,isNegative=_ref.isNegative,isInteger=_ref.isInteger,stirlingS2=_ref.stirlingS2;return typed(name$3R,{"number | BigNumber":function numberBigNumber(n){if(!isInteger(n)||isNegative(n))throw new TypeError("Non-negative integer value expected in function bellNumbers");for(var result=0,i=0;i<=n;i++)result=addScalar(result,stirlingS2(n,i));return result}})})),exports_9("createBellNumbers",createBellNumbers),createCatalan=factory(name$3S="catalan",dependencies$3T=["typed","addScalar","divideScalar","multiplyScalar","combinations","isNegative","isInteger"],(function(_ref){var typed=_ref.typed,addScalar=_ref.addScalar,divideScalar=_ref.divideScalar,multiplyScalar=_ref.multiplyScalar,combinations=_ref.combinations,isNegative=_ref.isNegative,isInteger=_ref.isInteger;return typed(name$3S,{"number | BigNumber":function numberBigNumber(n){if(!isInteger(n)||isNegative(n))throw new TypeError("Non-negative integer value expected in function catalan");return divideScalar(combinations(multiplyScalar(n,2),n),addScalar(n,1))}})})),exports_9("createCatalan",createCatalan),createComposition=factory(name$3T="composition",dependencies$3U=["typed","addScalar","combinations","isNegative","isPositive","isInteger","larger"],(function(_ref){var typed=_ref.typed,addScalar=_ref.addScalar,combinations=_ref.combinations,isPositive=_ref.isPositive,isNegative=_ref.isNegative,isInteger=_ref.isInteger,larger=_ref.larger;return typed(name$3T,{"number | BigNumber, number | BigNumber":function numberBigNumberNumberBigNumber(n,k){if(!(isInteger(n)&&isPositive(n)&&isInteger(k)&&isPositive(k)))throw new TypeError("Positive integer value expected in function composition");if(larger(k,n))throw new TypeError("k must be less than or equal to n in function composition");return combinations(addScalar(n,-1),addScalar(k,-1))}})})),exports_9("createComposition",createComposition),createUtil=factory(name$3U="simplifyUtil",dependencies$3V=["FunctionNode","OperatorNode","SymbolNode"],(function(_ref){var FunctionNode=_ref.FunctionNode,OperatorNode=_ref.OperatorNode,SymbolNode=_ref.SymbolNode,commutative={add:!0,multiply:!0},associative={add:!0,multiply:!0};function isCommutative(node,context){if(!isOperatorNode(node))return!0;var name=node.fn.toString();return context&&hasOwnProperty(context,name)&&hasOwnProperty(context[name],"commutative")?context[name].commutative:commutative[name]||!1}function isAssociative(node,context){if(!isOperatorNode(node))return!1;var name=node.fn.toString();return context&&hasOwnProperty(context,name)&&hasOwnProperty(context[name],"associative")?context[name].associative:associative[name]||!1}function flatten(node){if(!node.args||0===node.args.length)return node;node.args=allChildren(node);for(var i=0;i<node.args.length;i++)flatten(node.args[i])}function allChildren(node){var op,children=[],findChildren=function findChildren(node){for(var i=0;i<node.args.length;i++){var child=node.args[i];isOperatorNode(child)&&op===child.op?findChildren(child):children.push(child)}};return isAssociative(node)?(op=node.op,findChildren(node),children):node.args}function unflattenr(node){if(node.args&&0!==node.args.length){for(var makeNode=createMakeNodeFunction(node),l=node.args.length,i=0;i<l;i++)unflattenr(node.args[i]);if(l>2&&isAssociative(node)){for(var curnode=node.args.pop();node.args.length>0;)curnode=makeNode([node.args.pop(),curnode]);node.args=curnode.args}}}function unflattenl(node){if(node.args&&0!==node.args.length){for(var makeNode=createMakeNodeFunction(node),l=node.args.length,i=0;i<l;i++)unflattenl(node.args[i]);if(l>2&&isAssociative(node)){for(var curnode=node.args.shift();node.args.length>0;)curnode=makeNode([curnode,node.args.shift()]);node.args=curnode.args}}}function createMakeNodeFunction(node){return isOperatorNode(node)?function(args){try{return new OperatorNode(node.op,node.fn,args,node.implicit)}catch(err){return console.error(err),[]}}:function(args){return new FunctionNode(new SymbolNode(node.name),args)}}return{createMakeNodeFunction:createMakeNodeFunction,isCommutative:isCommutative,isAssociative:isAssociative,flatten:flatten,allChildren:allChildren,unflattenr:unflattenr,unflattenl:unflattenl}})),createSimplifyCore=factory(name$3V="simplifyCore",dependencies$3W=["equal","isZero","add","subtract","multiply","divide","pow","ConstantNode","OperatorNode","FunctionNode","ParenthesisNode"],(function(_ref){var equal=_ref.equal,isZero=_ref.isZero,add=_ref.add,subtract=_ref.subtract,multiply=_ref.multiply,divide=_ref.divide,pow=_ref.pow,ConstantNode=_ref.ConstantNode,OperatorNode=_ref.OperatorNode,FunctionNode=_ref.FunctionNode,ParenthesisNode=_ref.ParenthesisNode,node0=new ConstantNode(0),node1=new ConstantNode(1);function simplifyCore(node){if(isOperatorNode(node)&&node.isUnary()){var a0=simplifyCore(node.args[0]);if("+"===node.op)return a0;if("-"===node.op){if(isOperatorNode(a0)){if(a0.isUnary()&&"-"===a0.op)return a0.args[0];if(a0.isBinary()&&"subtract"===a0.fn)return new OperatorNode("-","subtract",[a0.args[1],a0.args[0]])}return new OperatorNode(node.op,node.fn,[a0])}}else if(isOperatorNode(node)&&node.isBinary()){var _a=simplifyCore(node.args[0]),a1=simplifyCore(node.args[1]);if("+"===node.op){if(isConstantNode(_a)){if(isZero(_a.value))return a1;if(isConstantNode(a1))return new ConstantNode(add(_a.value,a1.value))}return isConstantNode(a1)&&isZero(a1.value)?_a:isOperatorNode(a1)&&a1.isUnary()&&"-"===a1.op?new OperatorNode("-","subtract",[_a,a1.args[0]]):new OperatorNode(node.op,node.fn,a1?[_a,a1]:[_a])}if("-"===node.op){if(isConstantNode(_a)&&a1){if(isConstantNode(a1))return new ConstantNode(subtract(_a.value,a1.value));if(isZero(_a.value))return new OperatorNode("-","unaryMinus",[a1])}if("subtract"===node.fn)return isConstantNode(a1)&&isZero(a1.value)?_a:isOperatorNode(a1)&&a1.isUnary()&&"-"===a1.op?simplifyCore(new OperatorNode("+","add",[_a,a1.args[0]])):new OperatorNode(node.op,node.fn,[_a,a1])}else{if("*"===node.op){if(isConstantNode(_a)){if(isZero(_a.value))return node0;if(equal(_a.value,1))return a1;if(isConstantNode(a1))return new ConstantNode(multiply(_a.value,a1.value))}if(isConstantNode(a1)){if(isZero(a1.value))return node0;if(equal(a1.value,1))return _a;if(isOperatorNode(_a)&&_a.isBinary()&&_a.op===node.op){var a00=_a.args[0];if(isConstantNode(a00)){var a00a1=new ConstantNode(multiply(a00.value,a1.value));return new OperatorNode(node.op,node.fn,[a00a1,_a.args[1]],node.implicit)}}return new OperatorNode(node.op,node.fn,[a1,_a],node.implicit)}return new OperatorNode(node.op,node.fn,[_a,a1],node.implicit)}if("/"===node.op){if(isConstantNode(_a)){if(isZero(_a.value))return node0;if(isConstantNode(a1)&&(equal(a1.value,1)||equal(a1.value,2)||equal(a1.value,4)))return new ConstantNode(divide(_a.value,a1.value))}return new OperatorNode(node.op,node.fn,[_a,a1])}if("^"===node.op){if(isConstantNode(a1)){if(isZero(a1.value))return node1;if(equal(a1.value,1))return _a;if(isConstantNode(_a))return new ConstantNode(pow(_a.value,a1.value));if(isOperatorNode(_a)&&_a.isBinary()&&"^"===_a.op){var a01=_a.args[1];if(isConstantNode(a01))return new OperatorNode(node.op,node.fn,[_a.args[0],new ConstantNode(multiply(a01.value,a1.value))])}}return new OperatorNode(node.op,node.fn,[_a,a1])}}}else{if(isParenthesisNode(node)){var c=simplifyCore(node.content);return isParenthesisNode(c)||isSymbolNode(c)||isConstantNode(c)?c:new ParenthesisNode(c)}if(isFunctionNode(node)){var args=node.args.map(simplifyCore).map((function(arg){return isParenthesisNode(arg)?arg.content:arg}));return new FunctionNode(simplifyCore(node.fn),args)}}return node}return simplifyCore})),createSimplifyConstant=factory(name$3W="simplifyConstant",dependencies$3X=["typed","config","mathWithTransform","?fraction","?bignumber","ConstantNode","OperatorNode","FunctionNode","SymbolNode"],(function(_ref){var typed=_ref.typed,config=_ref.config,mathWithTransform=_ref.mathWithTransform,fraction=_ref.fraction,bignumber=_ref.bignumber,ConstantNode=_ref.ConstantNode,OperatorNode=_ref.OperatorNode,FunctionNode=_ref.FunctionNode,SymbolNode=_ref.SymbolNode,_createUtil=createUtil({FunctionNode:FunctionNode,OperatorNode:OperatorNode,SymbolNode:SymbolNode}),isCommutative=_createUtil.isCommutative,isAssociative=_createUtil.isAssociative,allChildren=_createUtil.allChildren,createMakeNodeFunction=_createUtil.createMakeNodeFunction;function simplifyConstant(expr,options){var res=foldFraction(expr,options);return isNode(res)?res:_toNode(res)}function _eval(fnname,args,options){try{return _toNumber(mathWithTransform[fnname].apply(null,args),options)}catch(ignore){return args=args.map((function(x){return isFraction(x)?x.valueOf():x})),_toNumber(mathWithTransform[fnname].apply(null,args),options)}}var _toNode=typed({Fraction:_fractionToNode,number:function number(n){return n<0?unaryMinusNode(new ConstantNode(-n)):new ConstantNode(n)},BigNumber:function BigNumber(n){return n<0?unaryMinusNode(new ConstantNode(-n)):new ConstantNode(n)},Complex:function Complex(s){throw new Error("Cannot convert Complex number to Node")}});function _exactFraction(n,options){var exactFractions;if(options&&!1!==options.exactFractions&&isFinite(n)&&fraction){var f=fraction(n);if(f.valueOf()===n)return f}return n}var _toNumber=typed({"string, Object":function stringObject(s,options){return"BigNumber"===config.number?(void 0===bignumber&&noBignumber(),bignumber(s)):"Fraction"===config.number?(void 0===fraction&&noFraction(),fraction(s)):_exactFraction(parseFloat(s),options);var n},"Fraction, Object":function FractionObject(s,options){return s},"BigNumber, Object":function BigNumberObject(s,options){return s},"number, Object":function numberObject(s,options){return _exactFraction(s,options)},"Complex, Object":function ComplexObject(s,options){return 0!==s.im?s:_exactFraction(s.re,options)}});function unaryMinusNode(n){return new OperatorNode("-","unaryMinus",[n])}function _fractionToNode(f){var n,vn=f.s*f.n;return n=vn<0?new OperatorNode("-","unaryMinus",[new ConstantNode(-vn)]):new ConstantNode(vn),1===f.d?n:new OperatorNode("/","divide",[n,new ConstantNode(f.d)])}function foldOp(fn,args,makeNode,options){return args.reduce((function(a,b){if(isNode(a)||isNode(b))isNode(a)?isNode(b)||(b=_toNode(b)):a=_toNode(a);else{try{return _eval(fn,[a,b],options)}catch(ignoreandcontinue){}a=_toNode(a),b=_toNode(b)}return makeNode([a,b])}))}function foldFraction(node,options){switch(node.type){case"SymbolNode":return node;case"ConstantNode":return"number"!=typeof node.value&&isNaN(node.value)?node:_toNumber(node.value,options);case"FunctionNode":if(mathWithTransform[node.name]&&mathWithTransform[node.name].rawArgs)return node;var operatorFunctions;if(-1===["add","multiply"].indexOf(node.name)){var args=node.args.map((function(arg){return foldFraction(arg,options)}));if(!args.some(isNode))try{return _eval(node.name,args,options)}catch(ignoreandcontine){}return args=args.map((function(arg){return isNode(arg)?arg:_toNode(arg)})),new FunctionNode(node.name,args)}case"OperatorNode":var fn=node.fn.toString(),_args,res,makeNode=createMakeNodeFunction(node);if(isOperatorNode(node)&&node.isUnary())res=isNode((_args=[foldFraction(node.args[0],options)])[0])?makeNode(_args):_eval(fn,_args,options);else if(isAssociative(node))if(_args=(_args=allChildren(node)).map((function(arg){return foldFraction(arg,options)})),isCommutative(fn)){for(var consts=[],vars=[],i=0;i<_args.length;i++)isNode(_args[i])?vars.push(_args[i]):consts.push(_args[i]);consts.length>1?(res=foldOp(fn,consts,makeNode,options),vars.unshift(res),res=foldOp(fn,vars,makeNode,options)):res=foldOp(fn,_args,makeNode,options)}else res=foldOp(fn,_args,makeNode,options);else res=foldOp(fn,_args=node.args.map((function(arg){return foldFraction(arg,options)})),makeNode,options);return res;case"ParenthesisNode":return foldFraction(node.content,options);case"AccessorNode":case"ArrayNode":case"AssignmentNode":case"BlockNode":case"FunctionAssignmentNode":case"IndexNode":case"ObjectNode":case"RangeNode":case"ConditionalNode":default:throw new Error("Unimplemented node type in simplifyConstant: ".concat(node.type))}}return simplifyConstant})),createResolve=factory(name$3X="resolve",dependencies$3Y=["parse","FunctionNode","OperatorNode","ParenthesisNode"],(function(_ref){var parse=_ref.parse,FunctionNode=_ref.FunctionNode,OperatorNode=_ref.OperatorNode,ParenthesisNode=_ref.ParenthesisNode;function resolve(node,scope){if(!scope)return node;if(isSymbolNode(node)){var value=scope[node.name];if(isNode(value))return resolve(value,scope);if("number"==typeof value)return parse(String(value))}else{if(isOperatorNode(node)){var args=node.args.map((function(arg){return resolve(arg,scope)}));return new OperatorNode(node.op,node.fn,args,node.implicit)}if(isParenthesisNode(node))return new ParenthesisNode(resolve(node.content,scope));if(isFunctionNode(node)){var _args=node.args.map((function(arg){return resolve(arg,scope)}));return new FunctionNode(node.name,_args)}}return node}return resolve})),createSimplify=factory(name$3Y="simplify",dependencies$3Z=["config","typed","parse","add","subtract","multiply","divide","pow","isZero","equal","?fraction","?bignumber","mathWithTransform","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode","SymbolNode"],(function(_ref){var config=_ref.config,typed=_ref.typed,parse=_ref.parse,add=_ref.add,subtract=_ref.subtract,multiply=_ref.multiply,divide=_ref.divide,pow=_ref.pow,isZero=_ref.isZero,equal=_ref.equal,fraction=_ref.fraction,bignumber=_ref.bignumber,mathWithTransform=_ref.mathWithTransform,ConstantNode=_ref.ConstantNode,FunctionNode=_ref.FunctionNode,OperatorNode=_ref.OperatorNode,ParenthesisNode=_ref.ParenthesisNode,SymbolNode=_ref.SymbolNode,simplifyConstant=createSimplifyConstant({typed:typed,config:config,mathWithTransform:mathWithTransform,fraction:fraction,bignumber:bignumber,ConstantNode:ConstantNode,OperatorNode:OperatorNode,FunctionNode:FunctionNode,SymbolNode:SymbolNode}),simplifyCore=createSimplifyCore({equal:equal,isZero:isZero,add:add,subtract:subtract,multiply:multiply,divide:divide,pow:pow,ConstantNode:ConstantNode,OperatorNode:OperatorNode,FunctionNode:FunctionNode,ParenthesisNode:ParenthesisNode}),resolve=createResolve({parse:parse,FunctionNode:FunctionNode,OperatorNode:OperatorNode,ParenthesisNode:ParenthesisNode}),_createUtil=createUtil({FunctionNode:FunctionNode,OperatorNode:OperatorNode,SymbolNode:SymbolNode}),isCommutative=_createUtil.isCommutative,isAssociative=_createUtil.isAssociative,flatten=_createUtil.flatten,unflattenr=_createUtil.unflattenr,unflattenl=_createUtil.unflattenl,createMakeNodeFunction=_createUtil.createMakeNodeFunction,simplify=typed("simplify",{string:function string(expr){return this(parse(expr),this.rules,{},{})},"string, Object":function stringObject(expr,scope){return this(parse(expr),this.rules,scope,{})},"string, Object, Object":function stringObjectObject(expr,scope,options){return this(parse(expr),this.rules,scope,options)},"string, Array":function stringArray(expr,rules){return this(parse(expr),rules,{},{})},"string, Array, Object":function stringArrayObject(expr,rules,scope){return this(parse(expr),rules,scope,{})},"string, Array, Object, Object":function stringArrayObjectObject(expr,rules,scope,options){return this(parse(expr),rules,scope,options)},"Node, Object":function NodeObject(expr,scope){return this(expr,this.rules,scope,{})},"Node, Object, Object":function NodeObjectObject(expr,scope,options){return this(expr,this.rules,scope,options)},Node:function Node(expr){return this(expr,this.rules,{},{})},"Node, Array":function NodeArray(expr,rules){return this(expr,rules,{},{})},"Node, Array, Object":function NodeArrayObject(expr,rules,scope){return this(expr,rules,scope,{})},"Node, Array, Object, Object":function NodeArrayObjectObject(expr,rules,scope,options){rules=_buildRules(rules);for(var res=resolve(expr,scope),visited={},str=(res=removeParens(res)).toString({parenthesis:"all"});!visited[str];){visited[str]=!0,_lastsym=0;for(var i=0;i<rules.length;i++)"function"==typeof rules[i]?res=rules[i](res,options):(flatten(res),res=applyRule(res,rules[i])),unflattenl(res);str=res.toString({parenthesis:"all"})}return res}});function removeParens(node){return node.transform((function(node,path,parent){return isParenthesisNode(node)?removeParens(node.content):node}))}simplify.simplifyCore=simplifyCore,simplify.resolve=resolve;var SUPPORTED_CONSTANTS={true:!0,false:!0,e:!0,i:!0,Infinity:!0,LN2:!0,LN10:!0,LOG2E:!0,LOG10E:!0,NaN:!0,phi:!0,pi:!0,SQRT1_2:!0,SQRT2:!0,tau:!0};function _buildRules(rules){for(var ruleSet=[],i=0;i<rules.length;i++){var rule=rules[i],newRule=void 0,ruleType=_typeof$c(rule);switch(ruleType){case"string":var lr=rule.split("->");if(2!==lr.length)throw SyntaxError("Could not parse rule: "+rule);rule={l:lr[0],r:lr[1]};case"object":if(newRule={l:removeParens(parse(rule.l)),r:removeParens(parse(rule.r))},rule.context&&(newRule.evaluate=rule.context),rule.evaluate&&(newRule.evaluate=parse(rule.evaluate)),isAssociative(newRule.l)){var makeNode=createMakeNodeFunction(newRule.l),expandsym=_getExpandPlaceholderSymbol();newRule.expanded={},newRule.expanded.l=makeNode([newRule.l.clone(),expandsym]),flatten(newRule.expanded.l),unflattenr(newRule.expanded.l),newRule.expanded.r=makeNode([newRule.r,expandsym])}break;case"function":newRule=rule;break;default:throw TypeError("Unsupported type of rule: "+ruleType)}ruleSet.push(newRule)}return ruleSet}simplify.rules=[simplifyCore,{l:"log(e)",r:"1"},{l:"n-n1",r:"n+-n1"},{l:"-(c*v)",r:"(-c) * v"},{l:"-v",r:"(-1) * v"},{l:"n/n1^n2",r:"n*n1^-n2"},{l:"n/n1",r:"n*n1^-1"},{l:"(n ^ n1) ^ n2",r:"n ^ (n1 * n2)"},{l:"n*n",r:"n^2"},{l:"n * n^n1",r:"n^(n1+1)"},{l:"n^n1 * n^n2",r:"n^(n1+n2)"},{l:"n+n",r:"2*n"},{l:"n+-n",r:"0"},{l:"n1*n2 + n2",r:"(n1+1)*n2"},{l:"n1*n3 + n2*n3",r:"(n1+n2)*n3"},{l:"n1 + -1 * (n2 + n3)",r:"n1 + -1 * n2 + -1 * n3"},simplifyConstant,{l:"(-n)*n1",r:"-(n*n1)"},{l:"c+v",r:"v+c",context:{add:{commutative:!1}}},{l:"v*c",r:"c*v",context:{multiply:{commutative:!1}}},{l:"n+-n1",r:"n-n1"},{l:"n*(n1^-1)",r:"n/n1"},{l:"n*n1^-n2",r:"n/n1^n2"},{l:"n1^-1",r:"1/n1"},{l:"n*(n1/n2)",r:"(n*n1)/n2"},{l:"n-(n1+n2)",r:"n-n1-n2"},{l:"1*n",r:"n"},{l:"n1/(n2/n3)",r:"(n1*n3)/n2"}];var _lastsym=0;function _getExpandPlaceholderSymbol(){return new SymbolNode("_p"+_lastsym++)}var applyRule=typed("applyRule",{"Node, Object":function NodeObject(node,rule){var res=node;if(res instanceof OperatorNode||res instanceof FunctionNode){if(res.args)for(var i=0;i<res.args.length;i++)res.args[i]=applyRule(res.args[i],rule)}else res instanceof ParenthesisNode&&res.content&&(res.content=applyRule(res.content,rule));var repl=rule.r,matches=_ruleMatch(rule.l,res)[0];if(!matches&&rule.expanded&&(repl=rule.expanded.r,matches=_ruleMatch(rule.expanded.l,res)[0]),matches){var implicit=res.implicit;res=repl.clone(),implicit&&"implicit"in repl&&(res.implicit=!0),res=res.transform((function(node){return node.isSymbolNode&&hasOwnProperty(matches.placeholders,node.name)?matches.placeholders[node.name].clone():node}))}return res}});function getSplits(node,context){var res=[],right,rightArgs,makeNode=createMakeNodeFunction(node);if(isCommutative(node,context))for(var i=0;i<node.args.length;i++)(rightArgs=node.args.slice(0)).splice(i,1),right=1===rightArgs.length?rightArgs[0]:makeNode(rightArgs),res.push(makeNode([node.args[i],right]));else right=1===(rightArgs=node.args.slice(1)).length?rightArgs[0]:makeNode(rightArgs),res.push(makeNode([node.args[0],right]));return res}function mergeMatch(match1,match2){var res={placeholders:{}};if(!match1.placeholders&&!match2.placeholders)return res;if(!match1.placeholders)return match2;if(!match2.placeholders)return match1;for(var key in match1.placeholders)if(hasOwnProperty(match1.placeholders,key)&&(res.placeholders[key]=match1.placeholders[key],hasOwnProperty(match2.placeholders,key)&&!_exactMatch(match1.placeholders[key],match2.placeholders[key])))return null;for(var _key in match2.placeholders)hasOwnProperty(match2.placeholders,_key)&&(res.placeholders[_key]=match2.placeholders[_key]);return res}function combineChildMatches(list1,list2){var res=[],merged;if(0===list1.length||0===list2.length)return res;for(var i1=0;i1<list1.length;i1++)for(var i2=0;i2<list2.length;i2++)(merged=mergeMatch(list1[i1],list2[i2]))&&res.push(merged);return res}function mergeChildMatches(childMatches){if(0===childMatches.length)return childMatches;for(var sets=childMatches.reduce(combineChildMatches),uniqueSets=[],unique={},i=0;i<sets.length;i++){var s=JSON.stringify(sets[i]);unique[s]||(unique[s]=!0,uniqueSets.push(sets[i]))}return uniqueSets}function _ruleMatch(rule,node,isSplit){var res=[{placeholders:{}}];if(rule instanceof OperatorNode&&node instanceof OperatorNode||rule instanceof FunctionNode&&node instanceof FunctionNode){if(rule instanceof OperatorNode){if(rule.op!==node.op||rule.fn!==node.fn)return[]}else if(rule instanceof FunctionNode&&rule.name!==node.name)return[];if((1!==node.args.length||1!==rule.args.length)&&isAssociative(node)&&!isSplit){if(node.args.length>=2&&2===rule.args.length){for(var splits=getSplits(node,rule.context),splitMatches=[],_i=0;_i<splits.length;_i++){var matchSet=_ruleMatch(rule,splits[_i],!0);splitMatches=splitMatches.concat(matchSet)}return splitMatches}if(rule.args.length>2)throw Error("Unexpected non-binary associative function: "+rule.toString());return[]}for(var childMatches=[],i=0;i<rule.args.length;i++){var childMatch=_ruleMatch(rule.args[i],node.args[i]);if(0===childMatch.length)return[];childMatches.push(childMatch)}res=mergeChildMatches(childMatches)}else if(rule instanceof SymbolNode){if(0===rule.name.length)throw new Error("Symbol in rule has 0 length...!?");if(SUPPORTED_CONSTANTS[rule.name]){if(rule.name!==node.name)return[]}else if("n"===rule.name[0]||"_p"===rule.name.substring(0,2))res[0].placeholders[rule.name]=node;else if("v"===rule.name[0]){if(isConstantNode(node))return[];res[0].placeholders[rule.name]=node}else{if("c"!==rule.name[0])throw new Error("Invalid symbol in rule: "+rule.name);if(!(node instanceof ConstantNode))return[];res[0].placeholders[rule.name]=node}}else{if(!(rule instanceof ConstantNode))return[];if(!equal(rule.value,node.value))return[]}return res}function _exactMatch(p,q){if(p instanceof ConstantNode&&q instanceof ConstantNode){if(!equal(p.value,q.value))return!1}else if(p instanceof SymbolNode&&q instanceof SymbolNode){if(p.name!==q.name)return!1}else{if(!(p instanceof OperatorNode&&q instanceof OperatorNode||p instanceof FunctionNode&&q instanceof FunctionNode))return!1;if(p instanceof OperatorNode){if(p.op!==q.op||p.fn!==q.fn)return!1}else if(p instanceof FunctionNode&&p.name!==q.name)return!1;if(p.args.length!==q.args.length)return!1;for(var i=0;i<p.args.length;i++)if(!_exactMatch(p.args[i],q.args[i]))return!1}return!0}return simplify})),exports_9("createSimplify",createSimplify),createDerivative=factory(name$3Z="derivative",dependencies$3_=["typed","config","parse","simplify","equal","isZero","numeric","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode","SymbolNode"],(function(_ref){var typed=_ref.typed,config=_ref.config,parse=_ref.parse,simplify=_ref.simplify,equal=_ref.equal,isZero=_ref.isZero,numeric=_ref.numeric,ConstantNode=_ref.ConstantNode,FunctionNode=_ref.FunctionNode,OperatorNode=_ref.OperatorNode,ParenthesisNode=_ref.ParenthesisNode,SymbolNode=_ref.SymbolNode,derivative=typed("derivative",{"Node, SymbolNode, Object":function NodeSymbolNodeObject(expr,variable,options){var constNodes={};constTag(constNodes,expr,variable.name);var res=_derivative(expr,constNodes);return options.simplify?simplify(res):res},"Node, SymbolNode":function NodeSymbolNode(expr,variable){return this(expr,variable,{simplify:!0})},"string, SymbolNode":function stringSymbolNode(expr,variable){return this(parse(expr),variable)},"string, SymbolNode, Object":function stringSymbolNodeObject(expr,variable,options){return this(parse(expr),variable,options)},"string, string":function stringString(expr,variable){return this(parse(expr),parse(variable))},"string, string, Object":function stringStringObject(expr,variable,options){return this(parse(expr),parse(variable),options)},"Node, string":function NodeString(expr,variable){return this(expr,parse(variable))},"Node, string, Object":function NodeStringObject(expr,variable,options){return this(expr,parse(variable),options)}});derivative._simplify=!0,derivative.toTex=function(deriv){return _derivTex.apply(null,deriv.args)};var _derivTex=typed("_derivTex",{"Node, SymbolNode":function NodeSymbolNode(expr,x){return isConstantNode(expr)&&"string"===typeOf(expr.value)?_derivTex(parse(expr.value).toString(),x.toString(),1):_derivTex(expr.toString(),x.toString(),1)},"Node, ConstantNode":function NodeConstantNode(expr,x){if("string"===typeOf(x.value))return _derivTex(expr,parse(x.value));throw new Error("The second parameter to 'derivative' is a non-string constant")},"Node, SymbolNode, ConstantNode":function NodeSymbolNodeConstantNode(expr,x,order){return _derivTex(expr.toString(),x.name,order.value)},"string, string, number":function stringStringNumber(expr,x,order){var d;return(d=1===order?"{d\\over d"+x+"}":"{d^{"+order+"}\\over d"+x+"^{"+order+"}}")+"\\left[".concat(expr,"\\right]")}}),constTag=typed("constTag",{"Object, ConstantNode, string":function ObjectConstantNodeString(constNodes,node){return constNodes[node]=!0,!0},"Object, SymbolNode, string":function ObjectSymbolNodeString(constNodes,node,varName){return node.name!==varName&&(constNodes[node]=!0,!0)},"Object, ParenthesisNode, string":function ObjectParenthesisNodeString(constNodes,node,varName){return constTag(constNodes,node.content,varName)},"Object, FunctionAssignmentNode, string":function ObjectFunctionAssignmentNodeString(constNodes,node,varName){return-1===node.params.indexOf(varName)?(constNodes[node]=!0,!0):constTag(constNodes,node.expr,varName)},"Object, FunctionNode | OperatorNode, string":function ObjectFunctionNodeOperatorNodeString(constNodes,node,varName){if(node.args.length>0){for(var isConst=constTag(constNodes,node.args[0],varName),i=1;i<node.args.length;++i)isConst=constTag(constNodes,node.args[i],varName)&&isConst;if(isConst)return constNodes[node]=!0,!0}return!1}}),_derivative=typed("_derivative",{"ConstantNode, Object":function ConstantNodeObject(node){return createConstantNode(0)},"SymbolNode, Object":function SymbolNodeObject(node,constNodes){return void 0!==constNodes[node]?createConstantNode(0):createConstantNode(1)},"ParenthesisNode, Object":function ParenthesisNodeObject(node,constNodes){return new ParenthesisNode(_derivative(node.content,constNodes))},"FunctionAssignmentNode, Object":function FunctionAssignmentNodeObject(node,constNodes){return void 0!==constNodes[node]?createConstantNode(0):_derivative(node.expr,constNodes)},"FunctionNode, Object":function FunctionNodeObject(node,constNodes){if(1!==node.args.length&&funcArgsCheck(node),void 0!==constNodes[node])return createConstantNode(0);var arg0=node.args[0],arg1,div=!1,negative=!1,funcDerivative,op,func;switch(node.name){case"cbrt":div=!0,funcDerivative=new OperatorNode("*","multiply",[createConstantNode(3),new OperatorNode("^","pow",[arg0,new OperatorNode("/","divide",[createConstantNode(2),createConstantNode(3)])])]);break;case"sqrt":case"nthRoot":if(1===node.args.length)div=!0,funcDerivative=new OperatorNode("*","multiply",[createConstantNode(2),new FunctionNode("sqrt",[arg0])]);else if(2===node.args.length)return constNodes[arg1=new OperatorNode("/","divide",[createConstantNode(1),node.args[1]])]=constNodes[node.args[1]],_derivative(new OperatorNode("^","pow",[arg0,arg1]),constNodes);break;case"log10":arg1=createConstantNode(10);case"log":if(arg1||1!==node.args.length){if(1===node.args.length&&arg1||2===node.args.length&&void 0!==constNodes[node.args[1]])funcDerivative=new OperatorNode("*","multiply",[arg0.clone(),new FunctionNode("log",[arg1||node.args[1]])]),div=!0;else if(2===node.args.length)return _derivative(new OperatorNode("/","divide",[new FunctionNode("log",[arg0]),new FunctionNode("log",[node.args[1]])]),constNodes)}else funcDerivative=arg0.clone(),div=!0;break;case"pow":return constNodes[arg1]=constNodes[node.args[1]],_derivative(new OperatorNode("^","pow",[arg0,node.args[1]]),constNodes);case"exp":funcDerivative=new FunctionNode("exp",[arg0.clone()]);break;case"sin":funcDerivative=new FunctionNode("cos",[arg0.clone()]);break;case"cos":funcDerivative=new OperatorNode("-","unaryMinus",[new FunctionNode("sin",[arg0.clone()])]);break;case"tan":funcDerivative=new OperatorNode("^","pow",[new FunctionNode("sec",[arg0.clone()]),createConstantNode(2)]);break;case"sec":funcDerivative=new OperatorNode("*","multiply",[node,new FunctionNode("tan",[arg0.clone()])]);break;case"csc":negative=!0,funcDerivative=new OperatorNode("*","multiply",[node,new FunctionNode("cot",[arg0.clone()])]);break;case"cot":negative=!0,funcDerivative=new OperatorNode("^","pow",[new FunctionNode("csc",[arg0.clone()]),createConstantNode(2)]);break;case"asin":div=!0,funcDerivative=new FunctionNode("sqrt",[new OperatorNode("-","subtract",[createConstantNode(1),new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)])])]);break;case"acos":div=!0,negative=!0,funcDerivative=new FunctionNode("sqrt",[new OperatorNode("-","subtract",[createConstantNode(1),new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)])])]);break;case"atan":div=!0,funcDerivative=new OperatorNode("+","add",[new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)]),createConstantNode(1)]);break;case"asec":div=!0,funcDerivative=new OperatorNode("*","multiply",[new FunctionNode("abs",[arg0.clone()]),new FunctionNode("sqrt",[new OperatorNode("-","subtract",[new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)]),createConstantNode(1)])])]);break;case"acsc":div=!0,negative=!0,funcDerivative=new OperatorNode("*","multiply",[new FunctionNode("abs",[arg0.clone()]),new FunctionNode("sqrt",[new OperatorNode("-","subtract",[new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)]),createConstantNode(1)])])]);break;case"acot":div=!0,negative=!0,funcDerivative=new OperatorNode("+","add",[new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)]),createConstantNode(1)]);break;case"sinh":funcDerivative=new FunctionNode("cosh",[arg0.clone()]);break;case"cosh":funcDerivative=new FunctionNode("sinh",[arg0.clone()]);break;case"tanh":funcDerivative=new OperatorNode("^","pow",[new FunctionNode("sech",[arg0.clone()]),createConstantNode(2)]);break;case"sech":negative=!0,funcDerivative=new OperatorNode("*","multiply",[node,new FunctionNode("tanh",[arg0.clone()])]);break;case"csch":negative=!0,funcDerivative=new OperatorNode("*","multiply",[node,new FunctionNode("coth",[arg0.clone()])]);break;case"coth":negative=!0,funcDerivative=new OperatorNode("^","pow",[new FunctionNode("csch",[arg0.clone()]),createConstantNode(2)]);break;case"asinh":div=!0,funcDerivative=new FunctionNode("sqrt",[new OperatorNode("+","add",[new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)]),createConstantNode(1)])]);break;case"acosh":div=!0,funcDerivative=new FunctionNode("sqrt",[new OperatorNode("-","subtract",[new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)]),createConstantNode(1)])]);break;case"atanh":div=!0,funcDerivative=new OperatorNode("-","subtract",[createConstantNode(1),new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)])]);break;case"asech":div=!0,negative=!0,funcDerivative=new OperatorNode("*","multiply",[arg0.clone(),new FunctionNode("sqrt",[new OperatorNode("-","subtract",[createConstantNode(1),new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)])])])]);break;case"acsch":div=!0,negative=!0,funcDerivative=new OperatorNode("*","multiply",[new FunctionNode("abs",[arg0.clone()]),new FunctionNode("sqrt",[new OperatorNode("+","add",[new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)]),createConstantNode(1)])])]);break;case"acoth":div=!0,negative=!0,funcDerivative=new OperatorNode("-","subtract",[createConstantNode(1),new OperatorNode("^","pow",[arg0.clone(),createConstantNode(2)])]);break;case"abs":funcDerivative=new OperatorNode("/","divide",[new FunctionNode(new SymbolNode("abs"),[arg0.clone()]),arg0.clone()]);break;case"gamma":default:throw new Error('Function "'+node.name+'" is not supported by derivative, or a wrong number of arguments is passed')}div?(op="/",func="divide"):(op="*",func="multiply");var chainDerivative=_derivative(arg0,constNodes);return negative&&(chainDerivative=new OperatorNode("-","unaryMinus",[chainDerivative])),new OperatorNode(op,func,[chainDerivative,funcDerivative])},"OperatorNode, Object":function OperatorNodeObject(node,constNodes){if(void 0!==constNodes[node])return createConstantNode(0);if("+"===node.op)return new OperatorNode(node.op,node.fn,node.args.map((function(arg){return _derivative(arg,constNodes)})));if("-"===node.op){if(node.isUnary())return new OperatorNode(node.op,node.fn,[_derivative(node.args[0],constNodes)]);if(node.isBinary())return new OperatorNode(node.op,node.fn,[_derivative(node.args[0],constNodes),_derivative(node.args[1],constNodes)])}if("*"===node.op){var constantTerms=node.args.filter((function(arg){return void 0!==constNodes[arg]}));if(constantTerms.length>0){var nonConstantTerms=node.args.filter((function(arg){return void 0===constNodes[arg]})),nonConstantNode=1===nonConstantTerms.length?nonConstantTerms[0]:new OperatorNode("*","multiply",nonConstantTerms),newArgs=constantTerms.concat(_derivative(nonConstantNode,constNodes));return new OperatorNode("*","multiply",newArgs)}return new OperatorNode("+","add",node.args.map((function(argOuter){return new OperatorNode("*","multiply",node.args.map((function(argInner){return argInner===argOuter?_derivative(argInner,constNodes):argInner.clone()})))})))}if("/"===node.op&&node.isBinary()){var arg0=node.args[0],arg1=node.args[1];return void 0!==constNodes[arg1]?new OperatorNode("/","divide",[_derivative(arg0,constNodes),arg1]):void 0!==constNodes[arg0]?new OperatorNode("*","multiply",[new OperatorNode("-","unaryMinus",[arg0]),new OperatorNode("/","divide",[_derivative(arg1,constNodes),new OperatorNode("^","pow",[arg1.clone(),createConstantNode(2)])])]):new OperatorNode("/","divide",[new OperatorNode("-","subtract",[new OperatorNode("*","multiply",[_derivative(arg0,constNodes),arg1.clone()]),new OperatorNode("*","multiply",[arg0.clone(),_derivative(arg1,constNodes)])]),new OperatorNode("^","pow",[arg1.clone(),createConstantNode(2)])])}if("^"===node.op&&node.isBinary()){var _arg=node.args[0],_arg2=node.args[1];if(void 0!==constNodes[_arg])return isConstantNode(_arg)&&(isZero(_arg.value)||equal(_arg.value,1))?createConstantNode(0):new OperatorNode("*","multiply",[node,new OperatorNode("*","multiply",[new FunctionNode("log",[_arg.clone()]),_derivative(_arg2.clone(),constNodes)])]);if(void 0!==constNodes[_arg2]){if(isConstantNode(_arg2)){if(isZero(_arg2.value))return createConstantNode(0);if(equal(_arg2.value,1))return _derivative(_arg,constNodes)}var powMinusOne=new OperatorNode("^","pow",[_arg.clone(),new OperatorNode("-","subtract",[_arg2,createConstantNode(1)])]);return new OperatorNode("*","multiply",[_arg2.clone(),new OperatorNode("*","multiply",[_derivative(_arg,constNodes),powMinusOne])])}return new OperatorNode("*","multiply",[new OperatorNode("^","pow",[_arg.clone(),_arg2.clone()]),new OperatorNode("+","add",[new OperatorNode("*","multiply",[_derivative(_arg,constNodes),new OperatorNode("/","divide",[_arg2.clone(),_arg.clone()])]),new OperatorNode("*","multiply",[_derivative(_arg2,constNodes),new FunctionNode("log",[_arg.clone()])])])])}throw new Error('Operator "'+node.op+'" is not supported by derivative, or a wrong number of arguments is passed')}});function funcArgsCheck(node){if("log"!==node.name&&"nthRoot"!==node.name&&"pow"!==node.name||2!==node.args.length){for(var i=0;i<node.args.length;++i)node.args[i]=createConstantNode(0);throw node.compile().evaluate(),new Error("Expected TypeError, but none found")}}function createConstantNode(value,valueType){return new ConstantNode(numeric(value,valueType||config.number))}return derivative})),exports_9("createDerivative",createDerivative),createRationalize=factory(name$3_="rationalize",dependencies$3$=["config","typed","equal","isZero","add","subtract","multiply","divide","pow","parse","simplify","?bignumber","?fraction","mathWithTransform","ConstantNode","OperatorNode","FunctionNode","SymbolNode","ParenthesisNode"],(function(_ref){var config=_ref.config,typed=_ref.typed,equal=_ref.equal,isZero=_ref.isZero,add=_ref.add,subtract=_ref.subtract,multiply=_ref.multiply,divide=_ref.divide,pow=_ref.pow,parse=_ref.parse,simplify=_ref.simplify,fraction=_ref.fraction,bignumber=_ref.bignumber,mathWithTransform=_ref.mathWithTransform,ConstantNode=_ref.ConstantNode,OperatorNode=_ref.OperatorNode,FunctionNode=_ref.FunctionNode,SymbolNode=_ref.SymbolNode,ParenthesisNode=_ref.ParenthesisNode,simplifyConstant=createSimplifyConstant({typed:typed,config:config,mathWithTransform:mathWithTransform,fraction:fraction,bignumber:bignumber,ConstantNode:ConstantNode,OperatorNode:OperatorNode,FunctionNode:FunctionNode,SymbolNode:SymbolNode}),simplifyCore=createSimplifyCore({equal:equal,isZero:isZero,add:add,subtract:subtract,multiply:multiply,divide:divide,pow:pow,ConstantNode:ConstantNode,OperatorNode:OperatorNode,FunctionNode:FunctionNode,ParenthesisNode:ParenthesisNode});return typed(name$3_,{string:function string(expr){return this(parse(expr),{},!1)},"string, boolean":function stringBoolean(expr,detailed){return this(parse(expr),{},detailed)},"string, Object":function stringObject(expr,scope){return this(parse(expr),scope,!1)},"string, Object, boolean":function stringObjectBoolean(expr,scope,detailed){return this(parse(expr),scope,detailed)},Node:function Node(expr){return this(expr,{},!1)},"Node, boolean":function NodeBoolean(expr,detailed){return this(expr,{},detailed)},"Node, Object":function NodeObject(expr,scope){return this(expr,scope,!1)},"Node, Object, boolean":function NodeObjectBoolean(expr,scope,detailed){var setRules=rulesRationalize(),polyRet=polynomial(expr,scope,!0,setRules.firstRules),nVars=polyRet.variables.length;if(expr=polyRet.expression,nVars>=1){var sBefore,rules;expr=expandPower(expr);var eDistrDiv=!0,redoInic=!1,s;for(expr=simplify(expr,setRules.firstRules,{},{exactFractions:!1});rules=eDistrDiv?setRules.distrDivRules:setRules.sucDivRules,eDistrDiv=!eDistrDiv,(s=(expr=simplify(expr,rules)).toString())!==sBefore;)redoInic=!0,sBefore=s;redoInic&&(expr=simplify(expr,setRules.firstRulesAgain,{},{exactFractions:!1})),expr=simplify(expr,setRules.finalRules,{},{exactFractions:!1})}var coefficients=[],retRationalize={};return"OperatorNode"===expr.type&&expr.isBinary()&&"/"===expr.op?(1===nVars&&(expr.args[0]=polyToCanonical(expr.args[0],coefficients),expr.args[1]=polyToCanonical(expr.args[1])),detailed&&(retRationalize.numerator=expr.args[0],retRationalize.denominator=expr.args[1])):(1===nVars&&(expr=polyToCanonical(expr,coefficients)),detailed&&(retRationalize.numerator=expr,retRationalize.denominator=null)),detailed?(retRationalize.coefficients=coefficients,retRationalize.variables=polyRet.variables,retRationalize.expression=expr,retRationalize):expr}});function polynomial(expr,scope,extended,rules){var variables=[],node=simplify(expr,rules,scope,{exactFractions:!1}),oper="+-*"+((extended=!!extended)?"/":"");recPoly(node);var retFunc={};return retFunc.expression=node,retFunc.variables=variables,retFunc;function recPoly(node){var tp=node.type;if("FunctionNode"===tp)throw new Error("There is an unsolved function call");if("OperatorNode"===tp)if("^"===node.op){if("ConstantNode"!==node.args[1].type||!isInteger(parseFloat(node.args[1].value)))throw new Error("There is a non-integer exponent");recPoly(node.args[0])}else{if(-1===oper.indexOf(node.op))throw new Error("Operator "+node.op+" invalid in polynomial expression");for(var i=0;i<node.args.length;i++)recPoly(node.args[i])}else if("SymbolNode"===tp){var _name=node.name,pos;-1===variables.indexOf(_name)&&variables.push(_name)}else if("ParenthesisNode"===tp)recPoly(node.content);else if("ConstantNode"!==tp)throw new Error("type "+tp+" is not allowed in polynomial expression")}}function rulesRationalize(){var oldRules=[simplifyCore,{l:"n+n",r:"2*n"},{l:"n+-n",r:"0"},simplifyConstant,{l:"n*(n1^-1)",r:"n/n1"},{l:"n*n1^-n2",r:"n/n1^n2"},{l:"n1^-1",r:"1/n1"},{l:"n*(n1/n2)",r:"(n*n1)/n2"},{l:"1*n",r:"n"}],rulesFirst=[{l:"(-n1)/(-n2)",r:"n1/n2"},{l:"(-n1)*(-n2)",r:"n1*n2"},{l:"n1--n2",r:"n1+n2"},{l:"n1-n2",r:"n1+(-n2)"},{l:"(n1+n2)*n3",r:"(n1*n3 + n2*n3)"},{l:"n1*(n2+n3)",r:"(n1*n2+n1*n3)"},{l:"c1*n + c2*n",r:"(c1+c2)*n"},{l:"c1*n + n",r:"(c1+1)*n"},{l:"c1*n - c2*n",r:"(c1-c2)*n"},{l:"c1*n - n",r:"(c1-1)*n"},{l:"v/c",r:"(1/c)*v"},{l:"v/-c",r:"-(1/c)*v"},{l:"-v*-c",r:"c*v"},{l:"-v*c",r:"-c*v"},{l:"v*-c",r:"-c*v"},{l:"v*c",r:"c*v"},{l:"-(-n1*n2)",r:"(n1*n2)"},{l:"-(n1*n2)",r:"(-n1*n2)"},{l:"-(-n1+n2)",r:"(n1-n2)"},{l:"-(n1+n2)",r:"(-n1-n2)"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"},{l:"-(-n1/n2)",r:"(n1/n2)"},{l:"-(n1/n2)",r:"(-n1/n2)"}],rulesDistrDiv=[{l:"(n1/n2 + n3/n4)",r:"((n1*n4 + n3*n2)/(n2*n4))"},{l:"(n1/n2 + n3)",r:"((n1 + n3*n2)/n2)"},{l:"(n1 + n2/n3)",r:"((n1*n3 + n2)/n3)"}],rulesSucDiv=[{l:"(n1/(n2/n3))",r:"((n1*n3)/n2)"},{l:"(n1/n2/n3)",r:"(n1/(n2*n3))"}],setRules={};return setRules.firstRules=oldRules.concat(rulesFirst,rulesSucDiv),setRules.distrDivRules=rulesDistrDiv,setRules.sucDivRules=rulesSucDiv,setRules.firstRulesAgain=oldRules.concat(rulesFirst),setRules.finalRules=[simplifyCore,{l:"n*-n",r:"-n^2"},{l:"n*n",r:"n^2"},simplifyConstant,{l:"n*-n^n1",r:"-n^(n1+1)"},{l:"n*n^n1",r:"n^(n1+1)"},{l:"n^n1*-n^n2",r:"-n^(n1+n2)"},{l:"n^n1*n^n2",r:"n^(n1+n2)"},{l:"n^n1*-n",r:"-n^(n1+1)"},{l:"n^n1*n",r:"n^(n1+1)"},{l:"n^n1/-n",r:"-n^(n1-1)"},{l:"n^n1/n",r:"n^(n1-1)"},{l:"n/-n^n1",r:"-n^(1-n1)"},{l:"n/n^n1",r:"n^(1-n1)"},{l:"n^n1/-n^n2",r:"n^(n1-n2)"},{l:"n^n1/n^n2",r:"n^(n1-n2)"},{l:"n1+(-n2*n3)",r:"n1-n2*n3"},{l:"v*(-c)",r:"-c*v"},{l:"n1+-n2",r:"n1-n2"},{l:"v*c",r:"c*v"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"}],setRules}function expandPower(node,parent,indParent){var tp=node.type,internal=arguments.length>1;if("OperatorNode"===tp&&node.isBinary()){var does=!1,val;if("^"===node.op&&("ParenthesisNode"!==node.args[0].type&&"OperatorNode"!==node.args[0].type||"ConstantNode"!==node.args[1].type||(does=(val=parseFloat(node.args[1].value))>=2&&isInteger(val))),does){if(val>2){var nEsqTopo=node.args[0],nDirTopo=new OperatorNode("^","pow",[node.args[0].cloneDeep(),new ConstantNode(val-1)]);node=new OperatorNode("*","multiply",[nEsqTopo,nDirTopo])}else node=new OperatorNode("*","multiply",[node.args[0],node.args[0].cloneDeep()]);internal&&("content"===indParent?parent.content=node:parent.args[indParent]=node)}}if("ParenthesisNode"===tp)expandPower(node.content,node,"content");else if("ConstantNode"!==tp&&"SymbolNode"!==tp)for(var i=0;i<node.args.length;i++)expandPower(node.args[i],node,i);if(!internal)return node}function polyToCanonical(node,coefficients){void 0===coefficients&&(coefficients=[]),coefficients[0]=0;var o={cte:1,oper:"+",fire:""},maxExpo=0,varname="";recurPol(node,null,o);for(var first=!0,no,i=maxExpo=coefficients.length-1;i>=0;i--)if(0!==coefficients[i]){var n1=new ConstantNode(first?coefficients[i]:Math.abs(coefficients[i])),op=coefficients[i]<0?"-":"+";if(i>0){var n2=new SymbolNode(varname);if(i>1){var n3=new ConstantNode(i);n2=new OperatorNode("^","pow",[n2,n3])}n1=-1===coefficients[i]&&first?new OperatorNode("-","unaryMinus",[n2]):1===Math.abs(coefficients[i])?n2:new OperatorNode("*","multiply",[n1,n2])}no=first?n1:"+"===op?new OperatorNode("+","add",[no,n1]):new OperatorNode("-","subtract",[no,n1]),first=!1}return first?new ConstantNode(0):no;function recurPol(node,noPai,o){var tp=node.type;if("FunctionNode"===tp)throw new Error("There is an unsolved function call");if("OperatorNode"===tp){if(-1==="+-*^".indexOf(node.op))throw new Error("Operator "+node.op+" invalid");if(null!==noPai){if(("unaryMinus"===node.fn||"pow"===node.fn)&&"add"!==noPai.fn&&"subtract"!==noPai.fn&&"multiply"!==noPai.fn)throw new Error("Invalid "+node.op+" placing");if(("subtract"===node.fn||"add"===node.fn||"multiply"===node.fn)&&"add"!==noPai.fn&&"subtract"!==noPai.fn)throw new Error("Invalid "+node.op+" placing");if(("subtract"===node.fn||"add"===node.fn||"unaryMinus"===node.fn)&&0!==o.noFil)throw new Error("Invalid "+node.op+" placing")}"^"!==node.op&&"*"!==node.op||(o.fire=node.op);for(var _i=0;_i<node.args.length;_i++)"unaryMinus"===node.fn&&(o.oper="-"),"+"!==node.op&&"subtract"!==node.fn||(o.fire="",o.cte=1,o.oper=0===_i?"+":node.op),o.noFil=_i,recurPol(node.args[_i],node,o)}else if("SymbolNode"===tp){if(node.name!==varname&&""!==varname)throw new Error("There is more than one variable");if(varname=node.name,null===noPai)return void(coefficients[1]=1);if("^"===noPai.op&&0!==o.noFil)throw new Error("In power the variable should be the first parameter");if("*"===noPai.op&&1!==o.noFil)throw new Error("In multiply the variable should be the second parameter");""!==o.fire&&"*"!==o.fire||(maxExpo<1&&(coefficients[1]=0),coefficients[1]+=o.cte*("+"===o.oper?1:-1),maxExpo=Math.max(1,maxExpo))}else{if("ConstantNode"!==tp)throw new Error("Type "+tp+" is not allowed");var valor=parseFloat(node.value);if(null===noPai)return void(coefficients[0]=valor);if("^"===noPai.op){if(1!==o.noFil)throw new Error("Constant cannot be powered");if(!isInteger(valor)||valor<=0)throw new Error("Non-integer exponent is not allowed");for(var _i2=maxExpo+1;_i2<valor;_i2++)coefficients[_i2]=0;return valor>maxExpo&&(coefficients[valor]=0),coefficients[valor]+=o.cte*("+"===o.oper?1:-1),void(maxExpo=Math.max(valor,maxExpo))}o.cte=valor,""===o.fire&&(coefficients[0]+=o.cte*("+"===o.oper?1:-1))}}}})),exports_9("createRationalize",createRationalize),createReviver=factory(name$3$="reviver",dependencies$40=["classes"],(function(_ref){var classes=_ref.classes;return function reviver(key,value){var constructor=classes[value&&value.mathjs];return constructor&&"function"==typeof constructor.fromJSON?constructor.fromJSON(value):value}})),exports_9("createReviver",createReviver),createReplacer=factory(name$40="replacer",dependencies$41=[],(function(){return function replacer(key,value){return"number"!=typeof value||isFinite(value)&&!isNaN(value)?value:{mathjs:"number",value:String(value)}}})),exports_9("createReplacer",createReplacer),version="7.1.0",createTrue=factory("true",[],(function(){return!0})),exports_9("createTrue",createTrue),createFalse=factory("false",[],(function(){return!1})),exports_9("createFalse",createFalse),createNull=factory("null",[],(function(){return null})),exports_9("createNull",createNull),createInfinity=recreateFactory("Infinity",["config","?BigNumber"],(function(_ref){var config=_ref.config,BigNumber=_ref.BigNumber;return"BigNumber"===config.number?new BigNumber(1/0):1/0})),exports_9("createInfinity",createInfinity),createNaN=recreateFactory("NaN",["config","?BigNumber"],(function(_ref2){var config=_ref2.config,BigNumber=_ref2.BigNumber;return"BigNumber"===config.number?new BigNumber(NaN):NaN})),exports_9("createNaN",createNaN),createPi=recreateFactory("pi",["config","?BigNumber"],(function(_ref3){var config=_ref3.config,BigNumber=_ref3.BigNumber;return"BigNumber"===config.number?createBigNumberPi(BigNumber):pi})),exports_9("createPi",createPi),createTau=recreateFactory("tau",["config","?BigNumber"],(function(_ref4){var config=_ref4.config,BigNumber=_ref4.BigNumber;return"BigNumber"===config.number?createBigNumberTau(BigNumber):tau})),exports_9("createTau",createTau),createE=recreateFactory("e",["config","?BigNumber"],(function(_ref5){var config=_ref5.config,BigNumber=_ref5.BigNumber;return"BigNumber"===config.number?createBigNumberE(BigNumber):e})),exports_9("createE",createE),createPhi=recreateFactory("phi",["config","?BigNumber"],(function(_ref6){var config=_ref6.config,BigNumber=_ref6.BigNumber;return"BigNumber"===config.number?createBigNumberPhi(BigNumber):phi})),exports_9("createPhi",createPhi),createLN2=recreateFactory("LN2",["config","?BigNumber"],(function(_ref7){var config=_ref7.config,BigNumber=_ref7.BigNumber;return"BigNumber"===config.number?new BigNumber(2).ln():Math.LN2})),exports_9("createLN2",createLN2),createLN10=recreateFactory("LN10",["config","?BigNumber"],(function(_ref8){var config=_ref8.config,BigNumber=_ref8.BigNumber;return"BigNumber"===config.number?new BigNumber(10).ln():Math.LN10})),exports_9("createLN10",createLN10),createLOG2E=recreateFactory("LOG2E",["config","?BigNumber"],(function(_ref9){var config=_ref9.config,BigNumber=_ref9.BigNumber;return"BigNumber"===config.number?new BigNumber(1).div(new BigNumber(2).ln()):Math.LOG2E})),exports_9("createLOG2E",createLOG2E),createLOG10E=recreateFactory("LOG10E",["config","?BigNumber"],(function(_ref10){var config=_ref10.config,BigNumber=_ref10.BigNumber;return"BigNumber"===config.number?new BigNumber(1).div(new BigNumber(10).ln()):Math.LOG10E})),exports_9("createLOG10E",createLOG10E),createSQRT1_2=recreateFactory("SQRT1_2",["config","?BigNumber"],(function(_ref11){var config=_ref11.config,BigNumber=_ref11.BigNumber;return"BigNumber"===config.number?new BigNumber("0.5").sqrt():Math.SQRT1_2})),exports_9("createSQRT1_2",createSQRT1_2),createSQRT2=recreateFactory("SQRT2",["config","?BigNumber"],(function(_ref12){var config=_ref12.config,BigNumber=_ref12.BigNumber;return"BigNumber"===config.number?new BigNumber(2).sqrt():Math.SQRT2})),exports_9("createSQRT2",createSQRT2),createI=recreateFactory("i",["Complex"],(function(_ref13){var Complex;return _ref13.Complex.I})),exports_9("createI",createI),createUppercasePi=factory("PI",["pi"],(function(_ref14){var pi;return _ref14.pi})),exports_9("createUppercasePi",createUppercasePi),createUppercaseE=factory("E",["e"],(function(_ref15){var e;return _ref15.e})),exports_9("createUppercaseE",createUppercaseE),createVersion=factory("version",[],(function(){return"7.1.0"})),exports_9("createVersion",createVersion),createSpeedOfLight=unitFactory("speedOfLight","299792458","m s^-1"),exports_9("createSpeedOfLight",createSpeedOfLight),createGravitationConstant=unitFactory("gravitationConstant","6.67430e-11","m^3 kg^-1 s^-2"),exports_9("createGravitationConstant",createGravitationConstant),createPlanckConstant=unitFactory("planckConstant","6.62607015e-34","J s"),exports_9("createPlanckConstant",createPlanckConstant),createReducedPlanckConstant=unitFactory("reducedPlanckConstant","1.0545718176461565e-34","J s"),exports_9("createReducedPlanckConstant",createReducedPlanckConstant),createMagneticConstant=unitFactory("magneticConstant","1.25663706212e-6","N A^-2"),exports_9("createMagneticConstant",createMagneticConstant),createElectricConstant=unitFactory("electricConstant","8.8541878128e-12","F m^-1"),exports_9("createElectricConstant",createElectricConstant),createVacuumImpedance=unitFactory("vacuumImpedance","376.730313667","ohm"),exports_9("createVacuumImpedance",createVacuumImpedance),createCoulomb=unitFactory("coulomb","8.987551792261171e9","N m^2 C^-2"),exports_9("createCoulomb",createCoulomb),createElementaryCharge=unitFactory("elementaryCharge","1.602176634e-19","C"),exports_9("createElementaryCharge",createElementaryCharge),createBohrMagneton=unitFactory("bohrMagneton","9.2740100783e-24","J T^-1"),exports_9("createBohrMagneton",createBohrMagneton),createConductanceQuantum=unitFactory("conductanceQuantum","7.748091729863649e-5","S"),exports_9("createConductanceQuantum",createConductanceQuantum),createInverseConductanceQuantum=unitFactory("inverseConductanceQuantum","12906.403729652257","ohm"),exports_9("createInverseConductanceQuantum",createInverseConductanceQuantum),createMagneticFluxQuantum=unitFactory("magneticFluxQuantum","2.0678338484619295e-15","Wb"),exports_9("createMagneticFluxQuantum",createMagneticFluxQuantum),createNuclearMagneton=unitFactory("nuclearMagneton","5.0507837461e-27","J T^-1"),exports_9("createNuclearMagneton",createNuclearMagneton),createKlitzing=unitFactory("klitzing","25812.807459304513","ohm"),exports_9("createKlitzing",createKlitzing),createBohrRadius=unitFactory("bohrRadius","5.29177210903e-11","m"),exports_9("createBohrRadius",createBohrRadius),createClassicalElectronRadius=unitFactory("classicalElectronRadius","2.8179403262e-15","m"),exports_9("createClassicalElectronRadius",createClassicalElectronRadius),createElectronMass=unitFactory("electronMass","9.1093837015e-31","kg"),exports_9("createElectronMass",createElectronMass),createFermiCoupling=unitFactory("fermiCoupling","1.1663787e-5","GeV^-2"),exports_9("createFermiCoupling",createFermiCoupling),createFineStructure=numberFactory("fineStructure",.0072973525693),exports_9("createFineStructure",createFineStructure),createHartreeEnergy=unitFactory("hartreeEnergy","4.3597447222071e-18","J"),exports_9("createHartreeEnergy",createHartreeEnergy),createProtonMass=unitFactory("protonMass","1.67262192369e-27","kg"),exports_9("createProtonMass",createProtonMass),createDeuteronMass=unitFactory("deuteronMass","3.3435830926e-27","kg"),exports_9("createDeuteronMass",createDeuteronMass),createNeutronMass=unitFactory("neutronMass","1.6749271613e-27","kg"),exports_9("createNeutronMass",createNeutronMass),createQuantumOfCirculation=unitFactory("quantumOfCirculation","3.6369475516e-4","m^2 s^-1"),exports_9("createQuantumOfCirculation",createQuantumOfCirculation),createRydberg=unitFactory("rydberg","10973731.568160","m^-1"),exports_9("createRydberg",createRydberg),createThomsonCrossSection=unitFactory("thomsonCrossSection","6.6524587321e-29","m^2"),exports_9("createThomsonCrossSection",createThomsonCrossSection),createWeakMixingAngle=numberFactory("weakMixingAngle",.2229),exports_9("createWeakMixingAngle",createWeakMixingAngle),createEfimovFactor=numberFactory("efimovFactor",22.7),exports_9("createEfimovFactor",createEfimovFactor),createAtomicMass=unitFactory("atomicMass","1.66053906660e-27","kg"),exports_9("createAtomicMass",createAtomicMass),createAvogadro=unitFactory("avogadro","6.02214076e23","mol^-1"),exports_9("createAvogadro",createAvogadro),createBoltzmann=unitFactory("boltzmann","1.380649e-23","J K^-1"),exports_9("createBoltzmann",createBoltzmann),createFaraday=unitFactory("faraday","96485.33212331001","C mol^-1"),exports_9("createFaraday",createFaraday),createFirstRadiation=unitFactory("firstRadiation","3.7417718521927573e-16","W m^2"),exports_9("createFirstRadiation",createFirstRadiation),createLoschmidt=unitFactory("loschmidt","2.686780111798444e25","m^-3"),exports_9("createLoschmidt",createLoschmidt),createGasConstant=unitFactory("gasConstant","8.31446261815324","J K^-1 mol^-1"),exports_9("createGasConstant",createGasConstant),createMolarPlanckConstant=unitFactory("molarPlanckConstant","3.990312712893431e-10","J s mol^-1"),exports_9("createMolarPlanckConstant",createMolarPlanckConstant),createMolarVolume=unitFactory("molarVolume","0.022413969545014137","m^3 mol^-1"),exports_9("createMolarVolume",createMolarVolume),createSackurTetrode=numberFactory("sackurTetrode",-1.16487052358),exports_9("createSackurTetrode",createSackurTetrode),createSecondRadiation=unitFactory("secondRadiation","0.014387768775039337","m K"),exports_9("createSecondRadiation",createSecondRadiation),createStefanBoltzmann=unitFactory("stefanBoltzmann","5.67037441918443e-8","W m^-2 K^-4"),exports_9("createStefanBoltzmann",createStefanBoltzmann),createWienDisplacement=unitFactory("wienDisplacement","2.897771955e-3","m K"),exports_9("createWienDisplacement",createWienDisplacement),createMolarMass=unitFactory("molarMass","0.99999999965e-3","kg mol^-1"),exports_9("createMolarMass",createMolarMass),createMolarMassC12=unitFactory("molarMassC12","11.9999999958e-3","kg mol^-1"),exports_9("createMolarMassC12",createMolarMassC12),createGravity=unitFactory("gravity","9.80665","m s^-2"),exports_9("createGravity",createGravity),createPlanckLength=unitFactory("planckLength","1.616255e-35","m"),exports_9("createPlanckLength",createPlanckLength),createPlanckMass=unitFactory("planckMass","2.176435e-8","kg"),exports_9("createPlanckMass",createPlanckMass),createPlanckTime=unitFactory("planckTime","5.391245e-44","s"),exports_9("createPlanckTime",createPlanckTime),createPlanckCharge=unitFactory("planckCharge","1.87554603778e-18","C"),exports_9("createPlanckCharge",createPlanckCharge),createPlanckTemperature=unitFactory("planckTemperature","1.416785e+32","K"),exports_9("createPlanckTemperature",createPlanckTemperature),name$41="apply",createApplyTransform=factory("apply",dependencies$42=["typed","isInteger"],(function(_ref){var typed=_ref.typed,isInteger=_ref.isInteger,apply=createApply({typed:typed,isInteger:isInteger});return typed("apply",{"...any":function any(args){var dim=args[1];isNumber(dim)?args[1]=dim-1:isBigNumber(dim)&&(args[1]=dim.minus(1));try{return apply.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createApplyTransform",createApplyTransform),createColumnTransform=factory(name$42="column",dependencies$43=["typed","Index","matrix","range"],(function(_ref){var typed=_ref.typed,Index=_ref.Index,matrix=_ref.matrix,range=_ref.range,column=createColumn({typed:typed,Index:Index,matrix:matrix,range:range});return typed("column",{"...any":function any(args){var lastIndex=args.length-1,last=args[lastIndex];isNumber(last)&&(args[lastIndex]=last-1);try{return column.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createColumnTransform",createColumnTransform),createFilterTransform=factory(name$43="filter",dependencies$44=["typed"],(function(_ref){var typed=_ref.typed;function filterTransform(args,math,scope){var x,callback;return args[0]&&(x=args[0].compile().evaluate(scope)),args[1]&&(callback=isSymbolNode(args[1])||isFunctionAssignmentNode(args[1])?args[1].compile().evaluate(scope):compileInlineExpression(args[1],math,scope)),filter(x,callback)}filterTransform.rawArgs=!0;var filter=typed("filter",{"Array, function":_filter,"Matrix, function":function MatrixFunction(x,test){return x.create(_filter(x.toArray(),test))},"Array, RegExp":filterRegExp,"Matrix, RegExp":function MatrixRegExp(x,test){return x.create(filterRegExp(x.toArray(),test))}});return filterTransform}),{isTransformFunction:!0}),exports_9("createFilterTransform",createFilterTransform),createForEachTransform=factory(name$44="forEach",dependencies$45=["typed"],(function(_ref){var typed=_ref.typed;function forEachTransform(args,math,scope){var x,callback;return args[0]&&(x=args[0].compile().evaluate(scope)),args[1]&&(callback=isSymbolNode(args[1])||isFunctionAssignmentNode(args[1])?args[1].compile().evaluate(scope):compileInlineExpression(args[1],math,scope)),_forEach(x,callback)}forEachTransform.rawArgs=!0;var _forEach=typed("forEach",{"Array | Matrix, function":function ArrayMatrixFunction(array,callback){var args=maxArgumentCount(callback),recurse;(function recurse(value,index){Array.isArray(value)?forEach(value,(function(child,i){recurse(child,index.concat(i+1))})):1===args?callback(value):2===args?callback(value,index):callback(value,index,array)})(array.valueOf(),[])}});return forEachTransform}),{isTransformFunction:!0}),exports_9("createForEachTransform",createForEachTransform),name$45="index",createIndexTransform=factory("index",dependencies$46=["Index"],(function(_ref){var Index=_ref.Index;return function indexTransform(){for(var args=[],i=0,ii=arguments.length;i<ii;i++){var arg=arguments[i];if(isRange(arg))arg.start--,arg.end-=arg.step>0?0:2;else if(arg&&!0===arg.isSet)arg=arg.map((function(v){return v-1}));else if(isArray(arg)||isMatrix(arg))arg=arg.map((function(v){return v-1}));else if(isNumber(arg))arg--;else if(isBigNumber(arg))arg=arg.toNumber()-1;else if("string"!=typeof arg)throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");args[i]=arg}var res=new Index;return Index.apply(res,args),res}}),{isTransformFunction:!0}),exports_9("createIndexTransform",createIndexTransform),name$46="map",createMapTransform=factory("map",dependencies$47=["typed"],(function(_ref){var typed=_ref.typed;function mapTransform(args,math,scope){var x,callback;return args[0]&&(x=args[0].compile().evaluate(scope)),args[1]&&(callback=isSymbolNode(args[1])||isFunctionAssignmentNode(args[1])?args[1].compile().evaluate(scope):compileInlineExpression(args[1],math,scope)),map(x,callback)}mapTransform.rawArgs=!0;var map=typed("map",{"Array, function":function ArrayFunction(x,callback){return _map$1(x,callback,x)},"Matrix, function":function MatrixFunction(x,callback){return x.create(_map$1(x.valueOf(),callback,x))}});return mapTransform}),{isTransformFunction:!0}),exports_9("createMapTransform",createMapTransform),name$47="max",createMaxTransform=factory("max",dependencies$48=["typed","config","numeric","larger"],(function(_ref){var typed=_ref.typed,config=_ref.config,numeric=_ref.numeric,larger=_ref.larger,max=createMax({typed:typed,config:config,numeric:numeric,larger:larger});return typed("max",{"...any":function any(args){if(2===args.length&&isCollection(args[0])){var dim=args[1];isNumber(dim)?args[1]=dim-1:isBigNumber(dim)&&(args[1]=dim.minus(1))}try{return max.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createMaxTransform",createMaxTransform),name$48="mean",createMeanTransform=factory("mean",dependencies$49=["typed","add","divide"],(function(_ref){var typed=_ref.typed,add=_ref.add,divide=_ref.divide,mean=createMean({typed:typed,add:add,divide:divide});return typed("mean",{"...any":function any(args){if(2===args.length&&isCollection(args[0])){var dim=args[1];isNumber(dim)?args[1]=dim-1:isBigNumber(dim)&&(args[1]=dim.minus(1))}try{return mean.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createMeanTransform",createMeanTransform),name$49="min",createMinTransform=factory("min",dependencies$4a=["typed","config","numeric","smaller"],(function(_ref){var typed=_ref.typed,config=_ref.config,numeric=_ref.numeric,smaller=_ref.smaller,min=createMin({typed:typed,config:config,numeric:numeric,smaller:smaller});return typed("min",{"...any":function any(args){if(2===args.length&&isCollection(args[0])){var dim=args[1];isNumber(dim)?args[1]=dim-1:isBigNumber(dim)&&(args[1]=dim.minus(1))}try{return min.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createMinTransform",createMinTransform),name$4a="range",createRangeTransform=factory("range",dependencies$4b=["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq"],(function(_ref){var typed=_ref.typed,config=_ref.config,matrix=_ref.matrix,bignumber=_ref.bignumber,smaller=_ref.smaller,smallerEq=_ref.smallerEq,larger=_ref.larger,largerEq=_ref.largerEq,range=createRange({typed:typed,config:config,matrix:matrix,bignumber:bignumber,smaller:smaller,smallerEq:smallerEq,larger:larger,largerEq:largerEq});return typed("range",{"...any":function any(args){var lastIndex,last;return"boolean"!=typeof args[args.length-1]&&args.push(!0),range.apply(null,args)}})}),{isTransformFunction:!0}),exports_9("createRangeTransform",createRangeTransform),name$4b="row",createRowTransform=factory("row",dependencies$4c=["typed","Index","matrix","range"],(function(_ref){var typed=_ref.typed,Index=_ref.Index,matrix=_ref.matrix,range=_ref.range,row=createRow({typed:typed,Index:Index,matrix:matrix,range:range});return typed("row",{"...any":function any(args){var lastIndex=args.length-1,last=args[lastIndex];isNumber(last)&&(args[lastIndex]=last-1);try{return row.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createRowTransform",createRowTransform),createSubsetTransform=factory(name$4c="subset",dependencies$4d=["typed","matrix"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,subset=createSubset({typed:typed,matrix:matrix});return typed("subset",{"...any":function any(args){try{return subset.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createSubsetTransform",createSubsetTransform),createConcatTransform=factory(name$4d="concat",dependencies$4e=["typed","matrix","isInteger"],(function(_ref){var typed=_ref.typed,matrix=_ref.matrix,isInteger=_ref.isInteger,concat=createConcat({typed:typed,matrix:matrix,isInteger:isInteger});return typed("concat",{"...any":function any(args){var lastIndex=args.length-1,last=args[lastIndex];isNumber(last)?args[lastIndex]=last-1:isBigNumber(last)&&(args[lastIndex]=last.minus(1));try{return concat.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createConcatTransform",createConcatTransform),name$4e="std",createStdTransform=factory("std",dependencies$4f=["typed","sqrt","variance"],(function(_ref){var typed=_ref.typed,sqrt=_ref.sqrt,variance=_ref.variance,std=createStd({typed:typed,sqrt:sqrt,variance:variance});return typed("std",{"...any":function any(args){if(args.length>=2&&isCollection(args[0])){var dim=args[1];isNumber(dim)?args[1]=dim-1:isBigNumber(dim)&&(args[1]=dim.minus(1))}try{return std.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createStdTransform",createStdTransform),name$4f="sum",createSumTransform=factory("sum",dependencies$4g=["typed","config","add","numeric"],(function(_ref){var typed=_ref.typed,config=_ref.config,add=_ref.add,numeric=_ref.numeric,sum=createSum({typed:typed,config:config,add:add,numeric:numeric});return typed("sum",{"...any":function any(args){if(2===args.length&&isCollection(args[0])){var dim=args[1];isNumber(dim)?args[1]=dim-1:isBigNumber(dim)&&(args[1]=dim.minus(1))}try{return sum.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createSumTransform",createSumTransform),createVarianceTransform=factory(name$4g="variance",dependencies$4h=["typed","add","subtract","multiply","divide","apply","isNaN"],(function(_ref){var typed=_ref.typed,add=_ref.add,subtract=_ref.subtract,multiply=_ref.multiply,divide=_ref.divide,apply=_ref.apply,isNaN=_ref.isNaN,variance=createVariance({typed:typed,add:add,subtract:subtract,multiply:multiply,divide:divide,apply:apply,isNaN:isNaN});return typed(name$4g,{"...any":function any(args){if(args.length>=2&&isCollection(args[0])){var dim=args[1];isNumber(dim)?args[1]=dim-1:isBigNumber(dim)&&(args[1]=dim.minus(1))}try{return variance.apply(null,args)}catch(err){throw errorTransform(err)}}})}),{isTransformFunction:!0}),exports_9("createVarianceTransform",createVarianceTransform),allFactories=Object.freeze({__proto__:null,createTyped:createTyped,createResultSet:createResultSet,createBigNumberClass:createBigNumberClass,createComplexClass:createComplexClass,createFractionClass:createFractionClass,createRangeClass:createRangeClass,createMatrixClass:createMatrixClass,createDenseMatrixClass:createDenseMatrixClass,createClone:createClone,createIsInteger:createIsInteger,createIsNegative:createIsNegative,createIsNumeric:createIsNumeric,createHasNumericValue:createHasNumericValue,createIsPositive:createIsPositive,createIsZero:createIsZero,createIsNaN:createIsNaN,createTypeOf:createTypeOf,createEqualScalar:createEqualScalar,createSparseMatrixClass:createSparseMatrixClass,createNumber:createNumber,createString:createString,createBoolean:createBoolean,createBignumber:createBignumber,createComplex:createComplex,createFraction:createFraction,createMatrix:createMatrix,createSplitUnit:createSplitUnit,createUnaryMinus:createUnaryMinus,createUnaryPlus:createUnaryPlus,createAbs:createAbs,createApply:createApply,createAddScalar:createAddScalar,createCbrt:createCbrt,createCeil:createCeil,createCube:createCube,createExp:createExp,createExpm1:createExpm1,createFix:createFix,createFloor:createFloor,createGcd:createGcd,createLcm:createLcm,createLog10:createLog10,createLog2:createLog2,createMod:createMod,createMultiplyScalar:createMultiplyScalar,createMultiply:createMultiply,createNthRoot:createNthRoot,createSign:createSign,createSqrt:createSqrt,createSquare:createSquare,createSubtract:createSubtract,createXgcd:createXgcd,createDotMultiply:createDotMultiply,createBitAnd:createBitAnd,createBitNot:createBitNot,createBitOr:createBitOr,createBitXor:createBitXor,createArg:createArg,createConj:createConj,createIm:createIm,createRe:createRe,createNot:createNot,createOr:createOr,createXor:createXor,createConcat:createConcat,createColumn:createColumn,createCross:createCross,createDiag:createDiag,createFilter:createFilter,createFlatten:createFlatten,createForEach:createForEach,createGetMatrixDataType:createGetMatrixDataType,createIdentity:createIdentity,createKron:createKron,createMap:createMap,createOnes:createOnes,createRange:createRange,createReshape:createReshape,createResize:createResize,createRow:createRow,createSize:createSize,createSqueeze:createSqueeze,createSubset:createSubset,createTranspose:createTranspose,createCtranspose:createCtranspose,createZeros:createZeros,createErf:createErf,createMode:createMode,createProd:createProd,createFormat:createFormat,createPrint:createPrint,createTo:createTo,createIsPrime:createIsPrime,createNumeric:createNumeric,createDivideScalar:createDivideScalar,createPow:createPow,createRound:createRound,createLog:createLog,createLog1p:createLog1p,createNthRoots:createNthRoots,createDotPow:createDotPow,createDotDivide:createDotDivide,createLsolve:createLsolve,createUsolve:createUsolve,createLeftShift:createLeftShift,createRightArithShift:createRightArithShift,createRightLogShift:createRightLogShift,createAnd:createAnd,createCompare:createCompare,createCompareNatural:createCompareNatural,createCompareText:createCompareText,createEqual:createEqual,createEqualText:createEqualText,createSmaller:createSmaller,createSmallerEq:createSmallerEq,createLarger:createLarger,createLargerEq:createLargerEq,createDeepEqual:createDeepEqual,createUnequal:createUnequal,createPartitionSelect:createPartitionSelect,createSort:createSort,createMax:createMax,createMin:createMin,createImmutableDenseMatrixClass:createImmutableDenseMatrixClass,createIndexClass:createIndexClass,createFibonacciHeapClass:createFibonacciHeapClass,createSpaClass:createSpaClass,createUnitClass:createUnitClass,createUnitFunction:createUnitFunction,createSparse:createSparse,createCreateUnit:createCreateUnit,createAcos:createAcos,createAcosh:createAcosh,createAcot:createAcot,createAcoth:createAcoth,createAcsc:createAcsc,createAcsch:createAcsch,createAsec:createAsec,createAsech:createAsech,createAsin:createAsin,createAsinh:createAsinh,createAtan:createAtan,createAtan2:createAtan2,createAtanh:createAtanh,createCos:createCos,createCosh:createCosh,createCot:createCot,createCoth:createCoth,createCsc:createCsc,createCsch:createCsch,createSec:createSec,createSech:createSech,createSin:createSin,createSinh:createSinh,createTan:createTan,createTanh:createTanh,createSetCartesian:createSetCartesian,createSetDifference:createSetDifference,createSetDistinct:createSetDistinct,createSetIntersect:createSetIntersect,createSetIsSubset:createSetIsSubset,createSetMultiplicity:createSetMultiplicity,createSetPowerset:createSetPowerset,createSetSize:createSetSize,createSetSymDifference:createSetSymDifference,createSetUnion:createSetUnion,createAdd:createAdd,createHypot:createHypot,createNorm:createNorm,createDot:createDot,createTrace:createTrace,createIndex:createIndex,createNode:createNode,createAccessorNode:createAccessorNode,createArrayNode:createArrayNode,createAssignmentNode:createAssignmentNode,createBlockNode:createBlockNode,createConditionalNode:createConditionalNode,createConstantNode:createConstantNode,createFunctionAssignmentNode:createFunctionAssignmentNode,createIndexNode:createIndexNode,createObjectNode:createObjectNode,createOperatorNode:createOperatorNode,createParenthesisNode:createParenthesisNode,createRangeNode:createRangeNode,createRelationalNode:createRelationalNode,createSymbolNode:createSymbolNode,createFunctionNode:createFunctionNode,createParse:createParse,createCompile:createCompile,createEvaluate:createEvaluate,createParserClass:createParserClass,createParser:createParser,createLup:createLup,createQr:createQr,createSlu:createSlu,createLusolve:createLusolve,createHelpClass:createHelpClass,createChainClass:createChainClass,createHelp:createHelp,createChain:createChain,createDet:createDet,createInv:createInv,createEigs:createEigs,createExpm:createExpm,createSqrtm:createSqrtm,createDivide:createDivide,createDistance:createDistance,createIntersect:createIntersect,createSum:createSum,createMean:createMean,createMedian:createMedian,createMad:createMad,createVariance:createVariance,createQuantileSeq:createQuantileSeq,createStd:createStd,createCombinations:createCombinations,createCombinationsWithRep:createCombinationsWithRep,createGamma:createGamma,createFactorial:createFactorial,createKldivergence:createKldivergence,createMultinomial:createMultinomial,createPermutations:createPermutations,createPickRandom:createPickRandom,createRandom:createRandom,createRandomInt:createRandomInt,createStirlingS2:createStirlingS2,createBellNumbers:createBellNumbers,createCatalan:createCatalan,createComposition:createComposition,createSimplify:createSimplify,createDerivative:createDerivative,createRationalize:createRationalize,createReviver:createReviver,createReplacer:createReplacer,createE:createE,createUppercaseE:createUppercaseE,createFalse:createFalse,createI:createI,createInfinity:createInfinity,createLN10:createLN10,createLN2:createLN2,createLOG10E:createLOG10E,createLOG2E:createLOG2E,createNaN:createNaN,createNull:createNull,createPhi:createPhi,createPi:createPi,createUppercasePi:createUppercasePi,createSQRT1_2:createSQRT1_2,createSQRT2:createSQRT2,createTau:createTau,createTrue:createTrue,createVersion:createVersion,createAtomicMass:createAtomicMass,createAvogadro:createAvogadro,createBohrMagneton:createBohrMagneton,createBohrRadius:createBohrRadius,createBoltzmann:createBoltzmann,createClassicalElectronRadius:createClassicalElectronRadius,createConductanceQuantum:createConductanceQuantum,createCoulomb:createCoulomb,createDeuteronMass:createDeuteronMass,createEfimovFactor:createEfimovFactor,createElectricConstant:createElectricConstant,createElectronMass:createElectronMass,createElementaryCharge:createElementaryCharge,createFaraday:createFaraday,createFermiCoupling:createFermiCoupling,createFineStructure:createFineStructure,createFirstRadiation:createFirstRadiation,createGasConstant:createGasConstant,createGravitationConstant:createGravitationConstant,createGravity:createGravity,createHartreeEnergy:createHartreeEnergy,createInverseConductanceQuantum:createInverseConductanceQuantum,createKlitzing:createKlitzing,createLoschmidt:createLoschmidt,createMagneticConstant:createMagneticConstant,createMagneticFluxQuantum:createMagneticFluxQuantum,createMolarMass:createMolarMass,createMolarMassC12:createMolarMassC12,createMolarPlanckConstant:createMolarPlanckConstant,createMolarVolume:createMolarVolume,createNeutronMass:createNeutronMass,createNuclearMagneton:createNuclearMagneton,createPlanckCharge:createPlanckCharge,createPlanckConstant:createPlanckConstant,createPlanckLength:createPlanckLength,createPlanckMass:createPlanckMass,createPlanckTemperature:createPlanckTemperature,createPlanckTime:createPlanckTime,createProtonMass:createProtonMass,createQuantumOfCirculation:createQuantumOfCirculation,createReducedPlanckConstant:createReducedPlanckConstant,createRydberg:createRydberg,createSackurTetrode:createSackurTetrode,createSecondRadiation:createSecondRadiation,createSpeedOfLight:createSpeedOfLight,createStefanBoltzmann:createStefanBoltzmann,createThomsonCrossSection:createThomsonCrossSection,createVacuumImpedance:createVacuumImpedance,createWeakMixingAngle:createWeakMixingAngle,createWienDisplacement:createWienDisplacement,createApplyTransform:createApplyTransform,createColumnTransform:createColumnTransform,createFilterTransform:createFilterTransform,createForEachTransform:createForEachTransform,createIndexTransform:createIndexTransform,createMapTransform:createMapTransform,createMaxTransform:createMaxTransform,createMeanTransform:createMeanTransform,createMinTransform:createMinTransform,createRangeTransform:createRangeTransform,createRowTransform:createRowTransform,createSubsetTransform:createSubsetTransform,createConcatTransform:createConcatTransform,createStdTransform:createStdTransform,createSumTransform:createSumTransform,createVarianceTransform:createVarianceTransform}),ResultSet=createResultSet({}),exports_9("ResultSet",ResultSet),Complex=createComplexClass({}),exports_9("Complex",Complex),Range=createRangeClass({}),exports_9("Range",Range),_false=createFalse({}),exports_9("_false",_false),_null=createNull({}),exports_9("_null",_null),_true=createTrue({}),exports_9("_true",_true),BigNumber=createBigNumberClass({config:config}),exports_9("BigNumber",BigNumber),Matrix=createMatrixClass({}),exports_9("Matrix",Matrix),replacer=createReplacer({}),exports_9("replacer",replacer),i=createI({Complex:Complex}),exports_9("i",i),LN10=createLN10({BigNumber:BigNumber,config:config}),exports_9("LN10",LN10),LOG10E=createLOG10E({BigNumber:BigNumber,config:config}),exports_9("LOG10E",LOG10E),_NaN=createNaN({BigNumber:BigNumber,config:config}),exports_9("_NaN",_NaN),pi$1=createPi({BigNumber:BigNumber,config:config}),exports_9("pi",pi$1),SQRT1_2=createSQRT1_2({BigNumber:BigNumber,config:config}),exports_9("SQRT1_2",SQRT1_2),tau$1=createTau({BigNumber:BigNumber,config:config}),exports_9("tau",tau$1),efimovFactor=createEfimovFactor({BigNumber:BigNumber,config:config}),exports_9("efimovFactor",efimovFactor),fineStructure=createFineStructure({BigNumber:BigNumber,config:config}),exports_9("fineStructure",fineStructure),sackurTetrode=createSackurTetrode({BigNumber:BigNumber,config:config}),exports_9("sackurTetrode",sackurTetrode),weakMixingAngle=createWeakMixingAngle({BigNumber:BigNumber,config:config}),exports_9("weakMixingAngle",weakMixingAngle),Fraction=createFractionClass({}),exports_9("Fraction",Fraction),e$1=createE({BigNumber:BigNumber,config:config}),exports_9("e",e$1),_Infinity=createInfinity({BigNumber:BigNumber,config:config}),exports_9("_Infinity",_Infinity),LOG2E=createLOG2E({BigNumber:BigNumber,config:config}),exports_9("LOG2E",LOG2E);version$1=createVersion({}),exports_9("version",version$1),DenseMatrix=createDenseMatrixClass({Matrix:Matrix}),exports_9("DenseMatrix",DenseMatrix),phi$1=createPhi({BigNumber:BigNumber,config:config}),exports_9("phi",phi$1),typed=createTyped({BigNumber:BigNumber,Complex:Complex,DenseMatrix:DenseMatrix,Fraction:Fraction}),exports_9("typed",typed),isInteger$1=createIsInteger({typed:typed}),exports_9("isInteger",isInteger$1),isNumeric=createIsNumeric({typed:typed}),exports_9("isNumeric",isNumeric),isPositive=createIsPositive({typed:typed}),exports_9("isPositive",isPositive),isNaN$1=createIsNaN({typed:typed}),exports_9("isNaN",isNaN$1),equalScalar=createEqualScalar({config:config,typed:typed}),exports_9("equalScalar",equalScalar),number=createNumber({typed:typed}),exports_9("number",number),_boolean=createBoolean({typed:typed}),exports_9("boolean",_boolean),complex=createComplex({Complex:Complex,typed:typed}),exports_9("complex",complex),splitUnit=createSplitUnit({typed:typed}),exports_9("splitUnit",splitUnit),unaryPlus=createUnaryPlus({BigNumber:BigNumber,config:config,typed:typed}),exports_9("unaryPlus",unaryPlus),apply=createApply({isInteger:isInteger$1,typed:typed}),exports_9("apply",apply),cube=createCube({typed:typed}),exports_9("cube",cube),expm1$1=createExpm1({Complex:Complex,typed:typed}),exports_9("expm1",expm1$1),log10$1=createLog10({Complex:Complex,config:config,typed:typed}),exports_9("log10",log10$1),multiplyScalar=createMultiplyScalar({typed:typed}),exports_9("multiplyScalar",multiplyScalar),sign$1=createSign({BigNumber:BigNumber,Fraction:Fraction,complex:complex,typed:typed}),exports_9("sign",sign$1),square=createSquare({typed:typed}),exports_9("square",square),bitNot=createBitNot({typed:typed}),exports_9("bitNot",bitNot),arg=createArg({typed:typed}),exports_9("arg",arg),im=createIm({typed:typed}),exports_9("im",im),not=createNot({typed:typed}),exports_9("not",not),filter$1=createFilter({typed:typed}),exports_9("filter",filter$1),forEach$1=createForEach({typed:typed}),exports_9("forEach",forEach$1),map$1=createMap({typed:typed}),exports_9("map",map$1),erf=createErf({typed:typed}),exports_9("erf",erf),format$3=createFormat({typed:typed}),exports_9("format",format$3),isPrime=createIsPrime({typed:typed}),exports_9("isPrime",isPrime),acos=createAcos({Complex:Complex,config:config,typed:typed}),exports_9("acos",acos),acot=createAcot({BigNumber:BigNumber,typed:typed}),exports_9("acot",acot),acsc=createAcsc({BigNumber:BigNumber,Complex:Complex,config:config,typed:typed}),exports_9("acsc",acsc),asec=createAsec({BigNumber:BigNumber,Complex:Complex,config:config,typed:typed}),exports_9("asec",asec),asin=createAsin({Complex:Complex,config:config,typed:typed}),exports_9("asin",asin),atan=createAtan({typed:typed}),exports_9("atan",atan),atanh$1=createAtanh({Complex:Complex,config:config,typed:typed}),exports_9("atanh",atanh$1),cosh$1=createCosh({typed:typed}),exports_9("cosh",cosh$1),coth=createCoth({BigNumber:BigNumber,typed:typed}),exports_9("coth",coth),csch=createCsch({BigNumber:BigNumber,typed:typed}),exports_9("csch",csch),sech=createSech({BigNumber:BigNumber,typed:typed}),exports_9("sech",sech),sinh$1=createSinh({typed:typed}),exports_9("sinh",sinh$1),tanh$1=createTanh({typed:typed}),exports_9("tanh",tanh$1),combinations=createCombinations({typed:typed}),exports_9("combinations",combinations),pickRandom=createPickRandom({config:config,typed:typed}),exports_9("pickRandom",pickRandom),randomInt=createRandomInt({config:config,typed:typed}),exports_9("randomInt",randomInt),LN2=createLN2({BigNumber:BigNumber,config:config}),exports_9("LN2",LN2),clone$1=createClone({typed:typed}),exports_9("clone",clone$1),hasNumericValue=createHasNumericValue({isNumeric:isNumeric,typed:typed}),exports_9("hasNumericValue",hasNumericValue),typeOf$1=createTypeOf({typed:typed}),exports_9("typeOf",typeOf$1),string=createString({typed:typed}),exports_9("string",string),fraction=createFraction({Fraction:Fraction,typed:typed}),exports_9("fraction",fraction),unaryMinus=createUnaryMinus({typed:typed}),exports_9("unaryMinus",unaryMinus),addScalar=createAddScalar({typed:typed}),exports_9("addScalar",addScalar),exp=createExp({typed:typed}),exports_9("exp",exp),log2$1=createLog2({Complex:Complex,config:config,typed:typed}),exports_9("log2",log2$1),sqrt=createSqrt({Complex:Complex,config:config,typed:typed}),exports_9("sqrt",sqrt),conj=createConj({typed:typed}),exports_9("conj",conj),getMatrixDataType=createGetMatrixDataType({typed:typed}),exports_9("getMatrixDataType",getMatrixDataType),mode=createMode({isNaN:isNaN$1,isNumeric:isNumeric,typed:typed}),exports_9("mode",mode),print=createPrint({typed:typed}),exports_9("print",print),acosh$1=createAcosh({Complex:Complex,config:config,typed:typed}),exports_9("acosh",acosh$1),acsch=createAcsch({BigNumber:BigNumber,typed:typed}),exports_9("acsch",acsch),asinh$1=createAsinh({typed:typed}),exports_9("asinh",asinh$1),cos=createCos({typed:typed}),exports_9("cos",cos),csc=createCsc({BigNumber:BigNumber,typed:typed}),exports_9("csc",csc),sin=createSin({typed:typed}),exports_9("sin",sin),combinationsWithRep=createCombinationsWithRep({typed:typed}),exports_9("combinationsWithRep",combinationsWithRep),random=createRandom({config:config,typed:typed}),exports_9("random",random),SQRT2=createSQRT2({BigNumber:BigNumber,config:config}),exports_9("SQRT2",SQRT2),isNegative=createIsNegative({typed:typed}),exports_9("isNegative",isNegative),SparseMatrix=createSparseMatrixClass({Matrix:Matrix,equalScalar:equalScalar,typed:typed}),exports_9("SparseMatrix",SparseMatrix),matrix=createMatrix({DenseMatrix:DenseMatrix,Matrix:Matrix,SparseMatrix:SparseMatrix,typed:typed}),exports_9("matrix",matrix),cbrt$1=createCbrt({BigNumber:BigNumber,Complex:Complex,Fraction:Fraction,config:config,isNegative:isNegative,matrix:matrix,typed:typed,unaryMinus:unaryMinus}),exports_9("cbrt",cbrt$1),gcd=createGcd({BigNumber:BigNumber,DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("gcd",gcd),mod=createMod({DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("mod",mod),nthRoot=createNthRoot({BigNumber:BigNumber,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("nthRoot",nthRoot),xgcd=createXgcd({BigNumber:BigNumber,config:config,matrix:matrix,typed:typed}),exports_9("xgcd",xgcd),bitAnd=createBitAnd({equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("bitAnd",bitAnd),bitXor$1=createBitXor({DenseMatrix:DenseMatrix,matrix:matrix,typed:typed}),exports_9("bitXor",bitXor$1),or=createOr({DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("or",or),concat=createConcat({isInteger:isInteger$1,matrix:matrix,typed:typed}),exports_9("concat",concat),diag=createDiag({DenseMatrix:DenseMatrix,SparseMatrix:SparseMatrix,matrix:matrix,typed:typed}),exports_9("diag",diag),identity=createIdentity({BigNumber:BigNumber,DenseMatrix:DenseMatrix,SparseMatrix:SparseMatrix,config:config,matrix:matrix,typed:typed}),exports_9("identity",identity),ones=createOnes({BigNumber:BigNumber,config:config,matrix:matrix,typed:typed}),exports_9("ones",ones),reshape$1=createReshape({isInteger:isInteger$1,matrix:matrix,typed:typed}),exports_9("reshape",reshape$1),size=createSize({matrix:matrix,config:config,typed:typed}),exports_9("size",size),subset=createSubset({matrix:matrix,typed:typed}),exports_9("subset",subset),zeros$1=createZeros({BigNumber:BigNumber,config:config,matrix:matrix,typed:typed}),exports_9("zeros",zeros$1),to=createTo({matrix:matrix,typed:typed}),exports_9("to",to),round=createRound({BigNumber:BigNumber,DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed,zeros:zeros$1}),exports_9("round",round),leftShift=createLeftShift({DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed,zeros:zeros$1}),exports_9("leftShift",leftShift),rightLogShift=createRightLogShift({DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed,zeros:zeros$1}),exports_9("rightLogShift",rightLogShift),compare=createCompare({BigNumber:BigNumber,DenseMatrix:DenseMatrix,Fraction:Fraction,config:config,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("compare",compare),compareText$1=createCompareText({matrix:matrix,typed:typed}),exports_9("compareText",compareText$1),smaller=createSmaller({DenseMatrix:DenseMatrix,config:config,matrix:matrix,typed:typed}),exports_9("smaller",smaller),larger=createLarger({DenseMatrix:DenseMatrix,config:config,matrix:matrix,typed:typed}),exports_9("larger",larger),unequal=createUnequal({DenseMatrix:DenseMatrix,config:config,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("unequal",unequal),ImmutableDenseMatrix=createImmutableDenseMatrixClass({DenseMatrix:DenseMatrix,smaller:smaller}),exports_9("ImmutableDenseMatrix",ImmutableDenseMatrix),FibonacciHeap=createFibonacciHeapClass({larger:larger,smaller:smaller}),exports_9("FibonacciHeap",FibonacciHeap),sparse=createSparse({SparseMatrix:SparseMatrix,typed:typed}),exports_9("sparse",sparse),acoth=createAcoth({BigNumber:BigNumber,Complex:Complex,config:config,typed:typed}),exports_9("acoth",acoth),atan2=createAtan2({BigNumber:BigNumber,DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("atan2",atan2),sec=createSec({BigNumber:BigNumber,typed:typed}),exports_9("sec",sec),add=createAdd({DenseMatrix:DenseMatrix,SparseMatrix:SparseMatrix,addScalar:addScalar,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("add",add),dot=createDot({addScalar:addScalar,conj:conj,multiplyScalar:multiplyScalar,size:size,typed:typed}),exports_9("dot",dot),composition=createComposition({addScalar:addScalar,combinations:combinations,isInteger:isInteger$1,isNegative:isNegative,isPositive:isPositive,larger:larger,typed:typed}),exports_9("composition",composition),isZero=createIsZero({typed:typed}),exports_9("isZero",isZero),abs=createAbs({typed:typed}),exports_9("abs",abs),floor=createFloor({config:config,round:round,typed:typed}),exports_9("floor",floor),multiply=createMultiply({addScalar:addScalar,dot:dot,equalScalar:equalScalar,matrix:matrix,multiplyScalar:multiplyScalar,typed:typed}),exports_9("multiply",multiply),dotMultiply=createDotMultiply({equalScalar:equalScalar,matrix:matrix,multiplyScalar:multiplyScalar,typed:typed}),exports_9("dotMultiply",dotMultiply),re=createRe({typed:typed}),exports_9("re",re),flatten$1=createFlatten({matrix:matrix,typed:typed}),exports_9("flatten",flatten$1),resize$1=createResize({config:config,matrix:matrix}),exports_9("resize",resize$1),squeeze$1=createSqueeze({matrix:matrix,typed:typed}),exports_9("squeeze",squeeze$1),pow=createPow({Complex:Complex,config:config,fraction:fraction,identity:identity,matrix:matrix,multiply:multiply,number:number,typed:typed}),exports_9("pow",pow),dotPow=createDotPow({DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,pow:pow,typed:typed}),exports_9("dotPow",dotPow),rightArithShift=createRightArithShift({DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed,zeros:zeros$1}),exports_9("rightArithShift",rightArithShift),compareNatural=createCompareNatural({compare:compare,typed:typed}),exports_9("compareNatural",compareNatural),equalText=createEqualText({compareText:compareText$1,isZero:isZero,typed:typed}),exports_9("equalText",equalText),largerEq=createLargerEq({DenseMatrix:DenseMatrix,config:config,matrix:matrix,typed:typed}),exports_9("largerEq",largerEq),partitionSelect=createPartitionSelect({compare:compare,isNaN:isNaN$1,isNumeric:isNumeric,typed:typed}),exports_9("partitionSelect",partitionSelect),Index=createIndexClass({ImmutableDenseMatrix:ImmutableDenseMatrix}),exports_9("Index",Index),asech=createAsech({BigNumber:BigNumber,Complex:Complex,config:config,typed:typed}),exports_9("asech",asech),tan=createTan({typed:typed}),exports_9("tan",tan),setDifference=createSetDifference({DenseMatrix:DenseMatrix,Index:Index,compareNatural:compareNatural,size:size,subset:subset,typed:typed}),exports_9("setDifference",setDifference),setIntersect=createSetIntersect({DenseMatrix:DenseMatrix,Index:Index,compareNatural:compareNatural,size:size,subset:subset,typed:typed}),exports_9("setIntersect",setIntersect),setMultiplicity=createSetMultiplicity({Index:Index,compareNatural:compareNatural,size:size,subset:subset,typed:typed}),exports_9("setMultiplicity",setMultiplicity),setSize=createSetSize({compareNatural:compareNatural,typed:typed}),exports_9("setSize",setSize),norm=createNorm({abs:abs,add:add,conj:conj,equalScalar:equalScalar,larger:larger,matrix:matrix,multiply:multiply,pow:pow,smaller:smaller,sqrt:sqrt,typed:typed}),exports_9("norm",norm),index=createIndex({Index:Index,typed:typed}),exports_9("index",index),quantileSeq=createQuantileSeq({add:add,compare:compare,multiply:multiply,partitionSelect:partitionSelect,typed:typed}),exports_9("quantileSeq",quantileSeq),gamma=createGamma({BigNumber:BigNumber,Complex:Complex,config:config,multiplyScalar:multiplyScalar,pow:pow,typed:typed}),exports_9("gamma",gamma),bignumber=createBignumber({BigNumber:BigNumber,typed:typed}),exports_9("bignumber",bignumber),lcm=createLcm({equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("lcm",lcm),bitOr=createBitOr({DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("bitOr",bitOr),kron=createKron({matrix:matrix,multiplyScalar:multiplyScalar,typed:typed}),exports_9("kron",kron),transpose=createTranspose({matrix:matrix,typed:typed}),exports_9("transpose",transpose),numeric=createNumeric({bignumber:bignumber,fraction:fraction,number:number}),exports_9("numeric",numeric),and=createAnd({equalScalar:equalScalar,matrix:matrix,not:not,typed:typed,zeros:zeros$1}),exports_9("and",and),smallerEq=createSmallerEq({DenseMatrix:DenseMatrix,config:config,matrix:matrix,typed:typed}),exports_9("smallerEq",smallerEq),sort=createSort({compare:compare,compareNatural:compareNatural,matrix:matrix,typed:typed}),exports_9("sort",sort),min=createMin({config:config,numeric:numeric,smaller:smaller,typed:typed}),exports_9("min",min),cot=createCot({BigNumber:BigNumber,typed:typed}),exports_9("cot",cot),setDistinct=createSetDistinct({DenseMatrix:DenseMatrix,Index:Index,compareNatural:compareNatural,size:size,subset:subset,typed:typed}),exports_9("setDistinct",setDistinct),setPowerset=createSetPowerset({Index:Index,compareNatural:compareNatural,size:size,subset:subset,typed:typed}),exports_9("setPowerset",setPowerset),trace=createTrace({add:add,matrix:matrix,typed:typed}),exports_9("trace",trace),sum=createSum({add:add,config:config,numeric:numeric,typed:typed}),exports_9("sum",sum),factorial=createFactorial({gamma:gamma,typed:typed}),exports_9("factorial",factorial),permutations=createPermutations({factorial:factorial,typed:typed}),exports_9("permutations",permutations),ceil=createCeil({config:config,round:round,typed:typed}),exports_9("ceil",ceil),subtract=createSubtract({DenseMatrix:DenseMatrix,addScalar:addScalar,equalScalar:equalScalar,matrix:matrix,typed:typed,unaryMinus:unaryMinus}),exports_9("subtract",subtract),cross=createCross({matrix:matrix,multiply:multiply,subtract:subtract,typed:typed}),exports_9("cross",cross),ctranspose=createCtranspose({conj:conj,transpose:transpose,typed:typed}),exports_9("ctranspose",ctranspose),divideScalar=createDivideScalar({numeric:numeric,typed:typed}),exports_9("divideScalar",divideScalar),nthRoots=createNthRoots({Complex:Complex,config:config,divideScalar:divideScalar,typed:typed}),exports_9("nthRoots",nthRoots),lsolve=createLsolve({DenseMatrix:DenseMatrix,divideScalar:divideScalar,equalScalar:equalScalar,matrix:matrix,multiplyScalar:multiplyScalar,subtract:subtract,typed:typed}),exports_9("lsolve",lsolve),equal=createEqual({DenseMatrix:DenseMatrix,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("equal",equal),max=createMax({config:config,larger:larger,numeric:numeric,typed:typed}),exports_9("max",max),setCartesian=createSetCartesian({DenseMatrix:DenseMatrix,Index:Index,compareNatural:compareNatural,size:size,subset:subset,typed:typed}),exports_9("setCartesian",setCartesian),setSymDifference=createSetSymDifference({Index:Index,concat:concat,setDifference:setDifference,size:size,subset:subset,typed:typed}),exports_9("setSymDifference",setSymDifference),hypot=createHypot({abs:abs,addScalar:addScalar,divideScalar:divideScalar,isPositive:isPositive,multiplyScalar:multiplyScalar,smaller:smaller,sqrt:sqrt,typed:typed}),exports_9("hypot",hypot),qr=createQr({addScalar:addScalar,complex:complex,conj:conj,divideScalar:divideScalar,equal:equal,identity:identity,isZero:isZero,matrix:matrix,multiplyScalar:multiplyScalar,sign:sign$1,sqrt:sqrt,subtract:subtract,typed:typed,unaryMinus:unaryMinus,zeros:zeros$1}),exports_9("qr",qr),distance=createDistance({abs:abs,addScalar:addScalar,divideScalar:divideScalar,multiplyScalar:multiplyScalar,sqrt:sqrt,subtract:subtract,typed:typed,unaryMinus:unaryMinus}),exports_9("distance",distance),stirlingS2=createStirlingS2({addScalar:addScalar,combinations:combinations,divideScalar:divideScalar,factorial:factorial,isInteger:isInteger$1,isNegative:isNegative,larger:larger,multiplyScalar:multiplyScalar,pow:pow,subtract:subtract,typed:typed}),exports_9("stirlingS2",stirlingS2),catalan=createCatalan({addScalar:addScalar,combinations:combinations,divideScalar:divideScalar,isInteger:isInteger$1,isNegative:isNegative,multiplyScalar:multiplyScalar,typed:typed}),exports_9("catalan",catalan),fix=createFix({Complex:Complex,ceil:ceil,floor:floor,typed:typed}),exports_9("fix",fix),range=createRange({bignumber:bignumber,matrix:matrix,config:config,larger:larger,largerEq:largerEq,smaller:smaller,smallerEq:smallerEq,typed:typed}),exports_9("range",range),prod=createProd({config:config,multiplyScalar:multiplyScalar,numeric:numeric,typed:typed}),exports_9("prod",prod),dotDivide=createDotDivide({DenseMatrix:DenseMatrix,divideScalar:divideScalar,equalScalar:equalScalar,matrix:matrix,typed:typed}),exports_9("dotDivide",dotDivide),deepEqual=createDeepEqual({equal:equal,typed:typed}),exports_9("deepEqual",deepEqual),Unit=createUnitClass({BigNumber:BigNumber,Complex:Complex,Fraction:Fraction,abs:abs,addScalar:addScalar,config:config,divideScalar:divideScalar,equal:equal,fix:fix,format:format$3,isNumeric:isNumeric,multiplyScalar:multiplyScalar,number:number,pow:pow,round:round,subtract:subtract}),exports_9("Unit",Unit),createUnit=createCreateUnit({Unit:Unit,typed:typed}),exports_9("createUnit",createUnit),setUnion=createSetUnion({Index:Index,concat:concat,setIntersect:setIntersect,setSymDifference:setSymDifference,size:size,subset:subset,typed:typed}),exports_9("setUnion",setUnion),slu=createSlu({SparseMatrix:SparseMatrix,abs:abs,add:add,divideScalar:divideScalar,larger:larger,largerEq:largerEq,multiply:multiply,subtract:subtract,transpose:transpose,typed:typed}),exports_9("slu",slu),intersect=createIntersect({abs:abs,add:add,addScalar:addScalar,config:config,divideScalar:divideScalar,equalScalar:equalScalar,matrix:matrix,multiply:multiply,multiplyScalar:multiplyScalar,smaller:smaller,subtract:subtract,typed:typed}),exports_9("intersect",intersect),bellNumbers=createBellNumbers({addScalar:addScalar,isInteger:isInteger$1,isNegative:isNegative,stirlingS2:stirlingS2,typed:typed}),exports_9("bellNumbers",bellNumbers),atomicMass=createAtomicMass({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("atomicMass",atomicMass),bohrMagneton=createBohrMagneton({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("bohrMagneton",bohrMagneton),boltzmann=createBoltzmann({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("boltzmann",boltzmann),conductanceQuantum=createConductanceQuantum({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("conductanceQuantum",conductanceQuantum),deuteronMass=createDeuteronMass({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("deuteronMass",deuteronMass),electronMass=createElectronMass({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("electronMass",electronMass),faraday=createFaraday({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("faraday",faraday),firstRadiation=createFirstRadiation({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("firstRadiation",firstRadiation),gravitationConstant=createGravitationConstant({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("gravitationConstant",gravitationConstant),hartreeEnergy=createHartreeEnergy({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("hartreeEnergy",hartreeEnergy),klitzing=createKlitzing({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("klitzing",klitzing),magneticConstant=createMagneticConstant({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("magneticConstant",magneticConstant),molarMass=createMolarMass({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("molarMass",molarMass),molarPlanckConstant=createMolarPlanckConstant({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("molarPlanckConstant",molarPlanckConstant),neutronMass=createNeutronMass({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("neutronMass",neutronMass),planckCharge=createPlanckCharge({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("planckCharge",planckCharge),planckLength=createPlanckLength({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("planckLength",planckLength),planckTemperature=createPlanckTemperature({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("planckTemperature",planckTemperature),protonMass=createProtonMass({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("protonMass",protonMass),reducedPlanckConstant=createReducedPlanckConstant({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("reducedPlanckConstant",reducedPlanckConstant),secondRadiation=createSecondRadiation({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("secondRadiation",secondRadiation),stefanBoltzmann=createStefanBoltzmann({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("stefanBoltzmann",stefanBoltzmann),vacuumImpedance=createVacuumImpedance({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("vacuumImpedance",vacuumImpedance),xor=createXor({DenseMatrix:DenseMatrix,matrix:matrix,typed:typed}),exports_9("xor",xor),row=createRow({Index:Index,matrix:matrix,range:range,typed:typed}),exports_9("row",row),usolve=createUsolve({DenseMatrix:DenseMatrix,divideScalar:divideScalar,equalScalar:equalScalar,matrix:matrix,multiplyScalar:multiplyScalar,subtract:subtract,typed:typed}),exports_9("usolve",usolve),unit=createUnitFunction({Unit:Unit,typed:typed}),exports_9("unit",unit),avogadro=createAvogadro({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("avogadro",avogadro),classicalElectronRadius=createClassicalElectronRadius({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("classicalElectronRadius",classicalElectronRadius),electricConstant=createElectricConstant({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("electricConstant",electricConstant),fermiCoupling=createFermiCoupling({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("fermiCoupling",fermiCoupling),gravity=createGravity({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("gravity",gravity),loschmidt=createLoschmidt({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("loschmidt",loschmidt),molarMassC12=createMolarMassC12({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("molarMassC12",molarMassC12),nuclearMagneton=createNuclearMagneton({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("nuclearMagneton",nuclearMagneton),planckMass=createPlanckMass({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("planckMass",planckMass),quantumOfCirculation=createQuantumOfCirculation({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("quantumOfCirculation",quantumOfCirculation),speedOfLight=createSpeedOfLight({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("speedOfLight",speedOfLight),wienDisplacement=createWienDisplacement({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("wienDisplacement",wienDisplacement),column=createColumn({Index:Index,matrix:matrix,range:range,typed:typed}),exports_9("column",column),Spa=createSpaClass({FibonacciHeap:FibonacciHeap,addScalar:addScalar,equalScalar:equalScalar}),exports_9("Spa",Spa),lup=createLup({DenseMatrix:DenseMatrix,Spa:Spa,SparseMatrix:SparseMatrix,abs:abs,addScalar:addScalar,divideScalar:divideScalar,equalScalar:equalScalar,larger:larger,matrix:matrix,multiplyScalar:multiplyScalar,subtract:subtract,typed:typed,unaryMinus:unaryMinus}),exports_9("lup",lup),det=createDet({lup:lup,matrix:matrix,multiply:multiply,subtract:subtract,typed:typed,unaryMinus:unaryMinus}),exports_9("det",det),bohrRadius=createBohrRadius({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("bohrRadius",bohrRadius),elementaryCharge=createElementaryCharge({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("elementaryCharge",elementaryCharge),inverseConductanceQuantum=createInverseConductanceQuantum({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("inverseConductanceQuantum",inverseConductanceQuantum),molarVolume=createMolarVolume({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("molarVolume",molarVolume),planckTime=createPlanckTime({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("planckTime",planckTime),thomsonCrossSection=createThomsonCrossSection({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("thomsonCrossSection",thomsonCrossSection),log=createLog({Complex:Complex,config:config,divideScalar:divideScalar,typed:typed}),exports_9("log",log),setIsSubset=createSetIsSubset({Index:Index,compareNatural:compareNatural,size:size,subset:subset,typed:typed}),exports_9("setIsSubset",setIsSubset),lusolve=createLusolve({DenseMatrix:DenseMatrix,lsolve:lsolve,lup:lup,matrix:matrix,slu:slu,typed:typed,usolve:usolve}),exports_9("lusolve",lusolve),inv=createInv({abs:abs,addScalar:addScalar,det:det,divideScalar:divideScalar,identity:identity,matrix:matrix,multiply:multiply,typed:typed,unaryMinus:unaryMinus}),exports_9("inv",inv),expm=createExpm({abs:abs,add:add,identity:identity,inv:inv,multiply:multiply,typed:typed}),exports_9("expm",expm),divide=createDivide({divideScalar:divideScalar,equalScalar:equalScalar,inv:inv,matrix:matrix,multiply:multiply,typed:typed}),exports_9("divide",divide),median=createMedian({add:add,compare:compare,divide:divide,partitionSelect:partitionSelect,typed:typed}),exports_9("median",median),variance=createVariance({add:add,apply:apply,divide:divide,isNaN:isNaN$1,multiply:multiply,subtract:subtract,typed:typed}),exports_9("variance",variance),kldivergence=createKldivergence({divide:divide,dotDivide:dotDivide,isNumeric:isNumeric,log:log,matrix:matrix,multiply:multiply,sum:sum,typed:typed}),exports_9("kldivergence",kldivergence),coulomb=createCoulomb({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("coulomb",coulomb),magneticFluxQuantum=createMagneticFluxQuantum({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("magneticFluxQuantum",magneticFluxQuantum),rydberg=createRydberg({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("rydberg",rydberg),log1p$1=createLog1p({Complex:Complex,config:config,divideScalar:divideScalar,log:log,typed:typed}),exports_9("log1p",log1p$1),eigs=createEigs({abs:abs,add:add,addScalar:addScalar,atan:atan,bignumber:bignumber,config:config,cos:cos,equal:equal,inv:inv,matrix:matrix,multiply:multiply,multiplyScalar:multiplyScalar,sin:sin,subtract:subtract,typed:typed}),exports_9("eigs",eigs),mean=createMean({add:add,divide:divide,typed:typed}),exports_9("mean",mean),std=createStd({sqrt:sqrt,typed:typed,variance:variance}),exports_9("std",std),gasConstant=createGasConstant({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("gasConstant",gasConstant),sqrtm=createSqrtm({abs:abs,add:add,identity:identity,inv:inv,max:max,multiply:multiply,size:size,sqrt:sqrt,subtract:subtract,typed:typed}),exports_9("sqrtm",sqrtm),multinomial=createMultinomial({add:add,divide:divide,factorial:factorial,isInteger:isInteger$1,isPositive:isPositive,multiply:multiply,typed:typed}),exports_9("multinomial",multinomial),planckConstant=createPlanckConstant({BigNumber:BigNumber,Unit:Unit,config:config}),exports_9("planckConstant",planckConstant),mad=createMad({abs:abs,map:map$1,median:median,subtract:subtract,typed:typed}),exports_9("mad",mad),math={},classes={},Node=createNode({mathWithTransform:mathWithTransform={}}),exports_9("Node",Node),ArrayNode=createArrayNode({Node:Node}),exports_9("ArrayNode",ArrayNode),BlockNode=createBlockNode({Node:Node,ResultSet:ResultSet}),exports_9("BlockNode",BlockNode),ConstantNode=createConstantNode({Node:Node}),exports_9("ConstantNode",ConstantNode),ObjectNode=createObjectNode({Node:Node}),exports_9("ObjectNode",ObjectNode),ParenthesisNode=createParenthesisNode({Node:Node}),exports_9("ParenthesisNode",ParenthesisNode),RelationalNode=createRelationalNode({Node:Node}),exports_9("RelationalNode",RelationalNode),Chain=createChainClass({math:math}),exports_9("Chain",Chain),reviver=createReviver({classes:classes}),exports_9("reviver",reviver),ConditionalNode=createConditionalNode({Node:Node}),exports_9("ConditionalNode",ConditionalNode),OperatorNode=createOperatorNode({Node:Node}),exports_9("OperatorNode",OperatorNode),RangeNode=createRangeNode({Node:Node}),exports_9("RangeNode",RangeNode),FunctionAssignmentNode=createFunctionAssignmentNode({Node:Node,typed:typed}),exports_9("FunctionAssignmentNode",FunctionAssignmentNode),chain=createChain({Chain:Chain,typed:typed}),exports_9("chain",chain),AccessorNode=createAccessorNode({Node:Node,subset:subset}),exports_9("AccessorNode",AccessorNode),IndexNode=createIndexNode({Node:Node,Range:Range,size:size}),exports_9("IndexNode",IndexNode),SymbolNode=createSymbolNode({Unit:Unit,Node:Node,math:math}),exports_9("SymbolNode",SymbolNode),AssignmentNode=createAssignmentNode({matrix:matrix,Node:Node,subset:subset}),exports_9("AssignmentNode",AssignmentNode),FunctionNode=createFunctionNode({Node:Node,SymbolNode:SymbolNode,math:math}),exports_9("FunctionNode",FunctionNode),parse=createParse({AccessorNode:AccessorNode,ArrayNode:ArrayNode,AssignmentNode:AssignmentNode,BlockNode:BlockNode,ConditionalNode:ConditionalNode,ConstantNode:ConstantNode,FunctionAssignmentNode:FunctionAssignmentNode,FunctionNode:FunctionNode,IndexNode:IndexNode,ObjectNode:ObjectNode,OperatorNode:OperatorNode,ParenthesisNode:ParenthesisNode,RangeNode:RangeNode,RelationalNode:RelationalNode,SymbolNode:SymbolNode,config:config,numeric:numeric,typed:typed}),exports_9("parse",parse),evaluate=createEvaluate({parse:parse,typed:typed}),exports_9("evaluate",evaluate),Help=createHelpClass({parse:parse}),exports_9("Help",Help),compile=createCompile({parse:parse,typed:typed}),exports_9("compile",compile),help=createHelp({Help:Help,mathWithTransform:mathWithTransform,typed:typed}),exports_9("help",help),simplify=createSimplify({bignumber:bignumber,fraction:fraction,ConstantNode:ConstantNode,FunctionNode:FunctionNode,OperatorNode:OperatorNode,ParenthesisNode:ParenthesisNode,SymbolNode:SymbolNode,add:add,config:config,divide:divide,equal:equal,isZero:isZero,mathWithTransform:mathWithTransform,multiply:multiply,parse:parse,pow:pow,subtract:subtract,typed:typed}),exports_9("simplify",simplify),rationalize=createRationalize({bignumber:bignumber,fraction:fraction,ConstantNode:ConstantNode,FunctionNode:FunctionNode,OperatorNode:OperatorNode,ParenthesisNode:ParenthesisNode,SymbolNode:SymbolNode,add:add,config:config,divide:divide,equal:equal,isZero:isZero,mathWithTransform:mathWithTransform,multiply:multiply,parse:parse,pow:pow,simplify:simplify,subtract:subtract,typed:typed}),exports_9("rationalize",rationalize),Parser=createParserClass({parse:parse}),exports_9("Parser",Parser),parser=createParser({Parser:Parser,typed:typed}),exports_9("parser",parser),derivative=createDerivative({ConstantNode:ConstantNode,FunctionNode:FunctionNode,OperatorNode:OperatorNode,ParenthesisNode:ParenthesisNode,SymbolNode:SymbolNode,config:config,equal:equal,isZero:isZero,numeric:numeric,parse:parse,simplify:simplify,typed:typed}),exports_9("derivative",derivative),_extends$5(math,{reviver:reviver,false:_false,null:_null,true:_true,replacer:replacer,i:i,LN10:LN10,LOG10E:LOG10E,NaN:_NaN,pi:pi$1,SQRT1_2:SQRT1_2,tau:tau$1,efimovFactor:efimovFactor,fineStructure:fineStructure,sackurTetrode:sackurTetrode,weakMixingAngle:weakMixingAngle,e:e$1,Infinity:_Infinity,LOG2E:LOG2E,PI:pi$1,version:version$1,E:e$1,phi:phi$1,typed:typed,isInteger:isInteger$1,isNumeric:isNumeric,isPositive:isPositive,isNaN:isNaN$1,equalScalar:equalScalar,number:number,boolean:_boolean,complex:complex,splitUnit:splitUnit,unaryPlus:unaryPlus,apply:apply,cube:cube,expm1:expm1$1,log10:log10$1,multiplyScalar:multiplyScalar,sign:sign$1,square:square,bitNot:bitNot,arg:arg,im:im,not:not,filter:filter$1,forEach:forEach$1,map:map$1,erf:erf,format:format$3,isPrime:isPrime,acos:acos,acot:acot,acsc:acsc,asec:asec,asin:asin,atan:atan,atanh:atanh$1,cosh:cosh$1,coth:coth,csch:csch,sech:sech,sinh:sinh$1,tanh:tanh$1,chain:chain,combinations:combinations,pickRandom:pickRandom,randomInt:randomInt,LN2:LN2,clone:clone$1,hasNumericValue:hasNumericValue,typeOf:typeOf$1,string:string,fraction:fraction,unaryMinus:unaryMinus,addScalar:addScalar,exp:exp,log2:log2$1,sqrt:sqrt,conj:conj,getMatrixDataType:getMatrixDataType,mode:mode,print:print,acosh:acosh$1,acsch:acsch,asinh:asinh$1,cos:cos,csc:csc,sin:sin,combinationsWithRep:combinationsWithRep,random:random,SQRT2:SQRT2,isNegative:isNegative,matrix:matrix,cbrt:cbrt$1,gcd:gcd,mod:mod,nthRoot:nthRoot,xgcd:xgcd,bitAnd:bitAnd,bitXor:bitXor$1,or:or,concat:concat,diag:diag,identity:identity,ones:ones,reshape:reshape$1,size:size,subset:subset,zeros:zeros$1,to:to,round:round,leftShift:leftShift,rightLogShift:rightLogShift,compare:compare,compareText:compareText$1,smaller:smaller,larger:larger,unequal:unequal,sparse:sparse,acoth:acoth,atan2:atan2,sec:sec,add:add,dot:dot,composition:composition,isZero:isZero,abs:abs,floor:floor,multiply:multiply,dotMultiply:dotMultiply,re:re,flatten:flatten$1,resize:resize$1,squeeze:squeeze$1,pow:pow,dotPow:dotPow,rightArithShift:rightArithShift,compareNatural:compareNatural,equalText:equalText,largerEq:largerEq,partitionSelect:partitionSelect,asech:asech,tan:tan,setDifference:setDifference,setIntersect:setIntersect,setMultiplicity:setMultiplicity,setSize:setSize,norm:norm,index:index,quantileSeq:quantileSeq,gamma:gamma,bignumber:bignumber,lcm:lcm,bitOr:bitOr,kron:kron,transpose:transpose,numeric:numeric,and:and,smallerEq:smallerEq,sort:sort,min:min,cot:cot,setDistinct:setDistinct,setPowerset:setPowerset,trace:trace,sum:sum,factorial:factorial,permutations:permutations,ceil:ceil,subtract:subtract,cross:cross,ctranspose:ctranspose,divideScalar:divideScalar,nthRoots:nthRoots,lsolve:lsolve,equal:equal,max:max,setCartesian:setCartesian,setSymDifference:setSymDifference,hypot:hypot,qr:qr,distance:distance,stirlingS2:stirlingS2,catalan:catalan,fix:fix,range:range,prod:prod,dotDivide:dotDivide,deepEqual:deepEqual,createUnit:createUnit,setUnion:setUnion,slu:slu,intersect:intersect,bellNumbers:bellNumbers,atomicMass:atomicMass,bohrMagneton:bohrMagneton,boltzmann:boltzmann,conductanceQuantum:conductanceQuantum,deuteronMass:deuteronMass,electronMass:electronMass,faraday:faraday,firstRadiation:firstRadiation,gravitationConstant:gravitationConstant,hartreeEnergy:hartreeEnergy,klitzing:klitzing,magneticConstant:magneticConstant,molarMass:molarMass,molarPlanckConstant:molarPlanckConstant,neutronMass:neutronMass,planckCharge:planckCharge,planckLength:planckLength,planckTemperature:planckTemperature,protonMass:protonMass,reducedPlanckConstant:reducedPlanckConstant,secondRadiation:secondRadiation,stefanBoltzmann:stefanBoltzmann,vacuumImpedance:vacuumImpedance,xor:xor,row:row,usolve:usolve,unit:unit,avogadro:avogadro,classicalElectronRadius:classicalElectronRadius,electricConstant:electricConstant,fermiCoupling:fermiCoupling,gravity:gravity,loschmidt:loschmidt,molarMassC12:molarMassC12,nuclearMagneton:nuclearMagneton,planckMass:planckMass,quantumOfCirculation:quantumOfCirculation,speedOfLight:speedOfLight,wienDisplacement:wienDisplacement,column:column,lup:lup,det:det,bohrRadius:bohrRadius,elementaryCharge:elementaryCharge,inverseConductanceQuantum:inverseConductanceQuantum,molarVolume:molarVolume,planckTime:planckTime,thomsonCrossSection:thomsonCrossSection,log:log,setIsSubset:setIsSubset,lusolve:lusolve,inv:inv,expm:expm,divide:divide,median:median,variance:variance,kldivergence:kldivergence,coulomb:coulomb,magneticFluxQuantum:magneticFluxQuantum,rydberg:rydberg,log1p:log1p$1,eigs:eigs,mean:mean,std:std,gasConstant:gasConstant,parse:parse,evaluate:evaluate,sqrtm:sqrtm,multinomial:multinomial,planckConstant:planckConstant,compile:compile,help:help,simplify:simplify,rationalize:rationalize,mad:mad,parser:parser,derivative:derivative,config:config}),_extends$5(mathWithTransform,math,{apply:createApplyTransform({isInteger:isInteger$1,typed:typed}),filter:createFilterTransform({typed:typed}),map:createMapTransform({typed:typed}),forEach:createForEachTransform({typed:typed}),subset:createSubsetTransform({matrix:matrix,typed:typed}),index:createIndexTransform({Index:Index}),concat:createConcatTransform({isInteger:isInteger$1,matrix:matrix,typed:typed}),max:createMaxTransform({config:config,larger:larger,numeric:numeric,typed:typed}),min:createMinTransform({config:config,numeric:numeric,smaller:smaller,typed:typed}),sum:createSumTransform({add:add,config:config,numeric:numeric,typed:typed}),range:createRangeTransform({bignumber:bignumber,matrix:matrix,config:config,larger:larger,largerEq:largerEq,smaller:smaller,smallerEq:smallerEq,typed:typed}),column:createColumnTransform({Index:Index,matrix:matrix,range:range,typed:typed}),row:createRowTransform({Index:Index,matrix:matrix,range:range,typed:typed}),std:createStdTransform({sqrt:sqrt,typed:typed,variance:variance}),mean:createMeanTransform({add:add,divide:divide,typed:typed}),variance:createVarianceTransform({add:add,apply:apply,divide:divide,isNaN:isNaN$1,multiply:multiply,subtract:subtract,typed:typed})}),_extends$5(classes,{ResultSet:ResultSet,Complex:Complex,Range:Range,Node:Node,ArrayNode:ArrayNode,BlockNode:BlockNode,ConstantNode:ConstantNode,ObjectNode:ObjectNode,ParenthesisNode:ParenthesisNode,RelationalNode:RelationalNode,Chain:Chain,BigNumber:BigNumber,Matrix:Matrix,ConditionalNode:ConditionalNode,OperatorNode:OperatorNode,Fraction:Fraction,RangeNode:RangeNode,DenseMatrix:DenseMatrix,FunctionAssignmentNode:FunctionAssignmentNode,SparseMatrix:SparseMatrix,ImmutableDenseMatrix:ImmutableDenseMatrix,FibonacciHeap:FibonacciHeap,AccessorNode:AccessorNode,IndexNode:IndexNode,Index:Index,Unit:Unit,SymbolNode:SymbolNode,AssignmentNode:AssignmentNode,Spa:Spa,FunctionNode:FunctionNode,Help:Help,Parser:Parser}),Chain.createProxy(math),exports_9("BigNumberDependencies",BigNumberDependencies={createBigNumberClass:createBigNumberClass}),exports_9("ComplexDependencies",ComplexDependencies={createComplexClass:createComplexClass}),exports_9("MatrixDependencies",MatrixDependencies={createMatrixClass:createMatrixClass}),exports_9("DenseMatrixDependencies",DenseMatrixDependencies={MatrixDependencies:MatrixDependencies,createDenseMatrixClass:createDenseMatrixClass}),exports_9("FractionDependencies",FractionDependencies={createFractionClass:createFractionClass}),exports_9("typedDependencies",typedDependencies={BigNumberDependencies:BigNumberDependencies,ComplexDependencies:ComplexDependencies,DenseMatrixDependencies:DenseMatrixDependencies,FractionDependencies:FractionDependencies,createTyped:createTyped}),exports_9("ResultSetDependencies",ResultSetDependencies={createResultSet:createResultSet}),exports_9("RangeDependencies",RangeDependencies={createRangeClass:createRangeClass}),exports_9("cloneDependencies",cloneDependencies={typedDependencies:typedDependencies,createClone:createClone}),exports_9("isIntegerDependencies",isIntegerDependencies={typedDependencies:typedDependencies,createIsInteger:createIsInteger}),exports_9("isNegativeDependencies",isNegativeDependencies={typedDependencies:typedDependencies,createIsNegative:createIsNegative}),exports_9("isNumericDependencies",isNumericDependencies={typedDependencies:typedDependencies,createIsNumeric:createIsNumeric}),exports_9("hasNumericValueDependencies",hasNumericValueDependencies={isNumericDependencies:isNumericDependencies,typedDependencies:typedDependencies,createHasNumericValue:createHasNumericValue}),exports_9("isPositiveDependencies",isPositiveDependencies={typedDependencies:typedDependencies,createIsPositive:createIsPositive}),exports_9("isZeroDependencies",isZeroDependencies={typedDependencies:typedDependencies,createIsZero:createIsZero}),exports_9("isNaNDependencies",isNaNDependencies={typedDependencies:typedDependencies,createIsNaN:createIsNaN}),exports_9("typeOfDependencies",typeOfDependencies={typedDependencies:typedDependencies,createTypeOf:createTypeOf}),exports_9("equalScalarDependencies",equalScalarDependencies={typedDependencies:typedDependencies,createEqualScalar:createEqualScalar}),exports_9("SparseMatrixDependencies",SparseMatrixDependencies={MatrixDependencies:MatrixDependencies,equalScalarDependencies:equalScalarDependencies,typedDependencies:typedDependencies,createSparseMatrixClass:createSparseMatrixClass}),exports_9("numberDependencies",numberDependencies={typedDependencies:typedDependencies,createNumber:createNumber}),exports_9("stringDependencies",stringDependencies={typedDependencies:typedDependencies,createString:createString}),exports_9("booleanDependencies",booleanDependencies={typedDependencies:typedDependencies,createBoolean:createBoolean}),exports_9("bignumberDependencies",bignumberDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createBignumber:createBignumber}),exports_9("complexDependencies",complexDependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createComplex:createComplex}),exports_9("fractionDependencies",fractionDependencies={FractionDependencies:FractionDependencies,typedDependencies:typedDependencies,createFraction:createFraction}),exports_9("matrixDependencies",matrixDependencies={DenseMatrixDependencies:DenseMatrixDependencies,MatrixDependencies:MatrixDependencies,SparseMatrixDependencies:SparseMatrixDependencies,typedDependencies:typedDependencies,createMatrix:createMatrix}),exports_9("splitUnitDependencies",splitUnitDependencies={typedDependencies:typedDependencies,createSplitUnit:createSplitUnit}),exports_9("unaryMinusDependencies",unaryMinusDependencies={typedDependencies:typedDependencies,createUnaryMinus:createUnaryMinus}),exports_9("unaryPlusDependencies",unaryPlusDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createUnaryPlus:createUnaryPlus}),exports_9("absDependencies",absDependencies={typedDependencies:typedDependencies,createAbs:createAbs}),exports_9("applyDependencies",applyDependencies={isIntegerDependencies:isIntegerDependencies,typedDependencies:typedDependencies,createApply:createApply}),exports_9("addScalarDependencies",addScalarDependencies={typedDependencies:typedDependencies,createAddScalar:createAddScalar}),exports_9("cbrtDependencies",cbrtDependencies={BigNumberDependencies:BigNumberDependencies,ComplexDependencies:ComplexDependencies,FractionDependencies:FractionDependencies,isNegativeDependencies:isNegativeDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,unaryMinusDependencies:unaryMinusDependencies,createCbrt:createCbrt}),exports_9("zerosDependencies",zerosDependencies={BigNumberDependencies:BigNumberDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createZeros:createZeros}),exports_9("roundDependencies",roundDependencies={BigNumberDependencies:BigNumberDependencies,DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,zerosDependencies:zerosDependencies,createRound:createRound}),exports_9("ceilDependencies",ceilDependencies={roundDependencies:roundDependencies,typedDependencies:typedDependencies,createCeil:createCeil}),exports_9("cubeDependencies",cubeDependencies={typedDependencies:typedDependencies,createCube:createCube}),exports_9("expDependencies",expDependencies={typedDependencies:typedDependencies,createExp:createExp}),exports_9("expm1Dependencies",expm1Dependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createExpm1:createExpm1}),exports_9("floorDependencies",floorDependencies={roundDependencies:roundDependencies,typedDependencies:typedDependencies,createFloor:createFloor}),exports_9("fixDependencies",fixDependencies={ComplexDependencies:ComplexDependencies,ceilDependencies:ceilDependencies,floorDependencies:floorDependencies,typedDependencies:typedDependencies,createFix:createFix}),exports_9("gcdDependencies",gcdDependencies={BigNumberDependencies:BigNumberDependencies,DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createGcd:createGcd}),exports_9("lcmDependencies",lcmDependencies={equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createLcm:createLcm}),exports_9("log10Dependencies",log10Dependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createLog10:createLog10}),exports_9("log2Dependencies",log2Dependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createLog2:createLog2}),exports_9("modDependencies",modDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createMod:createMod}),exports_9("multiplyScalarDependencies",multiplyScalarDependencies={typedDependencies:typedDependencies,createMultiplyScalar:createMultiplyScalar}),exports_9("conjDependencies",conjDependencies={typedDependencies:typedDependencies,createConj:createConj}),exports_9("sizeDependencies",sizeDependencies={matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createSize:createSize}),exports_9("dotDependencies",dotDependencies={addScalarDependencies:addScalarDependencies,conjDependencies:conjDependencies,multiplyScalarDependencies:multiplyScalarDependencies,sizeDependencies:sizeDependencies,typedDependencies:typedDependencies,createDot:createDot}),exports_9("multiplyDependencies",multiplyDependencies={addScalarDependencies:addScalarDependencies,dotDependencies:dotDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,multiplyScalarDependencies:multiplyScalarDependencies,typedDependencies:typedDependencies,createMultiply:createMultiply}),exports_9("nthRootDependencies",nthRootDependencies={BigNumberDependencies:BigNumberDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createNthRoot:createNthRoot}),exports_9("signDependencies",signDependencies={BigNumberDependencies:BigNumberDependencies,FractionDependencies:FractionDependencies,complexDependencies:complexDependencies,typedDependencies:typedDependencies,createSign:createSign}),exports_9("sqrtDependencies",sqrtDependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createSqrt:createSqrt}),exports_9("squareDependencies",squareDependencies={typedDependencies:typedDependencies,createSquare:createSquare}),exports_9("subtractDependencies",subtractDependencies={DenseMatrixDependencies:DenseMatrixDependencies,addScalarDependencies:addScalarDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,unaryMinusDependencies:unaryMinusDependencies,createSubtract:createSubtract}),exports_9("xgcdDependencies",xgcdDependencies={BigNumberDependencies:BigNumberDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createXgcd:createXgcd}),exports_9("dotMultiplyDependencies",dotMultiplyDependencies={equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,multiplyScalarDependencies:multiplyScalarDependencies,typedDependencies:typedDependencies,createDotMultiply:createDotMultiply}),exports_9("bitAndDependencies",bitAndDependencies={equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createBitAnd:createBitAnd}),exports_9("bitNotDependencies",bitNotDependencies={typedDependencies:typedDependencies,createBitNot:createBitNot}),exports_9("bitOrDependencies",bitOrDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createBitOr:createBitOr}),exports_9("bitXorDependencies",bitXorDependencies={DenseMatrixDependencies:DenseMatrixDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createBitXor:createBitXor}),exports_9("argDependencies",argDependencies={typedDependencies:typedDependencies,createArg:createArg}),exports_9("imDependencies",imDependencies={typedDependencies:typedDependencies,createIm:createIm}),exports_9("reDependencies",reDependencies={typedDependencies:typedDependencies,createRe:createRe}),exports_9("notDependencies",notDependencies={typedDependencies:typedDependencies,createNot:createNot}),exports_9("orDependencies",orDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createOr:createOr}),exports_9("xorDependencies",xorDependencies={DenseMatrixDependencies:DenseMatrixDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createXor:createXor}),exports_9("concatDependencies",concatDependencies={isIntegerDependencies:isIntegerDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createConcat:createConcat}),exports_9("smallerDependencies",smallerDependencies={DenseMatrixDependencies:DenseMatrixDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createSmaller:createSmaller}),exports_9("ImmutableDenseMatrixDependencies",ImmutableDenseMatrixDependencies={DenseMatrixDependencies:DenseMatrixDependencies,smallerDependencies:smallerDependencies,createImmutableDenseMatrixClass:createImmutableDenseMatrixClass}),exports_9("IndexDependencies",IndexDependencies={ImmutableDenseMatrixDependencies:ImmutableDenseMatrixDependencies,createIndexClass:createIndexClass}),exports_9("largerDependencies",largerDependencies={DenseMatrixDependencies:DenseMatrixDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createLarger:createLarger}),exports_9("largerEqDependencies",largerEqDependencies={DenseMatrixDependencies:DenseMatrixDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createLargerEq:createLargerEq}),exports_9("smallerEqDependencies",smallerEqDependencies={DenseMatrixDependencies:DenseMatrixDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createSmallerEq:createSmallerEq}),exports_9("rangeDependencies",rangeDependencies={bignumberDependencies:bignumberDependencies,matrixDependencies:matrixDependencies,largerDependencies:largerDependencies,largerEqDependencies:largerEqDependencies,smallerDependencies:smallerDependencies,smallerEqDependencies:smallerEqDependencies,typedDependencies:typedDependencies,createRange:createRange}),exports_9("columnDependencies",columnDependencies={IndexDependencies:IndexDependencies,matrixDependencies:matrixDependencies,rangeDependencies:rangeDependencies,typedDependencies:typedDependencies,createColumn:createColumn}),exports_9("crossDependencies",crossDependencies={matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createCross:createCross}),exports_9("diagDependencies",diagDependencies={DenseMatrixDependencies:DenseMatrixDependencies,SparseMatrixDependencies:SparseMatrixDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createDiag:createDiag}),exports_9("filterDependencies",filterDependencies={typedDependencies:typedDependencies,createFilter:createFilter}),exports_9("flattenDependencies",flattenDependencies={matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createFlatten:createFlatten}),exports_9("forEachDependencies",forEachDependencies={typedDependencies:typedDependencies,createForEach:createForEach}),exports_9("getMatrixDataTypeDependencies",getMatrixDataTypeDependencies={typedDependencies:typedDependencies,createGetMatrixDataType:createGetMatrixDataType}),exports_9("identityDependencies",identityDependencies={BigNumberDependencies:BigNumberDependencies,DenseMatrixDependencies:DenseMatrixDependencies,SparseMatrixDependencies:SparseMatrixDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createIdentity:createIdentity}),exports_9("kronDependencies",kronDependencies={matrixDependencies:matrixDependencies,multiplyScalarDependencies:multiplyScalarDependencies,typedDependencies:typedDependencies,createKron:createKron}),exports_9("mapDependencies",mapDependencies={typedDependencies:typedDependencies,createMap:createMap}),exports_9("onesDependencies",onesDependencies={BigNumberDependencies:BigNumberDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createOnes:createOnes}),exports_9("reshapeDependencies",reshapeDependencies={isIntegerDependencies:isIntegerDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createReshape:createReshape}),exports_9("resizeDependencies",resizeDependencies={matrixDependencies:matrixDependencies,createResize:createResize}),exports_9("rowDependencies",rowDependencies={IndexDependencies:IndexDependencies,matrixDependencies:matrixDependencies,rangeDependencies:rangeDependencies,typedDependencies:typedDependencies,createRow:createRow}),exports_9("squeezeDependencies",squeezeDependencies={matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createSqueeze:createSqueeze}),exports_9("subsetDependencies",subsetDependencies={matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createSubset:createSubset}),exports_9("transposeDependencies",transposeDependencies={matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createTranspose:createTranspose}),exports_9("ctransposeDependencies",ctransposeDependencies={conjDependencies:conjDependencies,transposeDependencies:transposeDependencies,typedDependencies:typedDependencies,createCtranspose:createCtranspose}),exports_9("erfDependencies",erfDependencies={typedDependencies:typedDependencies,createErf:createErf}),exports_9("modeDependencies",modeDependencies={isNaNDependencies:isNaNDependencies,isNumericDependencies:isNumericDependencies,typedDependencies:typedDependencies,createMode:createMode}),exports_9("numericDependencies",numericDependencies={bignumberDependencies:bignumberDependencies,fractionDependencies:fractionDependencies,numberDependencies:numberDependencies,createNumeric:createNumeric}),exports_9("prodDependencies",prodDependencies={multiplyScalarDependencies:multiplyScalarDependencies,numericDependencies:numericDependencies,typedDependencies:typedDependencies,createProd:createProd}),exports_9("formatDependencies",formatDependencies={typedDependencies:typedDependencies,createFormat:createFormat}),exports_9("printDependencies",printDependencies={typedDependencies:typedDependencies,createPrint:createPrint}),exports_9("toDependencies",toDependencies={matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createTo:createTo}),exports_9("isPrimeDependencies",isPrimeDependencies={typedDependencies:typedDependencies,createIsPrime:createIsPrime}),exports_9("divideScalarDependencies",divideScalarDependencies={numericDependencies:numericDependencies,typedDependencies:typedDependencies,createDivideScalar:createDivideScalar}),exports_9("powDependencies",powDependencies={ComplexDependencies:ComplexDependencies,fractionDependencies:fractionDependencies,identityDependencies:identityDependencies,matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,numberDependencies:numberDependencies,typedDependencies:typedDependencies,createPow:createPow}),exports_9("logDependencies",logDependencies={ComplexDependencies:ComplexDependencies,divideScalarDependencies:divideScalarDependencies,typedDependencies:typedDependencies,createLog:createLog}),exports_9("log1pDependencies",log1pDependencies={ComplexDependencies:ComplexDependencies,divideScalarDependencies:divideScalarDependencies,logDependencies:logDependencies,typedDependencies:typedDependencies,createLog1p:createLog1p}),exports_9("nthRootsDependencies",nthRootsDependencies={ComplexDependencies:ComplexDependencies,divideScalarDependencies:divideScalarDependencies,typedDependencies:typedDependencies,createNthRoots:createNthRoots}),exports_9("dotPowDependencies",dotPowDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,powDependencies:powDependencies,typedDependencies:typedDependencies,createDotPow:createDotPow}),exports_9("dotDivideDependencies",dotDivideDependencies={DenseMatrixDependencies:DenseMatrixDependencies,divideScalarDependencies:divideScalarDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createDotDivide:createDotDivide}),exports_9("lsolveDependencies",lsolveDependencies={DenseMatrixDependencies:DenseMatrixDependencies,divideScalarDependencies:divideScalarDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,multiplyScalarDependencies:multiplyScalarDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createLsolve:createLsolve}),exports_9("usolveDependencies",usolveDependencies={DenseMatrixDependencies:DenseMatrixDependencies,divideScalarDependencies:divideScalarDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,multiplyScalarDependencies:multiplyScalarDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createUsolve:createUsolve}),exports_9("leftShiftDependencies",leftShiftDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,zerosDependencies:zerosDependencies,createLeftShift:createLeftShift}),exports_9("rightArithShiftDependencies",rightArithShiftDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,zerosDependencies:zerosDependencies,createRightArithShift:createRightArithShift}),exports_9("rightLogShiftDependencies",rightLogShiftDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,zerosDependencies:zerosDependencies,createRightLogShift:createRightLogShift}),exports_9("andDependencies",andDependencies={equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,notDependencies:notDependencies,typedDependencies:typedDependencies,zerosDependencies:zerosDependencies,createAnd:createAnd}),exports_9("compareDependencies",compareDependencies={BigNumberDependencies:BigNumberDependencies,DenseMatrixDependencies:DenseMatrixDependencies,FractionDependencies:FractionDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createCompare:createCompare}),exports_9("compareNaturalDependencies",compareNaturalDependencies={compareDependencies:compareDependencies,typedDependencies:typedDependencies,createCompareNatural:createCompareNatural}),exports_9("compareTextDependencies",compareTextDependencies={matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createCompareText:createCompareText}),exports_9("equalDependencies",equalDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createEqual:createEqual}),exports_9("equalTextDependencies",equalTextDependencies={compareTextDependencies:compareTextDependencies,isZeroDependencies:isZeroDependencies,typedDependencies:typedDependencies,createEqualText:createEqualText}),exports_9("deepEqualDependencies",deepEqualDependencies={equalDependencies:equalDependencies,typedDependencies:typedDependencies,createDeepEqual:createDeepEqual}),exports_9("unequalDependencies",unequalDependencies={DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createUnequal:createUnequal}),exports_9("partitionSelectDependencies",partitionSelectDependencies={compareDependencies:compareDependencies,isNaNDependencies:isNaNDependencies,isNumericDependencies:isNumericDependencies,typedDependencies:typedDependencies,createPartitionSelect:createPartitionSelect}),exports_9("sortDependencies",sortDependencies={compareDependencies:compareDependencies,compareNaturalDependencies:compareNaturalDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createSort:createSort}),exports_9("maxDependencies",maxDependencies={largerDependencies:largerDependencies,numericDependencies:numericDependencies,typedDependencies:typedDependencies,createMax:createMax}),exports_9("minDependencies",minDependencies={numericDependencies:numericDependencies,smallerDependencies:smallerDependencies,typedDependencies:typedDependencies,createMin:createMin}),exports_9("FibonacciHeapDependencies",FibonacciHeapDependencies={largerDependencies:largerDependencies,smallerDependencies:smallerDependencies,createFibonacciHeapClass:createFibonacciHeapClass}),exports_9("SpaDependencies",SpaDependencies={FibonacciHeapDependencies:FibonacciHeapDependencies,addScalarDependencies:addScalarDependencies,equalScalarDependencies:equalScalarDependencies,createSpaClass:createSpaClass}),exports_9("UnitDependencies",UnitDependencies={BigNumberDependencies:BigNumberDependencies,ComplexDependencies:ComplexDependencies,FractionDependencies:FractionDependencies,absDependencies:absDependencies,addScalarDependencies:addScalarDependencies,divideScalarDependencies:divideScalarDependencies,equalDependencies:equalDependencies,fixDependencies:fixDependencies,formatDependencies:formatDependencies,isNumericDependencies:isNumericDependencies,multiplyScalarDependencies:multiplyScalarDependencies,numberDependencies:numberDependencies,powDependencies:powDependencies,roundDependencies:roundDependencies,subtractDependencies:subtractDependencies,createUnitClass:createUnitClass}),exports_9("unitDependencies",unitDependencies={UnitDependencies:UnitDependencies,typedDependencies:typedDependencies,createUnitFunction:createUnitFunction}),exports_9("sparseDependencies",sparseDependencies={SparseMatrixDependencies:SparseMatrixDependencies,typedDependencies:typedDependencies,createSparse:createSparse}),exports_9("createUnitDependencies",createUnitDependencies={UnitDependencies:UnitDependencies,typedDependencies:typedDependencies,createCreateUnit:createCreateUnit}),exports_9("acosDependencies",acosDependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createAcos:createAcos}),exports_9("acoshDependencies",acoshDependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createAcosh:createAcosh}),exports_9("acotDependencies",acotDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createAcot:createAcot}),exports_9("acothDependencies",acothDependencies={BigNumberDependencies:BigNumberDependencies,ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createAcoth:createAcoth}),exports_9("acscDependencies",acscDependencies={BigNumberDependencies:BigNumberDependencies,ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createAcsc:createAcsc}),exports_9("acschDependencies",acschDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createAcsch:createAcsch}),exports_9("asecDependencies",asecDependencies={BigNumberDependencies:BigNumberDependencies,ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createAsec:createAsec}),exports_9("asechDependencies",asechDependencies={BigNumberDependencies:BigNumberDependencies,ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createAsech:createAsech}),exports_9("asinDependencies",asinDependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createAsin:createAsin}),exports_9("asinhDependencies",asinhDependencies={typedDependencies:typedDependencies,createAsinh:createAsinh}),exports_9("atanDependencies",atanDependencies={typedDependencies:typedDependencies,createAtan:createAtan}),exports_9("atan2Dependencies",atan2Dependencies={BigNumberDependencies:BigNumberDependencies,DenseMatrixDependencies:DenseMatrixDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createAtan2:createAtan2}),exports_9("atanhDependencies",atanhDependencies={ComplexDependencies:ComplexDependencies,typedDependencies:typedDependencies,createAtanh:createAtanh}),exports_9("cosDependencies",cosDependencies={typedDependencies:typedDependencies,createCos:createCos}),exports_9("coshDependencies",coshDependencies={typedDependencies:typedDependencies,createCosh:createCosh}),exports_9("cotDependencies",cotDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createCot:createCot}),exports_9("cothDependencies",cothDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createCoth:createCoth}),exports_9("cscDependencies",cscDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createCsc:createCsc}),exports_9("cschDependencies",cschDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createCsch:createCsch}),exports_9("secDependencies",secDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createSec:createSec}),exports_9("sechDependencies",sechDependencies={BigNumberDependencies:BigNumberDependencies,typedDependencies:typedDependencies,createSech:createSech}),exports_9("sinDependencies",sinDependencies={typedDependencies:typedDependencies,createSin:createSin}),exports_9("sinhDependencies",sinhDependencies={typedDependencies:typedDependencies,createSinh:createSinh}),exports_9("tanDependencies",tanDependencies={typedDependencies:typedDependencies,createTan:createTan}),exports_9("tanhDependencies",tanhDependencies={typedDependencies:typedDependencies,createTanh:createTanh}),exports_9("setCartesianDependencies",setCartesianDependencies={DenseMatrixDependencies:DenseMatrixDependencies,IndexDependencies:IndexDependencies,compareNaturalDependencies:compareNaturalDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetCartesian:createSetCartesian}),exports_9("setDifferenceDependencies",setDifferenceDependencies={DenseMatrixDependencies:DenseMatrixDependencies,IndexDependencies:IndexDependencies,compareNaturalDependencies:compareNaturalDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetDifference:createSetDifference}),exports_9("setDistinctDependencies",setDistinctDependencies={DenseMatrixDependencies:DenseMatrixDependencies,IndexDependencies:IndexDependencies,compareNaturalDependencies:compareNaturalDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetDistinct:createSetDistinct}),exports_9("setIntersectDependencies",setIntersectDependencies={DenseMatrixDependencies:DenseMatrixDependencies,IndexDependencies:IndexDependencies,compareNaturalDependencies:compareNaturalDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetIntersect:createSetIntersect}),exports_9("setIsSubsetDependencies",setIsSubsetDependencies={IndexDependencies:IndexDependencies,compareNaturalDependencies:compareNaturalDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetIsSubset:createSetIsSubset}),exports_9("setMultiplicityDependencies",setMultiplicityDependencies={IndexDependencies:IndexDependencies,compareNaturalDependencies:compareNaturalDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetMultiplicity:createSetMultiplicity}),exports_9("setPowersetDependencies",setPowersetDependencies={IndexDependencies:IndexDependencies,compareNaturalDependencies:compareNaturalDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetPowerset:createSetPowerset}),exports_9("setSizeDependencies",setSizeDependencies={compareNaturalDependencies:compareNaturalDependencies,typedDependencies:typedDependencies,createSetSize:createSetSize}),exports_9("setSymDifferenceDependencies",setSymDifferenceDependencies={IndexDependencies:IndexDependencies,concatDependencies:concatDependencies,setDifferenceDependencies:setDifferenceDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetSymDifference:createSetSymDifference}),exports_9("setUnionDependencies",setUnionDependencies={IndexDependencies:IndexDependencies,concatDependencies:concatDependencies,setIntersectDependencies:setIntersectDependencies,setSymDifferenceDependencies:setSymDifferenceDependencies,sizeDependencies:sizeDependencies,subsetDependencies:subsetDependencies,typedDependencies:typedDependencies,createSetUnion:createSetUnion}),exports_9("addDependencies",addDependencies={DenseMatrixDependencies:DenseMatrixDependencies,SparseMatrixDependencies:SparseMatrixDependencies,addScalarDependencies:addScalarDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createAdd:createAdd}),exports_9("hypotDependencies",hypotDependencies={absDependencies:absDependencies,addScalarDependencies:addScalarDependencies,divideScalarDependencies:divideScalarDependencies,isPositiveDependencies:isPositiveDependencies,multiplyScalarDependencies:multiplyScalarDependencies,smallerDependencies:smallerDependencies,sqrtDependencies:sqrtDependencies,typedDependencies:typedDependencies,createHypot:createHypot}),exports_9("normDependencies",normDependencies={absDependencies:absDependencies,addDependencies:addDependencies,conjDependencies:conjDependencies,equalScalarDependencies:equalScalarDependencies,largerDependencies:largerDependencies,matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,powDependencies:powDependencies,smallerDependencies:smallerDependencies,sqrtDependencies:sqrtDependencies,typedDependencies:typedDependencies,createNorm:createNorm}),exports_9("traceDependencies",traceDependencies={addDependencies:addDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createTrace:createTrace}),exports_9("indexDependencies",indexDependencies={IndexDependencies:IndexDependencies,typedDependencies:typedDependencies,createIndex:createIndex}),exports_9("NodeDependencies",NodeDependencies={createNode:createNode}),exports_9("AccessorNodeDependencies",AccessorNodeDependencies={NodeDependencies:NodeDependencies,subsetDependencies:subsetDependencies,createAccessorNode:createAccessorNode}),exports_9("ArrayNodeDependencies",ArrayNodeDependencies={NodeDependencies:NodeDependencies,createArrayNode:createArrayNode}),exports_9("AssignmentNodeDependencies",AssignmentNodeDependencies={matrixDependencies:matrixDependencies,NodeDependencies:NodeDependencies,subsetDependencies:subsetDependencies,createAssignmentNode:createAssignmentNode}),exports_9("BlockNodeDependencies",BlockNodeDependencies={NodeDependencies:NodeDependencies,ResultSetDependencies:ResultSetDependencies,createBlockNode:createBlockNode}),exports_9("ConditionalNodeDependencies",ConditionalNodeDependencies={NodeDependencies:NodeDependencies,createConditionalNode:createConditionalNode}),exports_9("ConstantNodeDependencies",ConstantNodeDependencies={NodeDependencies:NodeDependencies,createConstantNode:createConstantNode}),exports_9("FunctionAssignmentNodeDependencies",FunctionAssignmentNodeDependencies={NodeDependencies:NodeDependencies,typedDependencies:typedDependencies,createFunctionAssignmentNode:createFunctionAssignmentNode}),exports_9("IndexNodeDependencies",IndexNodeDependencies={NodeDependencies:NodeDependencies,RangeDependencies:RangeDependencies,sizeDependencies:sizeDependencies,createIndexNode:createIndexNode}),exports_9("ObjectNodeDependencies",ObjectNodeDependencies={NodeDependencies:NodeDependencies,createObjectNode:createObjectNode}),exports_9("OperatorNodeDependencies",OperatorNodeDependencies={NodeDependencies:NodeDependencies,createOperatorNode:createOperatorNode}),exports_9("ParenthesisNodeDependencies",ParenthesisNodeDependencies={NodeDependencies:NodeDependencies,createParenthesisNode:createParenthesisNode}),exports_9("RangeNodeDependencies",RangeNodeDependencies={NodeDependencies:NodeDependencies,createRangeNode:createRangeNode}),exports_9("RelationalNodeDependencies",RelationalNodeDependencies={NodeDependencies:NodeDependencies,createRelationalNode:createRelationalNode}),exports_9("SymbolNodeDependencies",SymbolNodeDependencies={UnitDependencies:UnitDependencies,NodeDependencies:NodeDependencies,createSymbolNode:createSymbolNode}),exports_9("FunctionNodeDependencies",FunctionNodeDependencies={NodeDependencies:NodeDependencies,SymbolNodeDependencies:SymbolNodeDependencies,createFunctionNode:createFunctionNode}),exports_9("parseDependencies",parseDependencies={AccessorNodeDependencies:AccessorNodeDependencies,ArrayNodeDependencies:ArrayNodeDependencies,AssignmentNodeDependencies:AssignmentNodeDependencies,BlockNodeDependencies:BlockNodeDependencies,ConditionalNodeDependencies:ConditionalNodeDependencies,ConstantNodeDependencies:ConstantNodeDependencies,FunctionAssignmentNodeDependencies:FunctionAssignmentNodeDependencies,FunctionNodeDependencies:FunctionNodeDependencies,IndexNodeDependencies:IndexNodeDependencies,ObjectNodeDependencies:ObjectNodeDependencies,OperatorNodeDependencies:OperatorNodeDependencies,ParenthesisNodeDependencies:ParenthesisNodeDependencies,RangeNodeDependencies:RangeNodeDependencies,RelationalNodeDependencies:RelationalNodeDependencies,SymbolNodeDependencies:SymbolNodeDependencies,numericDependencies:numericDependencies,typedDependencies:typedDependencies,createParse:createParse}),exports_9("compileDependencies",compileDependencies={parseDependencies:parseDependencies,typedDependencies:typedDependencies,createCompile:createCompile}),exports_9("evaluateDependencies",evaluateDependencies={parseDependencies:parseDependencies,typedDependencies:typedDependencies,createEvaluate:createEvaluate}),exports_9("ParserDependencies",ParserDependencies={parseDependencies:parseDependencies,createParserClass:createParserClass}),exports_9("parserDependencies",parserDependencies={ParserDependencies:ParserDependencies,typedDependencies:typedDependencies,createParser:createParser}),exports_9("lupDependencies",lupDependencies={DenseMatrixDependencies:DenseMatrixDependencies,SpaDependencies:SpaDependencies,SparseMatrixDependencies:SparseMatrixDependencies,absDependencies:absDependencies,addScalarDependencies:addScalarDependencies,divideScalarDependencies:divideScalarDependencies,equalScalarDependencies:equalScalarDependencies,largerDependencies:largerDependencies,matrixDependencies:matrixDependencies,multiplyScalarDependencies:multiplyScalarDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,unaryMinusDependencies:unaryMinusDependencies,createLup:createLup}),exports_9("qrDependencies",qrDependencies={addScalarDependencies:addScalarDependencies,complexDependencies:complexDependencies,conjDependencies:conjDependencies,divideScalarDependencies:divideScalarDependencies,equalDependencies:equalDependencies,identityDependencies:identityDependencies,isZeroDependencies:isZeroDependencies,matrixDependencies:matrixDependencies,multiplyScalarDependencies:multiplyScalarDependencies,signDependencies:signDependencies,sqrtDependencies:sqrtDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,unaryMinusDependencies:unaryMinusDependencies,zerosDependencies:zerosDependencies,createQr:createQr}),exports_9("sluDependencies",sluDependencies={SparseMatrixDependencies:SparseMatrixDependencies,absDependencies:absDependencies,addDependencies:addDependencies,divideScalarDependencies:divideScalarDependencies,largerDependencies:largerDependencies,largerEqDependencies:largerEqDependencies,multiplyDependencies:multiplyDependencies,subtractDependencies:subtractDependencies,transposeDependencies:transposeDependencies,typedDependencies:typedDependencies,createSlu:createSlu}),exports_9("lusolveDependencies",lusolveDependencies={DenseMatrixDependencies:DenseMatrixDependencies,lsolveDependencies:lsolveDependencies,lupDependencies:lupDependencies,matrixDependencies:matrixDependencies,sluDependencies:sluDependencies,typedDependencies:typedDependencies,usolveDependencies:usolveDependencies,createLusolve:createLusolve}),exports_9("HelpDependencies",HelpDependencies={parseDependencies:parseDependencies,createHelpClass:createHelpClass}),exports_9("ChainDependencies",ChainDependencies={createChainClass:createChainClass}),exports_9("helpDependencies",helpDependencies={HelpDependencies:HelpDependencies,typedDependencies:typedDependencies,createHelp:createHelp}),exports_9("chainDependencies",chainDependencies={ChainDependencies:ChainDependencies,typedDependencies:typedDependencies,createChain:createChain}),exports_9("detDependencies",detDependencies={lupDependencies:lupDependencies,matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,unaryMinusDependencies:unaryMinusDependencies,createDet:createDet}),exports_9("invDependencies",invDependencies={absDependencies:absDependencies,addScalarDependencies:addScalarDependencies,detDependencies:detDependencies,divideScalarDependencies:divideScalarDependencies,identityDependencies:identityDependencies,matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,typedDependencies:typedDependencies,unaryMinusDependencies:unaryMinusDependencies,createInv:createInv}),exports_9("eigsDependencies",eigsDependencies={absDependencies:absDependencies,addDependencies:addDependencies,addScalarDependencies:addScalarDependencies,atanDependencies:atanDependencies,bignumberDependencies:bignumberDependencies,cosDependencies:cosDependencies,equalDependencies:equalDependencies,invDependencies:invDependencies,matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,multiplyScalarDependencies:multiplyScalarDependencies,sinDependencies:sinDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createEigs:createEigs}),exports_9("expmDependencies",expmDependencies={absDependencies:absDependencies,addDependencies:addDependencies,identityDependencies:identityDependencies,invDependencies:invDependencies,multiplyDependencies:multiplyDependencies,typedDependencies:typedDependencies,createExpm:createExpm}),exports_9("sqrtmDependencies",sqrtmDependencies={absDependencies:absDependencies,addDependencies:addDependencies,identityDependencies:identityDependencies,invDependencies:invDependencies,maxDependencies:maxDependencies,multiplyDependencies:multiplyDependencies,sizeDependencies:sizeDependencies,sqrtDependencies:sqrtDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createSqrtm:createSqrtm}),exports_9("divideDependencies",divideDependencies={divideScalarDependencies:divideScalarDependencies,equalScalarDependencies:equalScalarDependencies,invDependencies:invDependencies,matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,typedDependencies:typedDependencies,createDivide:createDivide}),exports_9("distanceDependencies",distanceDependencies={absDependencies:absDependencies,addScalarDependencies:addScalarDependencies,divideScalarDependencies:divideScalarDependencies,multiplyScalarDependencies:multiplyScalarDependencies,sqrtDependencies:sqrtDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,unaryMinusDependencies:unaryMinusDependencies,createDistance:createDistance}),exports_9("intersectDependencies",intersectDependencies={absDependencies:absDependencies,addDependencies:addDependencies,addScalarDependencies:addScalarDependencies,divideScalarDependencies:divideScalarDependencies,equalScalarDependencies:equalScalarDependencies,matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,multiplyScalarDependencies:multiplyScalarDependencies,smallerDependencies:smallerDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createIntersect:createIntersect}),exports_9("sumDependencies",sumDependencies={addDependencies:addDependencies,numericDependencies:numericDependencies,typedDependencies:typedDependencies,createSum:createSum}),exports_9("meanDependencies",meanDependencies={addDependencies:addDependencies,divideDependencies:divideDependencies,typedDependencies:typedDependencies,createMean:createMean}),exports_9("medianDependencies",medianDependencies={addDependencies:addDependencies,compareDependencies:compareDependencies,divideDependencies:divideDependencies,partitionSelectDependencies:partitionSelectDependencies,typedDependencies:typedDependencies,createMedian:createMedian}),exports_9("madDependencies",madDependencies={absDependencies:absDependencies,mapDependencies:mapDependencies,medianDependencies:medianDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createMad:createMad}),exports_9("varianceDependencies",varianceDependencies={addDependencies:addDependencies,applyDependencies:applyDependencies,divideDependencies:divideDependencies,isNaNDependencies:isNaNDependencies,multiplyDependencies:multiplyDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createVariance:createVariance}),exports_9("quantileSeqDependencies",quantileSeqDependencies={addDependencies:addDependencies,compareDependencies:compareDependencies,multiplyDependencies:multiplyDependencies,partitionSelectDependencies:partitionSelectDependencies,typedDependencies:typedDependencies,createQuantileSeq:createQuantileSeq}),exports_9("stdDependencies",stdDependencies={sqrtDependencies:sqrtDependencies,typedDependencies:typedDependencies,varianceDependencies:varianceDependencies,createStd:createStd}),exports_9("combinationsDependencies",combinationsDependencies={typedDependencies:typedDependencies,createCombinations:createCombinations}),exports_9("combinationsWithRepDependencies",combinationsWithRepDependencies={typedDependencies:typedDependencies,createCombinationsWithRep:createCombinationsWithRep}),exports_9("gammaDependencies",gammaDependencies={BigNumberDependencies:BigNumberDependencies,ComplexDependencies:ComplexDependencies,multiplyScalarDependencies:multiplyScalarDependencies,powDependencies:powDependencies,typedDependencies:typedDependencies,createGamma:createGamma}),exports_9("factorialDependencies",factorialDependencies={gammaDependencies:gammaDependencies,typedDependencies:typedDependencies,createFactorial:createFactorial}),exports_9("kldivergenceDependencies",kldivergenceDependencies={divideDependencies:divideDependencies,dotDivideDependencies:dotDivideDependencies,isNumericDependencies:isNumericDependencies,logDependencies:logDependencies,matrixDependencies:matrixDependencies,multiplyDependencies:multiplyDependencies,sumDependencies:sumDependencies,typedDependencies:typedDependencies,createKldivergence:createKldivergence}),exports_9("multinomialDependencies",multinomialDependencies={addDependencies:addDependencies,divideDependencies:divideDependencies,factorialDependencies:factorialDependencies,isIntegerDependencies:isIntegerDependencies,isPositiveDependencies:isPositiveDependencies,multiplyDependencies:multiplyDependencies,typedDependencies:typedDependencies,createMultinomial:createMultinomial}),exports_9("permutationsDependencies",permutationsDependencies={factorialDependencies:factorialDependencies,typedDependencies:typedDependencies,createPermutations:createPermutations}),exports_9("pickRandomDependencies",pickRandomDependencies={typedDependencies:typedDependencies,createPickRandom:createPickRandom}),exports_9("randomDependencies",randomDependencies={typedDependencies:typedDependencies,createRandom:createRandom}),exports_9("randomIntDependencies",randomIntDependencies={typedDependencies:typedDependencies,createRandomInt:createRandomInt}),exports_9("stirlingS2Dependencies",stirlingS2Dependencies={addScalarDependencies:addScalarDependencies,combinationsDependencies:combinationsDependencies,divideScalarDependencies:divideScalarDependencies,factorialDependencies:factorialDependencies,isIntegerDependencies:isIntegerDependencies,isNegativeDependencies:isNegativeDependencies,largerDependencies:largerDependencies,multiplyScalarDependencies:multiplyScalarDependencies,powDependencies:powDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createStirlingS2:createStirlingS2}),exports_9("bellNumbersDependencies",bellNumbersDependencies={addScalarDependencies:addScalarDependencies,isIntegerDependencies:isIntegerDependencies,isNegativeDependencies:isNegativeDependencies,stirlingS2Dependencies:stirlingS2Dependencies,typedDependencies:typedDependencies,createBellNumbers:createBellNumbers}),exports_9("catalanDependencies",catalanDependencies={addScalarDependencies:addScalarDependencies,combinationsDependencies:combinationsDependencies,divideScalarDependencies:divideScalarDependencies,isIntegerDependencies:isIntegerDependencies,isNegativeDependencies:isNegativeDependencies,multiplyScalarDependencies:multiplyScalarDependencies,typedDependencies:typedDependencies,createCatalan:createCatalan}),exports_9("compositionDependencies",compositionDependencies={addScalarDependencies:addScalarDependencies,combinationsDependencies:combinationsDependencies,isIntegerDependencies:isIntegerDependencies,isNegativeDependencies:isNegativeDependencies,isPositiveDependencies:isPositiveDependencies,largerDependencies:largerDependencies,typedDependencies:typedDependencies,createComposition:createComposition}),exports_9("simplifyDependencies",simplifyDependencies={bignumberDependencies:bignumberDependencies,fractionDependencies:fractionDependencies,ConstantNodeDependencies:ConstantNodeDependencies,FunctionNodeDependencies:FunctionNodeDependencies,OperatorNodeDependencies:OperatorNodeDependencies,ParenthesisNodeDependencies:ParenthesisNodeDependencies,SymbolNodeDependencies:SymbolNodeDependencies,addDependencies:addDependencies,divideDependencies:divideDependencies,equalDependencies:equalDependencies,isZeroDependencies:isZeroDependencies,multiplyDependencies:multiplyDependencies,parseDependencies:parseDependencies,powDependencies:powDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createSimplify:createSimplify}),exports_9("derivativeDependencies",derivativeDependencies={ConstantNodeDependencies:ConstantNodeDependencies,FunctionNodeDependencies:FunctionNodeDependencies,OperatorNodeDependencies:OperatorNodeDependencies,ParenthesisNodeDependencies:ParenthesisNodeDependencies,SymbolNodeDependencies:SymbolNodeDependencies,equalDependencies:equalDependencies,isZeroDependencies:isZeroDependencies,numericDependencies:numericDependencies,parseDependencies:parseDependencies,simplifyDependencies:simplifyDependencies,typedDependencies:typedDependencies,createDerivative:createDerivative}),exports_9("rationalizeDependencies",rationalizeDependencies={bignumberDependencies:bignumberDependencies,fractionDependencies:fractionDependencies,ConstantNodeDependencies:ConstantNodeDependencies,FunctionNodeDependencies:FunctionNodeDependencies,OperatorNodeDependencies:OperatorNodeDependencies,ParenthesisNodeDependencies:ParenthesisNodeDependencies,SymbolNodeDependencies:SymbolNodeDependencies,addDependencies:addDependencies,divideDependencies:divideDependencies,equalDependencies:equalDependencies,isZeroDependencies:isZeroDependencies,multiplyDependencies:multiplyDependencies,parseDependencies:parseDependencies,powDependencies:powDependencies,simplifyDependencies:simplifyDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createRationalize:createRationalize}),exports_9("reviverDependencies",reviverDependencies={createReviver:createReviver}),exports_9("replacerDependencies",replacerDependencies={createReplacer:createReplacer}),exports_9("eDependencies",eDependencies={BigNumberDependencies:BigNumberDependencies,createE:createE}),exports_9("EDependencies",EDependencies={eDependencies:eDependencies,createUppercaseE:createUppercaseE}),exports_9("falseDependencies",falseDependencies={createFalse:createFalse}),exports_9("iDependencies",iDependencies={ComplexDependencies:ComplexDependencies,createI:createI}),exports_9("InfinityDependencies",InfinityDependencies={BigNumberDependencies:BigNumberDependencies,createInfinity:createInfinity}),exports_9("LN10Dependencies",LN10Dependencies={BigNumberDependencies:BigNumberDependencies,createLN10:createLN10}),exports_9("LN2Dependencies",LN2Dependencies={BigNumberDependencies:BigNumberDependencies,createLN2:createLN2}),exports_9("LOG10EDependencies",LOG10EDependencies={BigNumberDependencies:BigNumberDependencies,createLOG10E:createLOG10E}),exports_9("LOG2EDependencies",LOG2EDependencies={BigNumberDependencies:BigNumberDependencies,createLOG2E:createLOG2E}),exports_9("NaNDependencies",NaNDependencies={BigNumberDependencies:BigNumberDependencies,createNaN:createNaN}),exports_9("nullDependencies",nullDependencies={createNull:createNull}),exports_9("phiDependencies",phiDependencies={BigNumberDependencies:BigNumberDependencies,createPhi:createPhi}),exports_9("piDependencies",piDependencies={BigNumberDependencies:BigNumberDependencies,createPi:createPi}),exports_9("PIDependencies",PIDependencies={piDependencies:piDependencies,createUppercasePi:createUppercasePi}),exports_9("SQRT1_2Dependencies",SQRT1_2Dependencies={BigNumberDependencies:BigNumberDependencies,createSQRT1_2:createSQRT1_2}),exports_9("SQRT2Dependencies",SQRT2Dependencies={BigNumberDependencies:BigNumberDependencies,createSQRT2:createSQRT2}),exports_9("tauDependencies",tauDependencies={BigNumberDependencies:BigNumberDependencies,createTau:createTau}),exports_9("trueDependencies",trueDependencies={createTrue:createTrue}),exports_9("versionDependencies",versionDependencies={createVersion:createVersion}),exports_9("atomicMassDependencies",atomicMassDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createAtomicMass:createAtomicMass}),exports_9("avogadroDependencies",avogadroDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createAvogadro:createAvogadro}),exports_9("bohrMagnetonDependencies",bohrMagnetonDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createBohrMagneton:createBohrMagneton}),exports_9("bohrRadiusDependencies",bohrRadiusDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createBohrRadius:createBohrRadius}),exports_9("boltzmannDependencies",boltzmannDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createBoltzmann:createBoltzmann}),exports_9("classicalElectronRadiusDependencies",classicalElectronRadiusDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createClassicalElectronRadius:createClassicalElectronRadius}),exports_9("conductanceQuantumDependencies",conductanceQuantumDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createConductanceQuantum:createConductanceQuantum}),exports_9("coulombDependencies",coulombDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createCoulomb:createCoulomb}),exports_9("deuteronMassDependencies",deuteronMassDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createDeuteronMass:createDeuteronMass}),exports_9("efimovFactorDependencies",efimovFactorDependencies={BigNumberDependencies:BigNumberDependencies,createEfimovFactor:createEfimovFactor}),exports_9("electricConstantDependencies",electricConstantDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createElectricConstant:createElectricConstant}),exports_9("electronMassDependencies",electronMassDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createElectronMass:createElectronMass}),exports_9("elementaryChargeDependencies",elementaryChargeDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createElementaryCharge:createElementaryCharge}),exports_9("faradayDependencies",faradayDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createFaraday:createFaraday}),exports_9("fermiCouplingDependencies",fermiCouplingDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createFermiCoupling:createFermiCoupling}),exports_9("fineStructureDependencies",fineStructureDependencies={BigNumberDependencies:BigNumberDependencies,createFineStructure:createFineStructure}),exports_9("firstRadiationDependencies",firstRadiationDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createFirstRadiation:createFirstRadiation}),exports_9("gasConstantDependencies",gasConstantDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createGasConstant:createGasConstant}),exports_9("gravitationConstantDependencies",gravitationConstantDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createGravitationConstant:createGravitationConstant}),exports_9("gravityDependencies",gravityDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createGravity:createGravity}),exports_9("hartreeEnergyDependencies",hartreeEnergyDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createHartreeEnergy:createHartreeEnergy}),exports_9("inverseConductanceQuantumDependencies",inverseConductanceQuantumDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createInverseConductanceQuantum:createInverseConductanceQuantum}),exports_9("klitzingDependencies",klitzingDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createKlitzing:createKlitzing}),exports_9("loschmidtDependencies",loschmidtDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createLoschmidt:createLoschmidt}),exports_9("magneticConstantDependencies",magneticConstantDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createMagneticConstant:createMagneticConstant}),exports_9("magneticFluxQuantumDependencies",magneticFluxQuantumDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createMagneticFluxQuantum:createMagneticFluxQuantum}),exports_9("molarMassDependencies",molarMassDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createMolarMass:createMolarMass}),exports_9("molarMassC12Dependencies",molarMassC12Dependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createMolarMassC12:createMolarMassC12}),exports_9("molarPlanckConstantDependencies",molarPlanckConstantDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createMolarPlanckConstant:createMolarPlanckConstant}),exports_9("molarVolumeDependencies",molarVolumeDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createMolarVolume:createMolarVolume}),exports_9("neutronMassDependencies",neutronMassDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createNeutronMass:createNeutronMass}),exports_9("nuclearMagnetonDependencies",nuclearMagnetonDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createNuclearMagneton:createNuclearMagneton}),exports_9("planckChargeDependencies",planckChargeDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createPlanckCharge:createPlanckCharge}),exports_9("planckConstantDependencies",planckConstantDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createPlanckConstant:createPlanckConstant}),exports_9("planckLengthDependencies",planckLengthDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createPlanckLength:createPlanckLength}),exports_9("planckMassDependencies",planckMassDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createPlanckMass:createPlanckMass}),exports_9("planckTemperatureDependencies",planckTemperatureDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createPlanckTemperature:createPlanckTemperature}),exports_9("planckTimeDependencies",planckTimeDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createPlanckTime:createPlanckTime}),exports_9("protonMassDependencies",protonMassDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createProtonMass:createProtonMass}),exports_9("quantumOfCirculationDependencies",quantumOfCirculationDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createQuantumOfCirculation:createQuantumOfCirculation}),exports_9("reducedPlanckConstantDependencies",reducedPlanckConstantDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createReducedPlanckConstant:createReducedPlanckConstant}),exports_9("rydbergDependencies",rydbergDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createRydberg:createRydberg}),exports_9("sackurTetrodeDependencies",sackurTetrodeDependencies={BigNumberDependencies:BigNumberDependencies,createSackurTetrode:createSackurTetrode}),exports_9("secondRadiationDependencies",secondRadiationDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createSecondRadiation:createSecondRadiation}),exports_9("speedOfLightDependencies",speedOfLightDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createSpeedOfLight:createSpeedOfLight}),exports_9("stefanBoltzmannDependencies",stefanBoltzmannDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createStefanBoltzmann:createStefanBoltzmann}),exports_9("thomsonCrossSectionDependencies",thomsonCrossSectionDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createThomsonCrossSection:createThomsonCrossSection}),exports_9("vacuumImpedanceDependencies",vacuumImpedanceDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createVacuumImpedance:createVacuumImpedance}),exports_9("weakMixingAngleDependencies",weakMixingAngleDependencies={BigNumberDependencies:BigNumberDependencies,createWeakMixingAngle:createWeakMixingAngle}),exports_9("wienDisplacementDependencies",wienDisplacementDependencies={BigNumberDependencies:BigNumberDependencies,UnitDependencies:UnitDependencies,createWienDisplacement:createWienDisplacement}),exports_9("applyTransformDependencies",applyTransformDependencies={isIntegerDependencies:isIntegerDependencies,typedDependencies:typedDependencies,createApplyTransform:createApplyTransform}),exports_9("columnTransformDependencies",columnTransformDependencies={IndexDependencies:IndexDependencies,matrixDependencies:matrixDependencies,rangeDependencies:rangeDependencies,typedDependencies:typedDependencies,createColumnTransform:createColumnTransform}),exports_9("filterTransformDependencies",filterTransformDependencies={typedDependencies:typedDependencies,createFilterTransform:createFilterTransform}),exports_9("forEachTransformDependencies",forEachTransformDependencies={typedDependencies:typedDependencies,createForEachTransform:createForEachTransform}),exports_9("indexTransformDependencies",indexTransformDependencies={IndexDependencies:IndexDependencies,createIndexTransform:createIndexTransform}),exports_9("mapTransformDependencies",mapTransformDependencies={typedDependencies:typedDependencies,createMapTransform:createMapTransform}),exports_9("maxTransformDependencies",maxTransformDependencies={largerDependencies:largerDependencies,numericDependencies:numericDependencies,typedDependencies:typedDependencies,createMaxTransform:createMaxTransform}),exports_9("meanTransformDependencies",meanTransformDependencies={addDependencies:addDependencies,divideDependencies:divideDependencies,typedDependencies:typedDependencies,createMeanTransform:createMeanTransform}),exports_9("minTransformDependencies",minTransformDependencies={numericDependencies:numericDependencies,smallerDependencies:smallerDependencies,typedDependencies:typedDependencies,createMinTransform:createMinTransform}),exports_9("rangeTransformDependencies",rangeTransformDependencies={bignumberDependencies:bignumberDependencies,matrixDependencies:matrixDependencies,largerDependencies:largerDependencies,largerEqDependencies:largerEqDependencies,smallerDependencies:smallerDependencies,smallerEqDependencies:smallerEqDependencies,typedDependencies:typedDependencies,createRangeTransform:createRangeTransform}),exports_9("rowTransformDependencies",rowTransformDependencies={IndexDependencies:IndexDependencies,matrixDependencies:matrixDependencies,rangeDependencies:rangeDependencies,typedDependencies:typedDependencies,createRowTransform:createRowTransform}),exports_9("subsetTransformDependencies",subsetTransformDependencies={matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createSubsetTransform:createSubsetTransform}),exports_9("concatTransformDependencies",concatTransformDependencies={isIntegerDependencies:isIntegerDependencies,matrixDependencies:matrixDependencies,typedDependencies:typedDependencies,createConcatTransform:createConcatTransform}),exports_9("stdTransformDependencies",stdTransformDependencies={sqrtDependencies:sqrtDependencies,typedDependencies:typedDependencies,varianceDependencies:varianceDependencies,createStdTransform:createStdTransform}),exports_9("sumTransformDependencies",sumTransformDependencies={addDependencies:addDependencies,numericDependencies:numericDependencies,typedDependencies:typedDependencies,createSumTransform:createSumTransform}),exports_9("varianceTransformDependencies",varianceTransformDependencies={addDependencies:addDependencies,applyDependencies:applyDependencies,divideDependencies:divideDependencies,isNaNDependencies:isNaNDependencies,multiplyDependencies:multiplyDependencies,subtractDependencies:subtractDependencies,typedDependencies:typedDependencies,createVarianceTransform:createVarianceTransform}),exports_9("all",all=allFactories),exports_9("default",null),exports_9("__esModule",__esModule=!0)}}})),System.register("https://cdn.skypack.dev/mathjs",["https://cdn.skypack.dev/-/mathjs@v7.1.0-TyzdyALBLfpK6JafBwu5/dist=es2020/mathjs"],(function(exports_10,context_10){var __moduleName=context_10&&context_10.id,exportedNames_1={default:!0};function exportStar_1(m){var exports={};for(var n in m)"default"===n||exportedNames_1.hasOwnProperty(n)||(exports[n]=m[n]);exports_10(exports)}return{setters:[function(dist_es2020_1_1){exportStar_1(dist_es2020_1_1),exports_10({default:dist_es2020_1_1.default})}],execute:function(){}}})),System.register("file:///Users/dio/dev/math-notes/js/lib/math",["https://cdn.skypack.dev/mathjs"],(function(exports_11,context_11){var mathjs_1,__moduleName=context_11&&context_11.id;return{setters:[function(mathjs_1_1){mathjs_1=mathjs_1_1}],execute:function(){exports_11("create",mathjs_1.create),exports_11("all",mathjs_1.all),exports_11("default",{create:mathjs_1.create,all:mathjs_1.all})}}}));const __exp=__instantiate("file:///Users/dio/dev/math-notes/js/lib/math",!1);export const create=__exp.create;export const all=__exp.all;export default __exp.default;